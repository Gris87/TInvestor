// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: operations.proto
// Protobuf C++ Version: 5.29.3

#include "operations.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tinkoff {
namespace pub {
namespace invest {
namespace api {
namespace contract {
namespace v1 {

inline constexpr WithdrawLimitsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WithdrawLimitsRequest::WithdrawLimitsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WithdrawLimitsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WithdrawLimitsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WithdrawLimitsRequestDefaultTypeInternal() {}
  union {
    WithdrawLimitsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WithdrawLimitsRequestDefaultTypeInternal _WithdrawLimitsRequest_default_instance_;

inline constexpr PositionsSubscriptionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_status_{static_cast< ::tinkoff::pub::invest::api::contract::v1::PositionsAccountSubscriptionStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsSubscriptionStatus::PositionsSubscriptionStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionsSubscriptionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsSubscriptionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsSubscriptionStatusDefaultTypeInternal() {}
  union {
    PositionsSubscriptionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsSubscriptionStatusDefaultTypeInternal _PositionsSubscriptionStatus_default_instance_;

inline constexpr PositionsSecurities::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blocked_{::int64_t{0}},
        balance_{::int64_t{0}},
        exchange_blocked_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsSecurities::PositionsSecurities(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionsSecuritiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsSecuritiesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsSecuritiesDefaultTypeInternal() {}
  union {
    PositionsSecurities _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsSecuritiesDefaultTypeInternal _PositionsSecurities_default_instance_;

inline constexpr PositionsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsRequest::PositionsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsRequestDefaultTypeInternal() {}
  union {
    PositionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsRequestDefaultTypeInternal _PositionsRequest_default_instance_;

inline constexpr PositionsOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blocked_{::int64_t{0}},
        balance_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsOptions::PositionsOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionsOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsOptionsDefaultTypeInternal() {}
  union {
    PositionsOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsOptionsDefaultTypeInternal _PositionsOptions_default_instance_;

inline constexpr PositionsFutures::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blocked_{::int64_t{0}},
        balance_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsFutures::PositionsFutures(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionsFuturesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsFuturesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsFuturesDefaultTypeInternal() {}
  union {
    PositionsFutures _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsFuturesDefaultTypeInternal _PositionsFutures_default_instance_;

inline constexpr PortfolioRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_{static_cast< ::tinkoff::pub::invest::api::contract::v1::PortfolioRequest_CurrencyRequest >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioRequest::PortfolioRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PortfolioRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioRequestDefaultTypeInternal() {}
  union {
    PortfolioRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioRequestDefaultTypeInternal _PortfolioRequest_default_instance_;

inline constexpr GetDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetDividendsForeignIssuerReportRequest::GetDividendsForeignIssuerReportRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetDividendsForeignIssuerReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDividendsForeignIssuerReportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDividendsForeignIssuerReportRequestDefaultTypeInternal() {}
  union {
    GetDividendsForeignIssuerReportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDividendsForeignIssuerReportRequestDefaultTypeInternal _GetDividendsForeignIssuerReportRequest_default_instance_;

inline constexpr GetBrokerReportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetBrokerReportRequest::GetBrokerReportRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetBrokerReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBrokerReportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBrokerReportRequestDefaultTypeInternal() {}
  union {
    GetBrokerReportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBrokerReportRequestDefaultTypeInternal _GetBrokerReportRequest_default_instance_;

inline constexpr GenerateDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateDividendsForeignIssuerReportResponse::GenerateDividendsForeignIssuerReportResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenerateDividendsForeignIssuerReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateDividendsForeignIssuerReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateDividendsForeignIssuerReportResponseDefaultTypeInternal() {}
  union {
    GenerateDividendsForeignIssuerReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateDividendsForeignIssuerReportResponseDefaultTypeInternal _GenerateDividendsForeignIssuerReportResponse_default_instance_;

inline constexpr GenerateBrokerReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateBrokerReportResponse::GenerateBrokerReportResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenerateBrokerReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateBrokerReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateBrokerReportResponseDefaultTypeInternal() {}
  union {
    GenerateBrokerReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateBrokerReportResponseDefaultTypeInternal _GenerateBrokerReportResponse_default_instance_;

inline constexpr AccountSubscriptionStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_status_{static_cast< ::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AccountSubscriptionStatus::AccountSubscriptionStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AccountSubscriptionStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountSubscriptionStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountSubscriptionStatusDefaultTypeInternal() {}
  union {
    AccountSubscriptionStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountSubscriptionStatusDefaultTypeInternal _AccountSubscriptionStatus_default_instance_;

inline constexpr WithdrawLimitsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : money_{},
        blocked_{},
        blocked_guarantee_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WithdrawLimitsResponse::WithdrawLimitsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WithdrawLimitsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WithdrawLimitsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WithdrawLimitsResponseDefaultTypeInternal() {}
  union {
    WithdrawLimitsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WithdrawLimitsResponseDefaultTypeInternal _WithdrawLimitsResponse_default_instance_;

inline constexpr VirtualPortfolioPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{nullptr},
        average_position_price_{nullptr},
        expected_yield_{nullptr},
        expected_yield_fifo_{nullptr},
        expire_date_{nullptr},
        current_price_{nullptr},
        average_position_price_fifo_{nullptr},
        daily_yield_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VirtualPortfolioPosition::VirtualPortfolioPosition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VirtualPortfolioPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VirtualPortfolioPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VirtualPortfolioPositionDefaultTypeInternal() {}
  union {
    VirtualPortfolioPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VirtualPortfolioPositionDefaultTypeInternal _VirtualPortfolioPosition_default_instance_;

inline constexpr PositionsSubscriptionResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accounts_{},
        tracking_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stream_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsSubscriptionResult::PositionsSubscriptionResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionsSubscriptionResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsSubscriptionResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsSubscriptionResultDefaultTypeInternal() {}
  union {
    PositionsSubscriptionResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsSubscriptionResultDefaultTypeInternal _PositionsSubscriptionResult_default_instance_;

inline constexpr PositionsStreamRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accounts_{},
        ping_settings_{nullptr},
        with_initial_positions_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsStreamRequest::PositionsStreamRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionsStreamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsStreamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsStreamRequestDefaultTypeInternal() {}
  union {
    PositionsStreamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsStreamRequestDefaultTypeInternal _PositionsStreamRequest_default_instance_;

inline constexpr PositionsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : money_{},
        blocked_{},
        securities_{},
        futures_{},
        options_{},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        limits_loading_in_progress_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsResponse::PositionsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsResponseDefaultTypeInternal() {}
  union {
    PositionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsResponseDefaultTypeInternal _PositionsResponse_default_instance_;

inline constexpr PositionsMoney::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        available_value_{nullptr},
        blocked_value_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsMoney::PositionsMoney(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionsMoneyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsMoneyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsMoneyDefaultTypeInternal() {}
  union {
    PositionsMoney _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsMoneyDefaultTypeInternal _PositionsMoney_default_instance_;

inline constexpr PortfolioSubscriptionResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accounts_{},
        tracking_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stream_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioSubscriptionResult::PortfolioSubscriptionResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PortfolioSubscriptionResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioSubscriptionResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioSubscriptionResultDefaultTypeInternal() {}
  union {
    PortfolioSubscriptionResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioSubscriptionResultDefaultTypeInternal _PortfolioSubscriptionResult_default_instance_;

inline constexpr PortfolioStreamRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accounts_{},
        ping_settings_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioStreamRequest::PortfolioStreamRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PortfolioStreamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioStreamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioStreamRequestDefaultTypeInternal() {}
  union {
    PortfolioStreamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioStreamRequestDefaultTypeInternal _PortfolioStreamRequest_default_instance_;

inline constexpr PortfolioPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{nullptr},
        average_position_price_{nullptr},
        expected_yield_{nullptr},
        current_nkd_{nullptr},
        average_position_price_pt_{nullptr},
        current_price_{nullptr},
        average_position_price_fifo_{nullptr},
        quantity_lots_{nullptr},
        blocked_lots_{nullptr},
        var_margin_{nullptr},
        expected_yield_fifo_{nullptr},
        daily_yield_{nullptr},
        blocked_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioPosition::PortfolioPosition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PortfolioPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioPositionDefaultTypeInternal() {}
  union {
    PortfolioPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioPositionDefaultTypeInternal _PortfolioPosition_default_instance_;

inline constexpr OperationsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr},
        state_{static_cast< ::tinkoff::pub::invest::api::contract::v1::OperationState >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OperationsRequest::OperationsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationsRequestDefaultTypeInternal() {}
  union {
    OperationsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationsRequestDefaultTypeInternal _OperationsRequest_default_instance_;

inline constexpr OperationTrade::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_time_{nullptr},
        price_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR OperationTrade::OperationTrade(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationTradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationTradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationTradeDefaultTypeInternal() {}
  union {
    OperationTrade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationTradeDefaultTypeInternal _OperationTrade_default_instance_;

inline constexpr OperationItemTrade::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        num_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_{nullptr},
        price_{nullptr},
        yield_{nullptr},
        yield_relative_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR OperationItemTrade::OperationItemTrade(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationItemTradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationItemTradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationItemTradeDefaultTypeInternal() {}
  union {
    OperationItemTrade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationItemTradeDefaultTypeInternal _OperationItemTrade_default_instance_;

inline constexpr GetOperationsByCursorRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        operation_types_{},
        _operation_types_cached_byte_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cursor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr},
        limit_{0},
        state_{static_cast< ::tinkoff::pub::invest::api::contract::v1::OperationState >(0)},
        without_commissions_{false},
        without_trades_{false},
        without_overnights_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetOperationsByCursorRequest::GetOperationsByCursorRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetOperationsByCursorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOperationsByCursorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOperationsByCursorRequestDefaultTypeInternal() {}
  union {
    GetOperationsByCursorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOperationsByCursorRequestDefaultTypeInternal _GetOperationsByCursorRequest_default_instance_;

inline constexpr GenerateDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateDividendsForeignIssuerReportRequest::GenerateDividendsForeignIssuerReportRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenerateDividendsForeignIssuerReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateDividendsForeignIssuerReportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateDividendsForeignIssuerReportRequestDefaultTypeInternal() {}
  union {
    GenerateDividendsForeignIssuerReportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateDividendsForeignIssuerReportRequestDefaultTypeInternal _GenerateDividendsForeignIssuerReportRequest_default_instance_;

inline constexpr GenerateBrokerReportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateBrokerReportRequest::GenerateBrokerReportRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenerateBrokerReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateBrokerReportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateBrokerReportRequestDefaultTypeInternal() {}
  union {
    GenerateBrokerReportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateBrokerReportRequestDefaultTypeInternal _GenerateBrokerReportRequest_default_instance_;

inline constexpr DividendsForeignIssuerReport::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        security_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        isin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        issuer_country_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        record_date_{nullptr},
        payment_date_{nullptr},
        dividend_{nullptr},
        external_commission_{nullptr},
        dividend_gross_{nullptr},
        tax_{nullptr},
        dividend_amount_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR DividendsForeignIssuerReport::DividendsForeignIssuerReport(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DividendsForeignIssuerReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DividendsForeignIssuerReportDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DividendsForeignIssuerReportDefaultTypeInternal() {}
  union {
    DividendsForeignIssuerReport _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DividendsForeignIssuerReportDefaultTypeInternal _DividendsForeignIssuerReport_default_instance_;

inline constexpr ChildOperationItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payment_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ChildOperationItem::ChildOperationItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChildOperationItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChildOperationItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChildOperationItemDefaultTypeInternal() {}
  union {
    ChildOperationItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChildOperationItemDefaultTypeInternal _ChildOperationItem_default_instance_;

inline constexpr BrokerReport::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        execute_sign_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        class_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        direction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ticker_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        party_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        broker_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        separate_agreement_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        separate_agreement_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        separate_agreement_date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        delivery_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trade_datetime_{nullptr},
        price_{nullptr},
        order_amount_{nullptr},
        aci_value_{nullptr},
        total_order_amount_{nullptr},
        broker_commission_{nullptr},
        exchange_commission_{nullptr},
        exchange_clearing_commission_{nullptr},
        repo_rate_{nullptr},
        clear_value_date_{nullptr},
        sec_value_date_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR BrokerReport::BrokerReport(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BrokerReportDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrokerReportDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrokerReportDefaultTypeInternal() {}
  union {
    BrokerReport _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrokerReportDefaultTypeInternal _BrokerReport_default_instance_;

inline constexpr PositionData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        money_{},
        securities_{},
        futures_{},
        options_{},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PositionData::PositionData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDataDefaultTypeInternal() {}
  union {
    PositionData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDataDefaultTypeInternal _PositionData_default_instance_;

inline constexpr PortfolioResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        positions_{},
        virtual_positions_{},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_amount_shares_{nullptr},
        total_amount_bonds_{nullptr},
        total_amount_etf_{nullptr},
        total_amount_currencies_{nullptr},
        total_amount_futures_{nullptr},
        expected_yield_{nullptr},
        total_amount_options_{nullptr},
        total_amount_sp_{nullptr},
        total_amount_portfolio_{nullptr},
        daily_yield_{nullptr},
        daily_yield_relative_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioResponse::PortfolioResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PortfolioResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioResponseDefaultTypeInternal() {}
  union {
    PortfolioResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioResponseDefaultTypeInternal _PortfolioResponse_default_instance_;

inline constexpr OperationItemTrades::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trades_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OperationItemTrades::OperationItemTrades(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationItemTradesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationItemTradesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationItemTradesDefaultTypeInternal() {}
  union {
    OperationItemTrades _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationItemTradesDefaultTypeInternal _OperationItemTrades_default_instance_;

inline constexpr Operation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trades_{},
        child_operations_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_operation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        asset_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payment_{nullptr},
        price_{nullptr},
        date_{nullptr},
        quantity_{::int64_t{0}},
        quantity_rest_{::int64_t{0}},
        state_{static_cast< ::tinkoff::pub::invest::api::contract::v1::OperationState >(0)},
        operation_type_{static_cast< ::tinkoff::pub::invest::api::contract::v1::OperationType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Operation::Operation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationDefaultTypeInternal() {}
  union {
    Operation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationDefaultTypeInternal _Operation_default_instance_;

inline constexpr GetDividendsForeignIssuerRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GetDividendsForeignIssuerRequest::GetDividendsForeignIssuerRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetDividendsForeignIssuerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDividendsForeignIssuerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDividendsForeignIssuerRequestDefaultTypeInternal() {}
  union {
    GetDividendsForeignIssuerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDividendsForeignIssuerRequestDefaultTypeInternal _GetDividendsForeignIssuerRequest_default_instance_;

inline constexpr GetDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dividends_foreign_issuer_report_{},
        itemscount_{0},
        pagescount_{0},
        page_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetDividendsForeignIssuerReportResponse::GetDividendsForeignIssuerReportResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetDividendsForeignIssuerReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDividendsForeignIssuerReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDividendsForeignIssuerReportResponseDefaultTypeInternal() {}
  union {
    GetDividendsForeignIssuerReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDividendsForeignIssuerReportResponseDefaultTypeInternal _GetDividendsForeignIssuerReportResponse_default_instance_;

inline constexpr GetBrokerReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : broker_report_{},
        itemscount_{0},
        pagescount_{0},
        page_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetBrokerReportResponse::GetBrokerReportResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetBrokerReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBrokerReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBrokerReportResponseDefaultTypeInternal() {}
  union {
    GetBrokerReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBrokerReportResponseDefaultTypeInternal _GetBrokerReportResponse_default_instance_;

inline constexpr BrokerReportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BrokerReportRequest::BrokerReportRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BrokerReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrokerReportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrokerReportRequestDefaultTypeInternal() {}
  union {
    BrokerReportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrokerReportRequestDefaultTypeInternal _BrokerReportRequest_default_instance_;

inline constexpr PositionsStreamResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PositionsStreamResponse::PositionsStreamResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionsStreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionsStreamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionsStreamResponseDefaultTypeInternal() {}
  union {
    PositionsStreamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionsStreamResponseDefaultTypeInternal _PositionsStreamResponse_default_instance_;

inline constexpr PortfolioStreamResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioStreamResponse::PortfolioStreamResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PortfolioStreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioStreamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioStreamResponseDefaultTypeInternal() {}
  union {
    PortfolioStreamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioStreamResponseDefaultTypeInternal _PortfolioStreamResponse_default_instance_;

inline constexpr OperationsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : operations_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OperationsResponse::OperationsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationsResponseDefaultTypeInternal() {}
  union {
    OperationsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationsResponseDefaultTypeInternal _OperationsResponse_default_instance_;

inline constexpr OperationItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        child_operations_{},
        cursor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        broker_account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_operation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cancel_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        asset_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_{nullptr},
        payment_{nullptr},
        price_{nullptr},
        commission_{nullptr},
        yield_{nullptr},
        yield_relative_{nullptr},
        accrued_int_{nullptr},
        cancel_date_time_{nullptr},
        trades_info_{nullptr},
        type_{static_cast< ::tinkoff::pub::invest::api::contract::v1::OperationType >(0)},
        state_{static_cast< ::tinkoff::pub::invest::api::contract::v1::OperationState >(0)},
        quantity_{::int64_t{0}},
        quantity_rest_{::int64_t{0}},
        quantity_done_{::int64_t{0}},
        instrument_kind_{static_cast< ::tinkoff::pub::invest::api::contract::v1::InstrumentType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OperationItem::OperationItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OperationItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OperationItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OperationItemDefaultTypeInternal() {}
  union {
    OperationItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OperationItemDefaultTypeInternal _OperationItem_default_instance_;

inline constexpr GetDividendsForeignIssuerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GetDividendsForeignIssuerResponse::GetDividendsForeignIssuerResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetDividendsForeignIssuerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDividendsForeignIssuerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDividendsForeignIssuerResponseDefaultTypeInternal() {}
  union {
    GetDividendsForeignIssuerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDividendsForeignIssuerResponseDefaultTypeInternal _GetDividendsForeignIssuerResponse_default_instance_;

inline constexpr BrokerReportResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BrokerReportResponse::BrokerReportResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BrokerReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrokerReportResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrokerReportResponseDefaultTypeInternal() {}
  union {
    BrokerReportResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrokerReportResponseDefaultTypeInternal _BrokerReportResponse_default_instance_;

inline constexpr GetOperationsByCursorResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        next_cursor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        has_next_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetOperationsByCursorResponse::GetOperationsByCursorResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetOperationsByCursorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOperationsByCursorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOperationsByCursorResponseDefaultTypeInternal() {}
  union {
    GetOperationsByCursorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOperationsByCursorResponseDefaultTypeInternal _GetOperationsByCursorResponse_default_instance_;
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace pub
}  // namespace tinkoff
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_operations_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_operations_2eproto = nullptr;
const ::uint32_t
    TableStruct_operations_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationsRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationsRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationsRequest, _impl_.from_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationsRequest, _impl_.to_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationsRequest, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationsRequest, _impl_.figi_),
        ~0u,
        1,
        2,
        3,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationsResponse, _impl_.operations_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.parent_operation_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.currency_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.payment_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.quantity_rest_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.instrument_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.operation_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.trades_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.asset_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.position_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Operation, _impl_.child_operations_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationTrade, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationTrade, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationTrade, _impl_.trade_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationTrade, _impl_.date_time_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationTrade, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationTrade, _impl_.price_),
        ~0u,
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioRequest, _impl_.currency_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_shares_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_bonds_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_etf_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_currencies_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_futures_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.expected_yield_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.positions_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_options_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_sp_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.total_amount_portfolio_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.virtual_positions_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.daily_yield_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse, _impl_.daily_yield_relative_),
        0,
        1,
        2,
        3,
        4,
        5,
        ~0u,
        ~0u,
        6,
        7,
        8,
        ~0u,
        9,
        10,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsRequest, _impl_.account_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsResponse, _impl_.money_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsResponse, _impl_.blocked_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsResponse, _impl_.securities_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsResponse, _impl_.limits_loading_in_progress_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsResponse, _impl_.futures_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsResponse, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsResponse, _impl_.account_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsRequest, _impl_.account_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsResponse, _impl_.money_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsResponse, _impl_.blocked_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsResponse, _impl_.blocked_guarantee_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.instrument_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.average_position_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.expected_yield_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.current_nkd_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.average_position_price_pt_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.current_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.average_position_price_fifo_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.quantity_lots_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.blocked_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.blocked_lots_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.position_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.var_margin_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.expected_yield_fifo_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition, _impl_.daily_yield_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        ~0u,
        8,
        ~0u,
        ~0u,
        9,
        10,
        11,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.position_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.instrument_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.average_position_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.expected_yield_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.expected_yield_fifo_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.expire_date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.current_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.average_position_price_fifo_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition, _impl_.daily_yield_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSecurities, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSecurities, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSecurities, _impl_.blocked_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSecurities, _impl_.balance_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSecurities, _impl_.position_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSecurities, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSecurities, _impl_.exchange_blocked_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSecurities, _impl_.instrument_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsFutures, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsFutures, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsFutures, _impl_.blocked_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsFutures, _impl_.balance_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsFutures, _impl_.position_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsFutures, _impl_.instrument_uid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsOptions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsOptions, _impl_.position_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsOptions, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsOptions, _impl_.blocked_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsOptions, _impl_.balance_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReportRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReportRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReportRequest, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReportResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReportResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReportResponse, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest, _impl_.from_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest, _impl_.to_),
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportResponse, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportRequest, _impl_.page_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse, _impl_.broker_report_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse, _impl_.itemscount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse, _impl_.pagescount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse, _impl_.page_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.trade_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.order_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.execute_sign_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.trade_datetime_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.exchange_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.class_code_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.ticker_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.order_amount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.aci_value_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.total_order_amount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.broker_commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.exchange_commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.exchange_clearing_commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.repo_rate_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.party_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.clear_value_date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.sec_value_date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.broker_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.separate_agreement_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.separate_agreement_number_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.separate_agreement_date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReport, _impl_.delivery_type_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        ~0u,
        9,
        10,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerRequest, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerResponse, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest, _impl_.from_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest, _impl_.to_),
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest, _impl_.page_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse, _impl_.task_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse, _impl_.dividends_foreign_issuer_report_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse, _impl_.itemscount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse, _impl_.pagescount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse, _impl_.page_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.record_date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.payment_date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.security_name_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.isin_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.issuer_country_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.dividend_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.external_commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.dividend_gross_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.tax_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.dividend_amount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport, _impl_.currency_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        3,
        4,
        5,
        6,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioStreamRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioStreamRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioStreamRequest, _impl_.accounts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioStreamRequest, _impl_.ping_settings_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioStreamResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioStreamResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioStreamResponse, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionResult, _impl_.accounts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionResult, _impl_.tracking_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionResult, _impl_.stream_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::AccountSubscriptionStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::AccountSubscriptionStatus, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::AccountSubscriptionStatus, _impl_.subscription_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.instrument_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.from_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.to_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.cursor_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.operation_types_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.without_commissions_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.without_trades_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest, _impl_.without_overnights_),
        ~0u,
        0,
        2,
        3,
        1,
        4,
        ~0u,
        5,
        6,
        7,
        8,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorResponse, _impl_.has_next_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorResponse, _impl_.next_cursor_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorResponse, _impl_.items_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.cursor_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.broker_account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.parent_operation_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.instrument_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.instrument_kind_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.position_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.payment_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.yield_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.yield_relative_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.accrued_int_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.quantity_rest_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.quantity_done_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.cancel_date_time_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.cancel_reason_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.trades_info_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.asset_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItem, _impl_.child_operations_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        2,
        3,
        4,
        5,
        6,
        ~0u,
        ~0u,
        ~0u,
        7,
        ~0u,
        8,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItemTrades, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItemTrades, _impl_.trades_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItemTrade, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItemTrade, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItemTrade, _impl_.num_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItemTrade, _impl_.date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItemTrade, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItemTrade, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItemTrade, _impl_.yield_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::OperationItemTrade, _impl_.yield_relative_),
        ~0u,
        0,
        ~0u,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsStreamRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsStreamRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsStreamRequest, _impl_.accounts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsStreamRequest, _impl_.with_initial_positions_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsStreamRequest, _impl_.ping_settings_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsStreamResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsStreamResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsStreamResponse, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionResult, _impl_.accounts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionResult, _impl_.tracking_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionResult, _impl_.stream_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionStatus, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionStatus, _impl_.subscription_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionData, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionData, _impl_.money_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionData, _impl_.securities_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionData, _impl_.futures_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionData, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionData, _impl_.date_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsMoney, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsMoney, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsMoney, _impl_.available_value_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsMoney, _impl_.blocked_value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::ChildOperationItem, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::ChildOperationItem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::ChildOperationItem, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::ChildOperationItem, _impl_.payment_),
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::OperationsRequest)},
        {18, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::OperationsResponse)},
        {27, 53, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::Operation)},
        {71, 83, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::OperationTrade)},
        {87, 97, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PortfolioRequest)},
        {99, 121, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse)},
        {135, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PositionsRequest)},
        {144, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PositionsResponse)},
        {159, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsRequest)},
        {168, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsResponse)},
        {179, 204, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PortfolioPosition)},
        {221, 241, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition)},
        {253, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PositionsSecurities)},
        {268, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PositionsFutures)},
        {281, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PositionsOptions)},
        {293, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::BrokerReportRequest)},
        {304, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::BrokerReportResponse)},
        {315, 326, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest)},
        {329, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportResponse)},
        {338, 348, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportRequest)},
        {350, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse)},
        {362, 397, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::BrokerReport)},
        {424, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerRequest)},
        {435, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerResponse)},
        {446, 457, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest)},
        {460, 470, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest)},
        {472, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse)},
        {481, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse)},
        {493, 513, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport)},
        {525, 535, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PortfolioStreamRequest)},
        {537, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PortfolioStreamResponse)},
        {549, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionResult)},
        {560, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::AccountSubscriptionStatus)},
        {570, 589, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest)},
        {600, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorResponse)},
        {611, 647, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::OperationItem)},
        {675, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::OperationItemTrades)},
        {684, 698, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::OperationItemTrade)},
        {704, 715, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PositionsStreamRequest)},
        {718, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PositionsStreamResponse)},
        {731, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionResult)},
        {742, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionStatus)},
        {752, 766, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PositionData)},
        {772, 782, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::PositionsMoney)},
        {784, 794, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::ChildOperationItem)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tinkoff::pub::invest::api::contract::v1::_OperationsRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_OperationsResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_Operation_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_OperationTrade_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PortfolioRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PortfolioResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PositionsRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PositionsResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_WithdrawLimitsRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_WithdrawLimitsResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PortfolioPosition_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_VirtualPortfolioPosition_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PositionsSecurities_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PositionsFutures_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PositionsOptions_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_BrokerReportRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_BrokerReportResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GenerateBrokerReportRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GenerateBrokerReportResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GetBrokerReportRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GetBrokerReportResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_BrokerReport_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GetDividendsForeignIssuerRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GetDividendsForeignIssuerResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GenerateDividendsForeignIssuerReportRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GetDividendsForeignIssuerReportRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GenerateDividendsForeignIssuerReportResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GetDividendsForeignIssuerReportResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_DividendsForeignIssuerReport_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PortfolioStreamRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PortfolioStreamResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PortfolioSubscriptionResult_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_AccountSubscriptionStatus_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GetOperationsByCursorRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GetOperationsByCursorResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_OperationItem_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_OperationItemTrades_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_OperationItemTrade_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PositionsStreamRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PositionsStreamResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PositionsSubscriptionResult_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PositionsSubscriptionStatus_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PositionData_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_PositionsMoney_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_ChildOperationItem_default_instance_._instance,
};
const char descriptor_table_protodef_operations_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020operations.proto\022\"tinkoff.pub.invest.a"
    "pi.contract.v1\032\037google/protobuf/timestam"
    "p.proto\032\014common.proto\032\037google/api/field_"
    "behavior.proto\"\207\002\n\021OperationsRequest\022\030\n\n"
    "account_id\030\001 \001(\tB\004\342A\001\002\022-\n\004from\030\002 \001(\0132\032.g"
    "oogle.protobuf.TimestampH\000\210\001\001\022+\n\002to\030\003 \001("
    "\0132\032.google.protobuf.TimestampH\001\210\001\001\022F\n\005st"
    "ate\030\004 \001(\01622.tinkoff.pub.invest.api.contr"
    "act.v1.OperationStateH\002\210\001\001\022\021\n\004figi\030\005 \001(\t"
    "H\003\210\001\001B\007\n\005_fromB\005\n\003_toB\010\n\006_stateB\007\n\005_figi"
    "\"W\n\022OperationsResponse\022A\n\noperations\030\001 \003"
    "(\0132-.tinkoff.pub.invest.api.contract.v1."
    "Operation\"\263\005\n\tOperation\022\n\n\002id\030\001 \001(\t\022\033\n\023p"
    "arent_operation_id\030\002 \001(\t\022\020\n\010currency\030\003 \001"
    "(\t\022\?\n\007payment\030\004 \001(\0132..tinkoff.pub.invest"
    ".api.contract.v1.MoneyValue\022=\n\005price\030\005 \001"
    "(\0132..tinkoff.pub.invest.api.contract.v1."
    "MoneyValue\022A\n\005state\030\006 \001(\01622.tinkoff.pub."
    "invest.api.contract.v1.OperationState\022\020\n"
    "\010quantity\030\007 \001(\003\022\025\n\rquantity_rest\030\010 \001(\003\022\014"
    "\n\004figi\030\t \001(\t\022\027\n\017instrument_type\030\n \001(\t\022(\n"
    "\004date\030\013 \001(\0132\032.google.protobuf.Timestamp\022"
    "\014\n\004type\030\014 \001(\t\022I\n\016operation_type\030\r \001(\01621."
    "tinkoff.pub.invest.api.contract.v1.Opera"
    "tionType\022B\n\006trades\030\016 \003(\01322.tinkoff.pub.i"
    "nvest.api.contract.v1.OperationTrade\022\021\n\t"
    "asset_uid\030\020 \001(\t\022\024\n\014position_uid\030\021 \001(\t\022\026\n"
    "\016instrument_uid\030\022 \001(\t\022P\n\020child_operation"
    "s\030\023 \003(\01326.tinkoff.pub.invest.api.contrac"
    "t.v1.ChildOperationItem\"\242\001\n\016OperationTra"
    "de\022\020\n\010trade_id\030\001 \001(\t\022-\n\tdate_time\030\002 \001(\0132"
    "\032.google.protobuf.Timestamp\022\020\n\010quantity\030"
    "\003 \001(\003\022=\n\005price\030\004 \001(\0132..tinkoff.pub.inves"
    "t.api.contract.v1.MoneyValue\"\304\001\n\020Portfol"
    "ioRequest\022\030\n\naccount_id\030\001 \001(\tB\004\342A\001\002\022[\n\010c"
    "urrency\030\002 \001(\0162D.tinkoff.pub.invest.api.c"
    "ontract.v1.PortfolioRequest.CurrencyRequ"
    "estH\000\210\001\001\",\n\017CurrencyRequest\022\007\n\003RUB\020\000\022\007\n\003"
    "USD\020\001\022\007\n\003EUR\020\002B\013\n\t_currency\"\214\010\n\021Portfoli"
    "oResponse\022K\n\023total_amount_shares\030\001 \001(\0132."
    ".tinkoff.pub.invest.api.contract.v1.Mone"
    "yValue\022J\n\022total_amount_bonds\030\002 \001(\0132..tin"
    "koff.pub.invest.api.contract.v1.MoneyVal"
    "ue\022H\n\020total_amount_etf\030\003 \001(\0132..tinkoff.p"
    "ub.invest.api.contract.v1.MoneyValue\022O\n\027"
    "total_amount_currencies\030\004 \001(\0132..tinkoff."
    "pub.invest.api.contract.v1.MoneyValue\022L\n"
    "\024total_amount_futures\030\005 \001(\0132..tinkoff.pu"
    "b.invest.api.contract.v1.MoneyValue\022E\n\016e"
    "xpected_yield\030\006 \001(\0132-.tinkoff.pub.invest"
    ".api.contract.v1.Quotation\022H\n\tpositions\030"
    "\007 \003(\01325.tinkoff.pub.invest.api.contract."
    "v1.PortfolioPosition\022\022\n\naccount_id\030\010 \001(\t"
    "\022L\n\024total_amount_options\030\t \001(\0132..tinkoff"
    ".pub.invest.api.contract.v1.MoneyValue\022G"
    "\n\017total_amount_sp\030\n \001(\0132..tinkoff.pub.in"
    "vest.api.contract.v1.MoneyValue\022N\n\026total"
    "_amount_portfolio\030\013 \001(\0132..tinkoff.pub.in"
    "vest.api.contract.v1.MoneyValue\022W\n\021virtu"
    "al_positions\030\014 \003(\0132<.tinkoff.pub.invest."
    "api.contract.v1.VirtualPortfolioPosition"
    "\022C\n\013daily_yield\030\017 \001(\0132..tinkoff.pub.inve"
    "st.api.contract.v1.MoneyValue\022K\n\024daily_y"
    "ield_relative\030\020 \001(\0132-.tinkoff.pub.invest"
    ".api.contract.v1.Quotation\",\n\020PositionsR"
    "equest\022\030\n\naccount_id\030\001 \001(\tB\004\342A\001\002\"\246\003\n\021Pos"
    "itionsResponse\022=\n\005money\030\001 \003(\0132..tinkoff."
    "pub.invest.api.contract.v1.MoneyValue\022\?\n"
    "\007blocked\030\002 \003(\0132..tinkoff.pub.invest.api."
    "contract.v1.MoneyValue\022K\n\nsecurities\030\003 \003"
    "(\01327.tinkoff.pub.invest.api.contract.v1."
    "PositionsSecurities\022\"\n\032limits_loading_in"
    "_progress\030\004 \001(\010\022E\n\007futures\030\005 \003(\01324.tinko"
    "ff.pub.invest.api.contract.v1.PositionsF"
    "utures\022E\n\007options\030\006 \003(\01324.tinkoff.pub.in"
    "vest.api.contract.v1.PositionsOptions\022\022\n"
    "\naccount_id\030\017 \001(\t\"1\n\025WithdrawLimitsReque"
    "st\022\030\n\naccount_id\030\001 \001(\tB\004\342A\001\002\"\343\001\n\026Withdra"
    "wLimitsResponse\022=\n\005money\030\001 \003(\0132..tinkoff"
    ".pub.invest.api.contract.v1.MoneyValue\022\?"
    "\n\007blocked\030\002 \003(\0132..tinkoff.pub.invest.api"
    ".contract.v1.MoneyValue\022I\n\021blocked_guara"
    "ntee\030\003 \003(\0132..tinkoff.pub.invest.api.cont"
    "ract.v1.MoneyValue\"\354\007\n\021PortfolioPosition"
    "\022\014\n\004figi\030\001 \001(\t\022\027\n\017instrument_type\030\002 \001(\t\022"
    "\?\n\010quantity\030\003 \001(\0132-.tinkoff.pub.invest.a"
    "pi.contract.v1.Quotation\022N\n\026average_posi"
    "tion_price\030\004 \001(\0132..tinkoff.pub.invest.ap"
    "i.contract.v1.MoneyValue\022E\n\016expected_yie"
    "ld\030\005 \001(\0132-.tinkoff.pub.invest.api.contra"
    "ct.v1.Quotation\022C\n\013current_nkd\030\006 \001(\0132..t"
    "inkoff.pub.invest.api.contract.v1.MoneyV"
    "alue\022T\n\031average_position_price_pt\030\007 \001(\0132"
    "-.tinkoff.pub.invest.api.contract.v1.Quo"
    "tationB\002\030\001\022E\n\rcurrent_price\030\010 \001(\0132..tink"
    "off.pub.invest.api.contract.v1.MoneyValu"
    "e\022S\n\033average_position_price_fifo\030\t \001(\0132."
    ".tinkoff.pub.invest.api.contract.v1.Mone"
    "yValue\022H\n\rquantity_lots\030\n \001(\0132-.tinkoff."
    "pub.invest.api.contract.v1.QuotationB\002\030\001"
    "\022\017\n\007blocked\030\025 \001(\010\022C\n\014blocked_lots\030\026 \001(\0132"
    "-.tinkoff.pub.invest.api.contract.v1.Quo"
    "tation\022\024\n\014position_uid\030\030 \001(\t\022\026\n\016instrume"
    "nt_uid\030\031 \001(\t\022B\n\nvar_margin\030\032 \001(\0132..tinko"
    "ff.pub.invest.api.contract.v1.MoneyValue"
    "\022J\n\023expected_yield_fifo\030\033 \001(\0132-.tinkoff."
    "pub.invest.api.contract.v1.Quotation\022C\n\013"
    "daily_yield\030\037 \001(\0132..tinkoff.pub.invest.a"
    "pi.contract.v1.MoneyValue\"\245\005\n\030VirtualPor"
    "tfolioPosition\022\024\n\014position_uid\030\001 \001(\t\022\026\n\016"
    "instrument_uid\030\002 \001(\t\022\014\n\004figi\030\003 \001(\t\022\027\n\017in"
    "strument_type\030\004 \001(\t\022\?\n\010quantity\030\005 \001(\0132-."
    "tinkoff.pub.invest.api.contract.v1.Quota"
    "tion\022N\n\026average_position_price\030\006 \001(\0132..t"
    "inkoff.pub.invest.api.contract.v1.MoneyV"
    "alue\022E\n\016expected_yield\030\007 \001(\0132-.tinkoff.p"
    "ub.invest.api.contract.v1.Quotation\022J\n\023e"
    "xpected_yield_fifo\030\010 \001(\0132-.tinkoff.pub.i"
    "nvest.api.contract.v1.Quotation\022/\n\013expir"
    "e_date\030\t \001(\0132\032.google.protobuf.Timestamp"
    "\022E\n\rcurrent_price\030\n \001(\0132..tinkoff.pub.in"
    "vest.api.contract.v1.MoneyValue\022S\n\033avera"
    "ge_position_price_fifo\030\013 \001(\0132..tinkoff.p"
    "ub.invest.api.contract.v1.MoneyValue\022C\n\013"
    "daily_yield\030\037 \001(\0132..tinkoff.pub.invest.a"
    "pi.contract.v1.MoneyValue\"\246\001\n\023PositionsS"
    "ecurities\022\014\n\004figi\030\001 \001(\t\022\017\n\007blocked\030\002 \001(\003"
    "\022\017\n\007balance\030\003 \001(\003\022\024\n\014position_uid\030\004 \001(\t\022"
    "\026\n\016instrument_uid\030\005 \001(\t\022\030\n\020exchange_bloc"
    "ked\030\013 \001(\010\022\027\n\017instrument_type\030\020 \001(\t\"p\n\020Po"
    "sitionsFutures\022\014\n\004figi\030\001 \001(\t\022\017\n\007blocked\030"
    "\002 \001(\003\022\017\n\007balance\030\003 \001(\003\022\024\n\014position_uid\030\004"
    " \001(\t\022\026\n\016instrument_uid\030\005 \001(\t\"b\n\020Position"
    "sOptions\022\024\n\014position_uid\030\001 \001(\t\022\026\n\016instru"
    "ment_uid\030\002 \001(\t\022\017\n\007blocked\030\013 \001(\003\022\017\n\007balan"
    "ce\030\025 \001(\003\"\354\001\n\023BrokerReportRequest\022i\n\036gene"
    "rate_broker_report_request\030\001 \001(\0132\?.tinko"
    "ff.pub.invest.api.contract.v1.GenerateBr"
    "okerReportRequestH\000\022_\n\031get_broker_report"
    "_request\030\002 \001(\0132:.tinkoff.pub.invest.api."
    "contract.v1.GetBrokerReportRequestH\000B\t\n\007"
    "payload\"\361\001\n\024BrokerReportResponse\022k\n\037gene"
    "rate_broker_report_response\030\001 \001(\0132@.tink"
    "off.pub.invest.api.contract.v1.GenerateB"
    "rokerReportResponseH\000\022a\n\032get_broker_repo"
    "rt_response\030\002 \001(\0132;.tinkoff.pub.invest.a"
    "pi.contract.v1.GetBrokerReportResponseH\000"
    "B\t\n\007payload\"\225\001\n\033GenerateBrokerReportRequ"
    "est\022\030\n\naccount_id\030\001 \001(\tB\004\342A\001\002\022.\n\004from\030\002 "
    "\001(\0132\032.google.protobuf.TimestampB\004\342A\001\002\022,\n"
    "\002to\030\003 \001(\0132\032.google.protobuf.TimestampB\004\342"
    "A\001\002\"/\n\034GenerateBrokerReportResponse\022\017\n\007t"
    "ask_id\030\001 \001(\t\"K\n\026GetBrokerReportRequest\022\025"
    "\n\007task_id\030\001 \001(\tB\004\342A\001\002\022\021\n\004page\030\002 \001(\005H\000\210\001\001"
    "B\007\n\005_page\"\230\001\n\027GetBrokerReportResponse\022G\n"
    "\rbroker_report\030\001 \003(\01320.tinkoff.pub.inves"
    "t.api.contract.v1.BrokerReport\022\022\n\nitemsC"
    "ount\030\002 \001(\005\022\022\n\npagesCount\030\003 \001(\005\022\014\n\004page\030\004"
    " \001(\005\"\302\010\n\014BrokerReport\022\020\n\010trade_id\030\001 \001(\t\022"
    "\020\n\010order_id\030\002 \001(\t\022\014\n\004figi\030\003 \001(\t\022\024\n\014execu"
    "te_sign\030\004 \001(\t\0222\n\016trade_datetime\030\005 \001(\0132\032."
    "google.protobuf.Timestamp\022\020\n\010exchange\030\006 "
    "\001(\t\022\022\n\nclass_code\030\007 \001(\t\022\021\n\tdirection\030\010 \001"
    "(\t\022\014\n\004name\030\t \001(\t\022\016\n\006ticker\030\n \001(\t\022=\n\005pric"
    "e\030\013 \001(\0132..tinkoff.pub.invest.api.contrac"
    "t.v1.MoneyValue\022\020\n\010quantity\030\014 \001(\003\022D\n\014ord"
    "er_amount\030\r \001(\0132..tinkoff.pub.invest.api"
    ".contract.v1.MoneyValue\022@\n\taci_value\030\016 \001"
    "(\0132-.tinkoff.pub.invest.api.contract.v1."
    "Quotation\022J\n\022total_order_amount\030\017 \001(\0132.."
    "tinkoff.pub.invest.api.contract.v1.Money"
    "Value\022I\n\021broker_commission\030\020 \001(\0132..tinko"
    "ff.pub.invest.api.contract.v1.MoneyValue"
    "\022K\n\023exchange_commission\030\021 \001(\0132..tinkoff."
    "pub.invest.api.contract.v1.MoneyValue\022T\n"
    "\034exchange_clearing_commission\030\022 \001(\0132..ti"
    "nkoff.pub.invest.api.contract.v1.MoneyVa"
    "lue\022@\n\trepo_rate\030\023 \001(\0132-.tinkoff.pub.inv"
    "est.api.contract.v1.Quotation\022\r\n\005party\030\024"
    " \001(\t\0224\n\020clear_value_date\030\025 \001(\0132\032.google."
    "protobuf.Timestamp\0222\n\016sec_value_date\030\026 \001"
    "(\0132\032.google.protobuf.Timestamp\022\025\n\rbroker"
    "_status\030\027 \001(\t\022\037\n\027separate_agreement_type"
    "\030\030 \001(\t\022!\n\031separate_agreement_number\030\031 \001("
    "\t\022\037\n\027separate_agreement_date\030\032 \001(\t\022\025\n\rde"
    "livery_type\030\033 \001(\t\"\241\002\n GetDividendsForeig"
    "nIssuerRequest\022}\n\"generate_div_foreign_i"
    "ssuer_report\030\001 \001(\0132O.tinkoff.pub.invest."
    "api.contract.v1.GenerateDividendsForeign"
    "IssuerReportRequestH\000\022s\n\035get_div_foreign"
    "_issuer_report\030\002 \001(\0132J.tinkoff.pub.inves"
    "t.api.contract.v1.GetDividendsForeignIss"
    "uerReportRequestH\000B\t\n\007payload\"\252\002\n!GetDiv"
    "idendsForeignIssuerResponse\022\207\001\n+generate"
    "_div_foreign_issuer_report_response\030\001 \001("
    "\0132P.tinkoff.pub.invest.api.contract.v1.G"
    "enerateDividendsForeignIssuerReportRespo"
    "nseH\000\022p\n\031div_foreign_issuer_report\030\002 \001(\013"
    "2K.tinkoff.pub.invest.api.contract.v1.Ge"
    "tDividendsForeignIssuerReportResponseH\000B"
    "\t\n\007payload\"\245\001\n+GenerateDividendsForeignI"
    "ssuerReportRequest\022\030\n\naccount_id\030\001 \001(\tB\004"
    "\342A\001\002\022.\n\004from\030\002 \001(\0132\032.google.protobuf.Tim"
    "estampB\004\342A\001\002\022,\n\002to\030\003 \001(\0132\032.google.protob"
    "uf.TimestampB\004\342A\001\002\"[\n&GetDividendsForeig"
    "nIssuerReportRequest\022\025\n\007task_id\030\001 \001(\tB\004\342"
    "A\001\002\022\021\n\004page\030\002 \001(\005H\000\210\001\001B\007\n\005_page\"\?\n,Gener"
    "ateDividendsForeignIssuerReportResponse\022"
    "\017\n\007task_id\030\001 \001(\t\"\312\001\n\'GetDividendsForeign"
    "IssuerReportResponse\022i\n\037dividends_foreig"
    "n_issuer_report\030\001 \003(\0132@.tinkoff.pub.inve"
    "st.api.contract.v1.DividendsForeignIssue"
    "rReport\022\022\n\nitemsCount\030\002 \001(\005\022\022\n\npagesCoun"
    "t\030\003 \001(\005\022\014\n\004page\030\004 \001(\005\"\272\004\n\034DividendsForei"
    "gnIssuerReport\022/\n\013record_date\030\001 \001(\0132\032.go"
    "ogle.protobuf.Timestamp\0220\n\014payment_date\030"
    "\002 \001(\0132\032.google.protobuf.Timestamp\022\025\n\rsec"
    "urity_name\030\003 \001(\t\022\014\n\004isin\030\004 \001(\t\022\026\n\016issuer"
    "_country\030\005 \001(\t\022\020\n\010quantity\030\006 \001(\003\022\?\n\010divi"
    "dend\030\007 \001(\0132-.tinkoff.pub.invest.api.cont"
    "ract.v1.Quotation\022J\n\023external_commission"
    "\030\010 \001(\0132-.tinkoff.pub.invest.api.contract"
    ".v1.Quotation\022E\n\016dividend_gross\030\t \001(\0132-."
    "tinkoff.pub.invest.api.contract.v1.Quota"
    "tion\022:\n\003tax\030\n \001(\0132-.tinkoff.pub.invest.a"
    "pi.contract.v1.Quotation\022F\n\017dividend_amo"
    "unt\030\013 \001(\0132-.tinkoff.pub.invest.api.contr"
    "act.v1.Quotation\022\020\n\010currency\030\014 \001(\t\"x\n\026Po"
    "rtfolioStreamRequest\022\020\n\010accounts\030\001 \003(\t\022L"
    "\n\rping_settings\030\017 \001(\01325.tinkoff.pub.inve"
    "st.api.contract.v1.PingDelaySettings\"\204\002\n"
    "\027PortfolioStreamResponse\022X\n\rsubscription"
    "s\030\001 \001(\0132\?.tinkoff.pub.invest.api.contrac"
    "t.v1.PortfolioSubscriptionResultH\000\022J\n\tpo"
    "rtfolio\030\002 \001(\01325.tinkoff.pub.invest.api.c"
    "ontract.v1.PortfolioResponseH\000\0228\n\004ping\030\003"
    " \001(\0132(.tinkoff.pub.invest.api.contract.v"
    "1.PingH\000B\t\n\007payload\"\226\001\n\033PortfolioSubscri"
    "ptionResult\022O\n\010accounts\030\001 \003(\0132=.tinkoff."
    "pub.invest.api.contract.v1.AccountSubscr"
    "iptionStatus\022\023\n\013tracking_id\030\007 \001(\t\022\021\n\tstr"
    "eam_id\030\010 \001(\t\"\215\001\n\031AccountSubscriptionStat"
    "us\022\022\n\naccount_id\030\001 \001(\t\022\\\n\023subscription_s"
    "tatus\030\006 \001(\0162\?.tinkoff.pub.invest.api.con"
    "tract.v1.PortfolioSubscriptionStatus\"\320\004\n"
    "\034GetOperationsByCursorRequest\022\030\n\naccount"
    "_id\030\001 \001(\tB\004\342A\001\002\022\032\n\rinstrument_id\030\002 \001(\tH\000"
    "\210\001\001\022-\n\004from\030\006 \001(\0132\032.google.protobuf.Time"
    "stampH\001\210\001\001\022+\n\002to\030\007 \001(\0132\032.google.protobuf"
    ".TimestampH\002\210\001\001\022\023\n\006cursor\030\013 \001(\tH\003\210\001\001\022\022\n\005"
    "limit\030\014 \001(\005H\004\210\001\001\022J\n\017operation_types\030\r \003("
    "\01621.tinkoff.pub.invest.api.contract.v1.O"
    "perationType\022F\n\005state\030\016 \001(\01622.tinkoff.pu"
    "b.invest.api.contract.v1.OperationStateH"
    "\005\210\001\001\022 \n\023without_commissions\030\017 \001(\010H\006\210\001\001\022\033"
    "\n\016without_trades\030\020 \001(\010H\007\210\001\001\022\037\n\022without_o"
    "vernights\030\021 \001(\010H\010\210\001\001B\020\n\016_instrument_idB\007"
    "\n\005_fromB\005\n\003_toB\t\n\007_cursorB\010\n\006_limitB\010\n\006_"
    "stateB\026\n\024_without_commissionsB\021\n\017_withou"
    "t_tradesB\025\n\023_without_overnights\"\210\001\n\035GetO"
    "perationsByCursorResponse\022\020\n\010has_next\030\001 "
    "\001(\010\022\023\n\013next_cursor\030\002 \001(\t\022@\n\005items\030\006 \003(\0132"
    "1.tinkoff.pub.invest.api.contract.v1.Ope"
    "rationItem\"\245\t\n\rOperationItem\022\016\n\006cursor\030\001"
    " \001(\t\022\031\n\021broker_account_id\030\006 \001(\t\022\n\n\002id\030\020 "
    "\001(\t\022\033\n\023parent_operation_id\030\021 \001(\t\022\014\n\004name"
    "\030\022 \001(\t\022(\n\004date\030\025 \001(\0132\032.google.protobuf.T"
    "imestamp\022\?\n\004type\030\026 \001(\01621.tinkoff.pub.inv"
    "est.api.contract.v1.OperationType\022\023\n\013des"
    "cription\030\027 \001(\t\022A\n\005state\030\030 \001(\01622.tinkoff."
    "pub.invest.api.contract.v1.OperationStat"
    "e\022\026\n\016instrument_uid\030\037 \001(\t\022\014\n\004figi\030  \001(\t\022"
    "\027\n\017instrument_type\030! \001(\t\022K\n\017instrument_k"
    "ind\030\" \001(\01622.tinkoff.pub.invest.api.contr"
    "act.v1.InstrumentType\022\024\n\014position_uid\030# "
    "\001(\t\022\?\n\007payment\030) \001(\0132..tinkoff.pub.inves"
    "t.api.contract.v1.MoneyValue\022=\n\005price\030* "
    "\001(\0132..tinkoff.pub.invest.api.contract.v1"
    ".MoneyValue\022B\n\ncommission\030+ \001(\0132..tinkof"
    "f.pub.invest.api.contract.v1.MoneyValue\022"
    "=\n\005yield\030, \001(\0132..tinkoff.pub.invest.api."
    "contract.v1.MoneyValue\022E\n\016yield_relative"
    "\030- \001(\0132-.tinkoff.pub.invest.api.contract"
    ".v1.Quotation\022C\n\013accrued_int\030. \001(\0132..tin"
    "koff.pub.invest.api.contract.v1.MoneyVal"
    "ue\022\020\n\010quantity\0303 \001(\003\022\025\n\rquantity_rest\0304 "
    "\001(\003\022\025\n\rquantity_done\0305 \001(\003\0224\n\020cancel_dat"
    "e_time\0308 \001(\0132\032.google.protobuf.Timestamp"
    "\022\025\n\rcancel_reason\0309 \001(\t\022L\n\013trades_info\030="
    " \001(\01327.tinkoff.pub.invest.api.contract.v"
    "1.OperationItemTrades\022\021\n\tasset_uid\030@ \001(\t"
    "\022P\n\020child_operations\030A \003(\01326.tinkoff.pub"
    ".invest.api.contract.v1.ChildOperationIt"
    "em\"]\n\023OperationItemTrades\022F\n\006trades\030\006 \003("
    "\01326.tinkoff.pub.invest.api.contract.v1.O"
    "perationItemTrade\"\242\002\n\022OperationItemTrade"
    "\022\013\n\003num\030\001 \001(\t\022(\n\004date\030\006 \001(\0132\032.google.pro"
    "tobuf.Timestamp\022\020\n\010quantity\030\013 \001(\003\022=\n\005pri"
    "ce\030\020 \001(\0132..tinkoff.pub.invest.api.contra"
    "ct.v1.MoneyValue\022=\n\005yield\030\025 \001(\0132..tinkof"
    "f.pub.invest.api.contract.v1.MoneyValue\022"
    "E\n\016yield_relative\030\026 \001(\0132-.tinkoff.pub.in"
    "vest.api.contract.v1.Quotation\"\230\001\n\026Posit"
    "ionsStreamRequest\022\020\n\010accounts\030\001 \003(\t\022\036\n\026w"
    "ith_initial_positions\030\003 \001(\010\022L\n\rping_sett"
    "ings\030\017 \001(\01325.tinkoff.pub.invest.api.cont"
    "ract.v1.PingDelaySettings\"\322\002\n\027PositionsS"
    "treamResponse\022X\n\rsubscriptions\030\001 \001(\0132\?.t"
    "inkoff.pub.invest.api.contract.v1.Positi"
    "onsSubscriptionResultH\000\022D\n\010position\030\002 \001("
    "\01320.tinkoff.pub.invest.api.contract.v1.P"
    "ositionDataH\000\0228\n\004ping\030\003 \001(\0132(.tinkoff.pu"
    "b.invest.api.contract.v1.PingH\000\022R\n\021initi"
    "al_positions\030\005 \001(\01325.tinkoff.pub.invest."
    "api.contract.v1.PositionsResponseH\000B\t\n\007p"
    "ayload\"\230\001\n\033PositionsSubscriptionResult\022Q"
    "\n\010accounts\030\001 \003(\0132\?.tinkoff.pub.invest.ap"
    "i.contract.v1.PositionsSubscriptionStatu"
    "s\022\023\n\013tracking_id\030\007 \001(\t\022\021\n\tstream_id\030\010 \001("
    "\t\"\226\001\n\033PositionsSubscriptionStatus\022\022\n\nacc"
    "ount_id\030\001 \001(\t\022c\n\023subscription_status\030\006 \001"
    "(\0162F.tinkoff.pub.invest.api.contract.v1."
    "PositionsAccountSubscriptionStatus\"\352\002\n\014P"
    "ositionData\022\022\n\naccount_id\030\001 \001(\t\022A\n\005money"
    "\030\002 \003(\01322.tinkoff.pub.invest.api.contract"
    ".v1.PositionsMoney\022K\n\nsecurities\030\003 \003(\01327"
    ".tinkoff.pub.invest.api.contract.v1.Posi"
    "tionsSecurities\022E\n\007futures\030\004 \003(\01324.tinko"
    "ff.pub.invest.api.contract.v1.PositionsF"
    "utures\022E\n\007options\030\005 \003(\01324.tinkoff.pub.in"
    "vest.api.contract.v1.PositionsOptions\022(\n"
    "\004date\030\006 \001(\0132\032.google.protobuf.Timestamp\""
    "\240\001\n\016PositionsMoney\022G\n\017available_value\030\001 "
    "\001(\0132..tinkoff.pub.invest.api.contract.v1"
    ".MoneyValue\022E\n\rblocked_value\030\002 \001(\0132..tin"
    "koff.pub.invest.api.contract.v1.MoneyVal"
    "ue\"m\n\022ChildOperationItem\022\026\n\016instrument_u"
    "id\030\001 \001(\t\022\?\n\007payment\030\002 \001(\0132..tinkoff.pub."
    "invest.api.contract.v1.MoneyValue*\213\001\n\016Op"
    "erationState\022\037\n\033OPERATION_STATE_UNSPECIF"
    "IED\020\000\022\034\n\030OPERATION_STATE_EXECUTED\020\001\022\034\n\030O"
    "PERATION_STATE_CANCELED\020\002\022\034\n\030OPERATION_S"
    "TATE_PROGRESS\020\003*\340\020\n\rOperationType\022\036\n\032OPE"
    "RATION_TYPE_UNSPECIFIED\020\000\022\030\n\024OPERATION_T"
    "YPE_INPUT\020\001\022\033\n\027OPERATION_TYPE_BOND_TAX\020\002"
    "\022$\n OPERATION_TYPE_OUTPUT_SECURITIES\020\003\022\034"
    "\n\030OPERATION_TYPE_OVERNIGHT\020\004\022\026\n\022OPERATIO"
    "N_TYPE_TAX\020\005\022&\n\"OPERATION_TYPE_BOND_REPA"
    "YMENT_FULL\020\006\022\034\n\030OPERATION_TYPE_SELL_CARD"
    "\020\007\022\037\n\033OPERATION_TYPE_DIVIDEND_TAX\020\010\022\031\n\025O"
    "PERATION_TYPE_OUTPUT\020\t\022!\n\035OPERATION_TYPE"
    "_BOND_REPAYMENT\020\n\022!\n\035OPERATION_TYPE_TAX_"
    "CORRECTION\020\013\022\036\n\032OPERATION_TYPE_SERVICE_F"
    "EE\020\014\022\036\n\032OPERATION_TYPE_BENEFIT_TAX\020\r\022\035\n\031"
    "OPERATION_TYPE_MARGIN_FEE\020\016\022\026\n\022OPERATION"
    "_TYPE_BUY\020\017\022\033\n\027OPERATION_TYPE_BUY_CARD\020\020"
    "\022#\n\037OPERATION_TYPE_INPUT_SECURITIES\020\021\022\036\n"
    "\032OPERATION_TYPE_SELL_MARGIN\020\022\022\035\n\031OPERATI"
    "ON_TYPE_BROKER_FEE\020\023\022\035\n\031OPERATION_TYPE_B"
    "UY_MARGIN\020\024\022\033\n\027OPERATION_TYPE_DIVIDEND\020\025"
    "\022\027\n\023OPERATION_TYPE_SELL\020\026\022\031\n\025OPERATION_T"
    "YPE_COUPON\020\027\022\036\n\032OPERATION_TYPE_SUCCESS_F"
    "EE\020\030\022$\n OPERATION_TYPE_DIVIDEND_TRANSFER"
    "\020\031\022%\n!OPERATION_TYPE_ACCRUING_VARMARGIN\020"
    "\032\022(\n$OPERATION_TYPE_WRITING_OFF_VARMARGI"
    "N\020\033\022\037\n\033OPERATION_TYPE_DELIVERY_BUY\020\034\022 \n\034"
    "OPERATION_TYPE_DELIVERY_SELL\020\035\022\035\n\031OPERAT"
    "ION_TYPE_TRACK_MFEE\020\036\022\035\n\031OPERATION_TYPE_"
    "TRACK_PFEE\020\037\022\"\n\036OPERATION_TYPE_TAX_PROGR"
    "ESSIVE\020 \022\'\n#OPERATION_TYPE_BOND_TAX_PROG"
    "RESSIVE\020!\022+\n\'OPERATION_TYPE_DIVIDEND_TAX"
    "_PROGRESSIVE\020\"\022*\n&OPERATION_TYPE_BENEFIT"
    "_TAX_PROGRESSIVE\020#\022-\n)OPERATION_TYPE_TAX"
    "_CORRECTION_PROGRESSIVE\020$\022\'\n#OPERATION_T"
    "YPE_TAX_REPO_PROGRESSIVE\020%\022\033\n\027OPERATION_"
    "TYPE_TAX_REPO\020&\022 \n\034OPERATION_TYPE_TAX_RE"
    "PO_HOLD\020\'\022\"\n\036OPERATION_TYPE_TAX_REPO_REF"
    "UND\020(\022,\n(OPERATION_TYPE_TAX_REPO_HOLD_PR"
    "OGRESSIVE\020)\022.\n*OPERATION_TYPE_TAX_REPO_R"
    "EFUND_PROGRESSIVE\020*\022\032\n\026OPERATION_TYPE_DI"
    "V_EXT\020+\022(\n$OPERATION_TYPE_TAX_CORRECTION"
    "_COUPON\020,\022\033\n\027OPERATION_TYPE_CASH_FEE\020-\022\032"
    "\n\026OPERATION_TYPE_OUT_FEE\020.\022!\n\035OPERATION_"
    "TYPE_OUT_STAMP_DUTY\020/\022\037\n\033OPERATION_TYPE_"
    "OUTPUT_SWIFT\0202\022\036\n\032OPERATION_TYPE_INPUT_S"
    "WIFT\0203\022#\n\037OPERATION_TYPE_OUTPUT_ACQUIRIN"
    "G\0205\022\"\n\036OPERATION_TYPE_INPUT_ACQUIRING\0206\022"
    "!\n\035OPERATION_TYPE_OUTPUT_PENALTY\0207\022\035\n\031OP"
    "ERATION_TYPE_ADVICE_FEE\0208\022\037\n\033OPERATION_T"
    "YPE_TRANS_IIS_BS\0209\022\036\n\032OPERATION_TYPE_TRA"
    "NS_BS_BS\020:\022\034\n\030OPERATION_TYPE_OUT_MULTI\020;"
    "\022\034\n\030OPERATION_TYPE_INP_MULTI\020<\022!\n\035OPERAT"
    "ION_TYPE_OVER_PLACEMENT\020=\022\033\n\027OPERATION_T"
    "YPE_OVER_COM\020>\022\036\n\032OPERATION_TYPE_OVER_IN"
    "COME\020\?\022$\n OPERATION_TYPE_OPTION_EXPIRATI"
    "ON\020@\022$\n OPERATION_TYPE_FUTURE_EXPIRATION"
    "\020A*\336\001\n\033PortfolioSubscriptionStatus\022-\n)PO"
    "RTFOLIO_SUBSCRIPTION_STATUS_UNSPECIFIED\020"
    "\000\022)\n%PORTFOLIO_SUBSCRIPTION_STATUS_SUCCE"
    "SS\020\001\0223\n/PORTFOLIO_SUBSCRIPTION_STATUS_AC"
    "COUNT_NOT_FOUND\020\002\0220\n,PORTFOLIO_SUBSCRIPT"
    "ION_STATUS_INTERNAL_ERROR\020\003*\345\001\n\"Position"
    "sAccountSubscriptionStatus\022-\n)POSITIONS_"
    "SUBSCRIPTION_STATUS_UNSPECIFIED\020\000\022)\n%POS"
    "ITIONS_SUBSCRIPTION_STATUS_SUCCESS\020\001\0223\n/"
    "POSITIONS_SUBSCRIPTION_STATUS_ACCOUNT_NO"
    "T_FOUND\020\002\0220\n,POSITIONS_SUBSCRIPTION_STAT"
    "US_INTERNAL_ERROR\020\0032\353\007\n\021OperationsServic"
    "e\022~\n\rGetOperations\0225.tinkoff.pub.invest."
    "api.contract.v1.OperationsRequest\0326.tink"
    "off.pub.invest.api.contract.v1.Operation"
    "sResponse\022{\n\014GetPortfolio\0224.tinkoff.pub."
    "invest.api.contract.v1.PortfolioRequest\032"
    "5.tinkoff.pub.invest.api.contract.v1.Por"
    "tfolioResponse\022{\n\014GetPositions\0224.tinkoff"
    ".pub.invest.api.contract.v1.PositionsReq"
    "uest\0325.tinkoff.pub.invest.api.contract.v"
    "1.PositionsResponse\022\212\001\n\021GetWithdrawLimit"
    "s\0229.tinkoff.pub.invest.api.contract.v1.W"
    "ithdrawLimitsRequest\032:.tinkoff.pub.inves"
    "t.api.contract.v1.WithdrawLimitsResponse"
    "\022\204\001\n\017GetBrokerReport\0227.tinkoff.pub.inves"
    "t.api.contract.v1.BrokerReportRequest\0328."
    "tinkoff.pub.invest.api.contract.v1.Broke"
    "rReportResponse\022\250\001\n\031GetDividendsForeignI"
    "ssuer\022D.tinkoff.pub.invest.api.contract."
    "v1.GetDividendsForeignIssuerRequest\032E.ti"
    "nkoff.pub.invest.api.contract.v1.GetDivi"
    "dendsForeignIssuerResponse\022\234\001\n\025GetOperat"
    "ionsByCursor\022@.tinkoff.pub.invest.api.co"
    "ntract.v1.GetOperationsByCursorRequest\032A"
    ".tinkoff.pub.invest.api.contract.v1.GetO"
    "perationsByCursorResponse2\267\002\n\027Operations"
    "StreamService\022\214\001\n\017PortfolioStream\022:.tink"
    "off.pub.invest.api.contract.v1.Portfolio"
    "StreamRequest\032;.tinkoff.pub.invest.api.c"
    "ontract.v1.PortfolioStreamResponse0\001\022\214\001\n"
    "\017PositionsStream\022:.tinkoff.pub.invest.ap"
    "i.contract.v1.PositionsStreamRequest\032;.t"
    "inkoff.pub.invest.api.contract.v1.Positi"
    "onsStreamResponse0\001Ba\n\034ru.tinkoff.piapi."
    "contract.v1P\001Z\014./;investapi\242\002\005TIAPI\252\002\024Ti"
    "nkoff.InvestApi.V1\312\002\021Tinkoff\\Invest\\V1b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_operations_2eproto_deps[3] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_operations_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_operations_2eproto = {
    false,
    false,
    17726,
    descriptor_table_protodef_operations_2eproto,
    "operations.proto",
    &descriptor_table_operations_2eproto_once,
    descriptor_table_operations_2eproto_deps,
    3,
    45,
    schemas,
    file_default_instances,
    TableStruct_operations_2eproto::offsets,
    file_level_enum_descriptors_operations_2eproto,
    file_level_service_descriptors_operations_2eproto,
};
namespace tinkoff {
namespace pub {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
const ::google::protobuf::EnumDescriptor* PortfolioRequest_CurrencyRequest_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_operations_2eproto);
  return file_level_enum_descriptors_operations_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PortfolioRequest_CurrencyRequest_internal_data_[] = {
    196608u, 0u, };
bool PortfolioRequest_CurrencyRequest_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr PortfolioRequest_CurrencyRequest PortfolioRequest::RUB;
constexpr PortfolioRequest_CurrencyRequest PortfolioRequest::USD;
constexpr PortfolioRequest_CurrencyRequest PortfolioRequest::EUR;
constexpr PortfolioRequest_CurrencyRequest PortfolioRequest::CurrencyRequest_MIN;
constexpr PortfolioRequest_CurrencyRequest PortfolioRequest::CurrencyRequest_MAX;
constexpr int PortfolioRequest::CurrencyRequest_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* OperationState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_operations_2eproto);
  return file_level_enum_descriptors_operations_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t OperationState_internal_data_[] = {
    262144u, 0u, };
bool OperationState_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* OperationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_operations_2eproto);
  return file_level_enum_descriptors_operations_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t OperationType_internal_data_[] = {
    3145728u, 32u, 262124u, };
bool OperationType_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, OperationType_internal_data_);
}
const ::google::protobuf::EnumDescriptor* PortfolioSubscriptionStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_operations_2eproto);
  return file_level_enum_descriptors_operations_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t PortfolioSubscriptionStatus_internal_data_[] = {
    262144u, 0u, };
bool PortfolioSubscriptionStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* PositionsAccountSubscriptionStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_operations_2eproto);
  return file_level_enum_descriptors_operations_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t PositionsAccountSubscriptionStatus_internal_data_[] = {
    262144u, 0u, };
bool PositionsAccountSubscriptionStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class OperationsRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OperationsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_._has_bits_);
};

void OperationsRequest::clear_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OperationsRequest::clear_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
OperationsRequest::OperationsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.OperationsRequest)
}
inline PROTOBUF_NDEBUG_INLINE OperationsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::OperationsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_),
        figi_(arena, from.figi_) {}

OperationsRequest::OperationsRequest(
    ::google::protobuf::Arena* arena,
    const OperationsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.from_)
                        : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.to_)
                        : nullptr;
  _impl_.state_ = from._impl_.state_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.OperationsRequest)
}
inline PROTOBUF_NDEBUG_INLINE OperationsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena),
        figi_(arena) {}

inline void OperationsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, state_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::state_));
}
OperationsRequest::~OperationsRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.OperationsRequest)
  SharedDtor(*this);
}
inline void OperationsRequest::SharedDtor(MessageLite& self) {
  OperationsRequest& this_ = static_cast<OperationsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.figi_.Destroy();
  delete this_._impl_.from_;
  delete this_._impl_.to_;
  this_._impl_.~Impl_();
}

inline void* OperationsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OperationsRequest(arena);
}
constexpr auto OperationsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OperationsRequest),
                                            alignof(OperationsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OperationsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OperationsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OperationsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OperationsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OperationsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OperationsRequest>(), &OperationsRequest::ByteSizeLong,
            &OperationsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_._cached_size_),
        false,
    },
    &OperationsRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OperationsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 75, 2> OperationsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::OperationsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.account_id_)}},
    // optional .google.protobuf.Timestamp from = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.from_)}},
    // optional .google.protobuf.Timestamp to = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.to_)}},
    // optional .tinkoff.pub.invest.api.contract.v1.OperationState state = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OperationsRequest, _impl_.state_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.state_)}},
    // optional string figi = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.figi_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .google.protobuf.Timestamp from = 2;
    {PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.from_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .google.protobuf.Timestamp to = 3;
    {PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.to_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tinkoff.pub.invest.api.contract.v1.OperationState state = 4;
    {PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.state_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional string figi = 5;
    {PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.figi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\64\12\0\0\0\4\0\0"
    "tinkoff.pub.invest.api.contract.v1.OperationsRequest"
    "account_id"
    "figi"
  }},
};

PROTOBUF_NOINLINE void OperationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.OperationsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.figi_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
  }
  _impl_.state_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OperationsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OperationsRequest& this_ = static_cast<const OperationsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OperationsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OperationsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.OperationsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationsRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .google.protobuf.Timestamp from = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.from_, this_._impl_.from_->GetCachedSize(), target,
                stream);
          }

          // optional .google.protobuf.Timestamp to = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.to_, this_._impl_.to_->GetCachedSize(), target,
                stream);
          }

          // optional .tinkoff.pub.invest.api.contract.v1.OperationState state = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_state(), target);
          }

          // optional string figi = 5;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationsRequest.figi");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.OperationsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OperationsRequest::ByteSizeLong(const MessageLite& base) {
          const OperationsRequest& this_ = static_cast<const OperationsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OperationsRequest::ByteSizeLong() const {
          const OperationsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.OperationsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // optional string figi = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // optional .google.protobuf.Timestamp from = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_);
            }
            // optional .google.protobuf.Timestamp to = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_);
            }
            // optional .tinkoff.pub.invest.api.contract.v1.OperationState state = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_state());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OperationsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationsRequest*>(&to_msg);
  auto& from = static_cast<const OperationsRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.OperationsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_figi(from._internal_figi());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.from_ != nullptr);
      if (_this->_impl_.from_ == nullptr) {
        _this->_impl_.from_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.from_);
      } else {
        _this->_impl_.from_->MergeFrom(*from._impl_.from_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.to_ != nullptr);
      if (_this->_impl_.to_ == nullptr) {
        _this->_impl_.to_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.to_);
      } else {
        _this->_impl_.to_->MergeFrom(*from._impl_.to_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.state_ = from._impl_.state_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationsRequest::CopyFrom(const OperationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.OperationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationsRequest::InternalSwap(OperationsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.state_)
      + sizeof(OperationsRequest::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(OperationsRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata OperationsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OperationsResponse::_Internal {
 public:
};

OperationsResponse::OperationsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.OperationsResponse)
}
inline PROTOBUF_NDEBUG_INLINE OperationsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::OperationsResponse& from_msg)
      : operations_{visibility, arena, from.operations_},
        _cached_size_{0} {}

OperationsResponse::OperationsResponse(
    ::google::protobuf::Arena* arena,
    const OperationsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.OperationsResponse)
}
inline PROTOBUF_NDEBUG_INLINE OperationsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : operations_{visibility, arena},
        _cached_size_{0} {}

inline void OperationsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OperationsResponse::~OperationsResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.OperationsResponse)
  SharedDtor(*this);
}
inline void OperationsResponse::SharedDtor(MessageLite& self) {
  OperationsResponse& this_ = static_cast<OperationsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* OperationsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OperationsResponse(arena);
}
constexpr auto OperationsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OperationsResponse, _impl_.operations_) +
          decltype(OperationsResponse::_impl_.operations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(OperationsResponse), alignof(OperationsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OperationsResponse::PlacementNew_,
                                 sizeof(OperationsResponse),
                                 alignof(OperationsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OperationsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OperationsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OperationsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OperationsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OperationsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OperationsResponse>(), &OperationsResponse::ByteSizeLong,
            &OperationsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OperationsResponse, _impl_._cached_size_),
        false,
    },
    &OperationsResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OperationsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> OperationsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::OperationsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.Operation operations = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationsResponse, _impl_.operations_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.Operation operations = 1;
    {PROTOBUF_FIELD_OFFSET(OperationsResponse, _impl_.operations_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Operation>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void OperationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.OperationsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operations_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OperationsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OperationsResponse& this_ = static_cast<const OperationsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OperationsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OperationsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.OperationsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.pub.invest.api.contract.v1.Operation operations = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_operations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_operations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.OperationsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OperationsResponse::ByteSizeLong(const MessageLite& base) {
          const OperationsResponse& this_ = static_cast<const OperationsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OperationsResponse::ByteSizeLong() const {
          const OperationsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.OperationsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.Operation operations = 1;
            {
              total_size += 1UL * this_._internal_operations_size();
              for (const auto& msg : this_._internal_operations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OperationsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationsResponse*>(&to_msg);
  auto& from = static_cast<const OperationsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.OperationsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_operations()->MergeFrom(
      from._internal_operations());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationsResponse::CopyFrom(const OperationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.OperationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationsResponse::InternalSwap(OperationsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.operations_.InternalSwap(&other->_impl_.operations_);
}

::google::protobuf::Metadata OperationsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Operation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Operation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Operation, _impl_._has_bits_);
};

void Operation::clear_payment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payment_ != nullptr) _impl_.payment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Operation::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Operation::clear_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.date_ != nullptr) _impl_.date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Operation::Operation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.Operation)
}
inline PROTOBUF_NDEBUG_INLINE Operation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::Operation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trades_{visibility, arena, from.trades_},
        child_operations_{visibility, arena, from.child_operations_},
        id_(arena, from.id_),
        parent_operation_id_(arena, from.parent_operation_id_),
        currency_(arena, from.currency_),
        figi_(arena, from.figi_),
        instrument_type_(arena, from.instrument_type_),
        type_(arena, from.type_),
        asset_uid_(arena, from.asset_uid_),
        position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_) {}

Operation::Operation(
    ::google::protobuf::Arena* arena,
    const Operation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Operation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.payment_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.payment_)
                        : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.price_)
                        : nullptr;
  _impl_.date_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.date_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, operation_type_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::operation_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.Operation)
}
inline PROTOBUF_NDEBUG_INLINE Operation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trades_{visibility, arena},
        child_operations_{visibility, arena},
        id_(arena),
        parent_operation_id_(arena),
        currency_(arena),
        figi_(arena),
        instrument_type_(arena),
        type_(arena),
        asset_uid_(arena),
        position_uid_(arena),
        instrument_uid_(arena) {}

inline void Operation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, payment_),
           0,
           offsetof(Impl_, operation_type_) -
               offsetof(Impl_, payment_) +
               sizeof(Impl_::operation_type_));
}
Operation::~Operation() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.Operation)
  SharedDtor(*this);
}
inline void Operation::SharedDtor(MessageLite& self) {
  Operation& this_ = static_cast<Operation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.parent_operation_id_.Destroy();
  this_._impl_.currency_.Destroy();
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_type_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.asset_uid_.Destroy();
  this_._impl_.position_uid_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.payment_;
  delete this_._impl_.price_;
  delete this_._impl_.date_;
  this_._impl_.~Impl_();
}

inline void* Operation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Operation(arena);
}
constexpr auto Operation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Operation, _impl_.trades_) +
          decltype(Operation::_impl_.trades_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Operation, _impl_.child_operations_) +
          decltype(Operation::_impl_.child_operations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Operation), alignof(Operation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Operation::PlacementNew_,
                                 sizeof(Operation),
                                 alignof(Operation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Operation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Operation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Operation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Operation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Operation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Operation>(), &Operation::ByteSizeLong,
            &Operation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Operation, _impl_._cached_size_),
        false,
    },
    &Operation::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Operation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 5, 156, 2> Operation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Operation, _impl_._has_bits_),
    0, // no _extensions_
    19, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294459392,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Operation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.id_)}},
    // string parent_operation_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.parent_operation_id_)}},
    // string currency = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.currency_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.payment_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Operation, _impl_.price_)}},
    // .tinkoff.pub.invest.api.contract.v1.OperationState state = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operation, _impl_.state_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.state_)}},
    // int64 quantity = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operation, _impl_.quantity_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.quantity_)}},
    // int64 quantity_rest = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Operation, _impl_.quantity_rest_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.quantity_rest_)}},
    // string figi = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.figi_)}},
    // string instrument_type = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.instrument_type_)}},
    // .google.protobuf.Timestamp date = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 2, 2, PROTOBUF_FIELD_OFFSET(Operation, _impl_.date_)}},
    // string type = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.type_)}},
    // .tinkoff.pub.invest.api.contract.v1.OperationType operation_type = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Operation, _impl_.operation_type_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.operation_type_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.OperationTrade trades = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 3, PROTOBUF_FIELD_OFFSET(Operation, _impl_.trades_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string asset_uid = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.asset_uid_)}},
    // string position_uid = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.position_uid_)}},
    // string instrument_uid = 18;
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(Operation, _impl_.instrument_uid_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.ChildOperationItem child_operations = 19;
    {::_pbi::TcParser::FastMtR2,
     {410, 63, 4, PROTOBUF_FIELD_OFFSET(Operation, _impl_.child_operations_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string parent_operation_id = 2;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.parent_operation_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string currency = 3;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.currency_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 4;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.payment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 5;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.OperationState state = 6;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 quantity = 7;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 quantity_rest = 8;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.quantity_rest_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string figi = 9;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_type = 10;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.instrument_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp date = 11;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.date_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string type = 12;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.OperationType operation_type = 13;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.operation_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .tinkoff.pub.invest.api.contract.v1.OperationTrade trades = 14;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.trades_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string asset_uid = 16;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.asset_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string position_uid = 17;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.position_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 18;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.pub.invest.api.contract.v1.ChildOperationItem child_operations = 19;
    {PROTOBUF_FIELD_OFFSET(Operation, _impl_.child_operations_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::OperationTrade>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::ChildOperationItem>()},
  }}, {{
    "\54\2\23\10\0\0\0\0\0\4\17\0\4\0\0\11\14\16\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.Operation"
    "id"
    "parent_operation_id"
    "currency"
    "figi"
    "instrument_type"
    "type"
    "asset_uid"
    "position_uid"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.Operation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trades_.Clear();
  _impl_.child_operations_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.parent_operation_id_.ClearToEmpty();
  _impl_.currency_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_type_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.asset_uid_.ClearToEmpty();
  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.payment_ != nullptr);
      _impl_.payment_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.date_ != nullptr);
      _impl_.date_->Clear();
    }
  }
  ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.operation_type_) -
      reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.operation_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Operation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Operation& this_ = static_cast<const Operation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Operation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Operation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.Operation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Operation.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string parent_operation_id = 2;
          if (!this_._internal_parent_operation_id().empty()) {
            const std::string& _s = this_._internal_parent_operation_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Operation.parent_operation_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string currency = 3;
          if (!this_._internal_currency().empty()) {
            const std::string& _s = this_._internal_currency();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Operation.currency");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.payment_, this_._impl_.payment_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.OperationState state = 6;
          if (this_._internal_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_state(), target);
          }

          // int64 quantity = 7;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_quantity(), target);
          }

          // int64 quantity_rest = 8;
          if (this_._internal_quantity_rest() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_quantity_rest(), target);
          }

          // string figi = 9;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Operation.figi");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string instrument_type = 10;
          if (!this_._internal_instrument_type().empty()) {
            const std::string& _s = this_._internal_instrument_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Operation.instrument_type");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // .google.protobuf.Timestamp date = 11;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.date_, this_._impl_.date_->GetCachedSize(), target,
                stream);
          }

          // string type = 12;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Operation.type");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.OperationType operation_type = 13;
          if (this_._internal_operation_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                13, this_._internal_operation_type(), target);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.OperationTrade trades = 14;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_trades_size());
               i < n; i++) {
            const auto& repfield = this_._internal_trades().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    14, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string asset_uid = 16;
          if (!this_._internal_asset_uid().empty()) {
            const std::string& _s = this_._internal_asset_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Operation.asset_uid");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          // string position_uid = 17;
          if (!this_._internal_position_uid().empty()) {
            const std::string& _s = this_._internal_position_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Operation.position_uid");
            target = stream->WriteStringMaybeAliased(17, _s, target);
          }

          // string instrument_uid = 18;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Operation.instrument_uid");
            target = stream->WriteStringMaybeAliased(18, _s, target);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.ChildOperationItem child_operations = 19;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_child_operations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_child_operations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    19, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.Operation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Operation::ByteSizeLong(const MessageLite& base) {
          const Operation& this_ = static_cast<const Operation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Operation::ByteSizeLong() const {
          const Operation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.Operation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.OperationTrade trades = 14;
            {
              total_size += 1UL * this_._internal_trades_size();
              for (const auto& msg : this_._internal_trades()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.pub.invest.api.contract.v1.ChildOperationItem child_operations = 19;
            {
              total_size += 2UL * this_._internal_child_operations_size();
              for (const auto& msg : this_._internal_child_operations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string parent_operation_id = 2;
            if (!this_._internal_parent_operation_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_parent_operation_id());
            }
            // string currency = 3;
            if (!this_._internal_currency().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_currency());
            }
            // string figi = 9;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_type = 10;
            if (!this_._internal_instrument_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_type());
            }
            // string type = 12;
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // string asset_uid = 16;
            if (!this_._internal_asset_uid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_asset_uid());
            }
            // string position_uid = 17;
            if (!this_._internal_position_uid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_position_uid());
            }
            // string instrument_uid = 18;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payment_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
            // .google.protobuf.Timestamp date = 11;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.date_);
            }
          }
           {
            // int64 quantity = 7;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
            // int64 quantity_rest = 8;
            if (this_._internal_quantity_rest() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity_rest());
            }
            // .tinkoff.pub.invest.api.contract.v1.OperationState state = 6;
            if (this_._internal_state() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_state());
            }
            // .tinkoff.pub.invest.api.contract.v1.OperationType operation_type = 13;
            if (this_._internal_operation_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_operation_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Operation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Operation*>(&to_msg);
  auto& from = static_cast<const Operation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.Operation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trades()->MergeFrom(
      from._internal_trades());
  _this->_internal_mutable_child_operations()->MergeFrom(
      from._internal_child_operations());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_parent_operation_id().empty()) {
    _this->_internal_set_parent_operation_id(from._internal_parent_operation_id());
  }
  if (!from._internal_currency().empty()) {
    _this->_internal_set_currency(from._internal_currency());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_type().empty()) {
    _this->_internal_set_instrument_type(from._internal_instrument_type());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_asset_uid().empty()) {
    _this->_internal_set_asset_uid(from._internal_asset_uid());
  }
  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.payment_ != nullptr);
      if (_this->_impl_.payment_ == nullptr) {
        _this->_impl_.payment_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.payment_);
      } else {
        _this->_impl_.payment_->MergeFrom(*from._impl_.payment_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.date_ != nullptr);
      if (_this->_impl_.date_ == nullptr) {
        _this->_impl_.date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.date_);
      } else {
        _this->_impl_.date_->MergeFrom(*from._impl_.date_);
      }
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  if (from._internal_quantity_rest() != 0) {
    _this->_impl_.quantity_rest_ = from._impl_.quantity_rest_;
  }
  if (from._internal_state() != 0) {
    _this->_impl_.state_ = from._impl_.state_;
  }
  if (from._internal_operation_type() != 0) {
    _this->_impl_.operation_type_ = from._impl_.operation_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Operation::CopyFrom(const Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Operation::InternalSwap(Operation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.trades_.InternalSwap(&other->_impl_.trades_);
  _impl_.child_operations_.InternalSwap(&other->_impl_.child_operations_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_operation_id_, &other->_impl_.parent_operation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_type_, &other->_impl_.instrument_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.asset_uid_, &other->_impl_.asset_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Operation, _impl_.operation_type_)
      + sizeof(Operation::_impl_.operation_type_)
      - PROTOBUF_FIELD_OFFSET(Operation, _impl_.payment_)>(
          reinterpret_cast<char*>(&_impl_.payment_),
          reinterpret_cast<char*>(&other->_impl_.payment_));
}

::google::protobuf::Metadata Operation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OperationTrade::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OperationTrade>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_._has_bits_);
};

void OperationTrade::clear_date_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.date_time_ != nullptr) _impl_.date_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OperationTrade::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
OperationTrade::OperationTrade(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.OperationTrade)
}
inline PROTOBUF_NDEBUG_INLINE OperationTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::OperationTrade& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trade_id_(arena, from.trade_id_) {}

OperationTrade::OperationTrade(
    ::google::protobuf::Arena* arena,
    const OperationTrade& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationTrade* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.date_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.date_time_)
                        : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.price_)
                        : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.OperationTrade)
}
inline PROTOBUF_NDEBUG_INLINE OperationTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trade_id_(arena) {}

inline void OperationTrade::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, date_time_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, date_time_) +
               sizeof(Impl_::quantity_));
}
OperationTrade::~OperationTrade() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.OperationTrade)
  SharedDtor(*this);
}
inline void OperationTrade::SharedDtor(MessageLite& self) {
  OperationTrade& this_ = static_cast<OperationTrade&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.trade_id_.Destroy();
  delete this_._impl_.date_time_;
  delete this_._impl_.price_;
  this_._impl_.~Impl_();
}

inline void* OperationTrade::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OperationTrade(arena);
}
constexpr auto OperationTrade::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OperationTrade),
                                            alignof(OperationTrade));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OperationTrade::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OperationTrade_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OperationTrade::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OperationTrade>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OperationTrade::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OperationTrade>(), &OperationTrade::ByteSizeLong,
            &OperationTrade::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_._cached_size_),
        false,
    },
    &OperationTrade::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OperationTrade::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 66, 2> OperationTrade::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::OperationTrade>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.price_)}},
    // string trade_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.trade_id_)}},
    // .google.protobuf.Timestamp date_time = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.date_time_)}},
    // int64 quantity = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OperationTrade, _impl_.quantity_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.quantity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string trade_id = 1;
    {PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.trade_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp date_time = 2;
    {PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.date_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 3;
    {PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 4;
    {PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
  }}, {{
    "\61\10\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.OperationTrade"
    "trade_id"
  }},
};

PROTOBUF_NOINLINE void OperationTrade::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.OperationTrade)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trade_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.date_time_ != nullptr);
      _impl_.date_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OperationTrade::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OperationTrade& this_ = static_cast<const OperationTrade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OperationTrade::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OperationTrade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.OperationTrade)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string trade_id = 1;
          if (!this_._internal_trade_id().empty()) {
            const std::string& _s = this_._internal_trade_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationTrade.trade_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp date_time = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.date_time_, this_._impl_.date_time_->GetCachedSize(), target,
                stream);
          }

          // int64 quantity = 3;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_quantity(), target);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.OperationTrade)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OperationTrade::ByteSizeLong(const MessageLite& base) {
          const OperationTrade& this_ = static_cast<const OperationTrade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OperationTrade::ByteSizeLong() const {
          const OperationTrade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.OperationTrade)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string trade_id = 1;
            if (!this_._internal_trade_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_trade_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp date_time = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.date_time_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
          }
           {
            // int64 quantity = 3;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OperationTrade::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationTrade*>(&to_msg);
  auto& from = static_cast<const OperationTrade&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.OperationTrade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trade_id().empty()) {
    _this->_internal_set_trade_id(from._internal_trade_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.date_time_ != nullptr);
      if (_this->_impl_.date_time_ == nullptr) {
        _this->_impl_.date_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.date_time_);
      } else {
        _this->_impl_.date_time_->MergeFrom(*from._impl_.date_time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationTrade::CopyFrom(const OperationTrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.OperationTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationTrade::InternalSwap(OperationTrade* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_id_, &other->_impl_.trade_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.quantity_)
      + sizeof(OperationTrade::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(OperationTrade, _impl_.date_time_)>(
          reinterpret_cast<char*>(&_impl_.date_time_),
          reinterpret_cast<char*>(&other->_impl_.date_time_));
}

::google::protobuf::Metadata OperationTrade::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PortfolioRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PortfolioRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PortfolioRequest, _impl_._has_bits_);
};

PortfolioRequest::PortfolioRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioRequest)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PortfolioRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_) {}

PortfolioRequest::PortfolioRequest(
    ::google::protobuf::Arena* arena,
    const PortfolioRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PortfolioRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.currency_ = from._impl_.currency_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioRequest)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena) {}

inline void PortfolioRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.currency_ = {};
}
PortfolioRequest::~PortfolioRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PortfolioRequest)
  SharedDtor(*this);
}
inline void PortfolioRequest::SharedDtor(MessageLite& self) {
  PortfolioRequest& this_ = static_cast<PortfolioRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PortfolioRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PortfolioRequest(arena);
}
constexpr auto PortfolioRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PortfolioRequest),
                                            alignof(PortfolioRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PortfolioRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PortfolioRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PortfolioRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PortfolioRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PortfolioRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PortfolioRequest>(), &PortfolioRequest::ByteSizeLong,
            &PortfolioRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PortfolioRequest, _impl_._cached_size_),
        false,
    },
    &PortfolioRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PortfolioRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> PortfolioRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PortfolioRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PortfolioRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .tinkoff.pub.invest.api.contract.v1.PortfolioRequest.CurrencyRequest currency = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PortfolioRequest, _impl_.currency_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(PortfolioRequest, _impl_.currency_)}},
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PortfolioRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .tinkoff.pub.invest.api.contract.v1.PortfolioRequest.CurrencyRequest currency = 2;
    {PROTOBUF_FIELD_OFFSET(PortfolioRequest, _impl_.currency_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\63\12\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.PortfolioRequest"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void PortfolioRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PortfolioRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.currency_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PortfolioRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PortfolioRequest& this_ = static_cast<const PortfolioRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PortfolioRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PortfolioRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PortfolioRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PortfolioRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .tinkoff.pub.invest.api.contract.v1.PortfolioRequest.CurrencyRequest currency = 2;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_currency(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PortfolioRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PortfolioRequest::ByteSizeLong(const MessageLite& base) {
          const PortfolioRequest& this_ = static_cast<const PortfolioRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PortfolioRequest::ByteSizeLong() const {
          const PortfolioRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PortfolioRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
          }
           {
            // optional .tinkoff.pub.invest.api.contract.v1.PortfolioRequest.CurrencyRequest currency = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_currency());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PortfolioRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PortfolioRequest*>(&to_msg);
  auto& from = static_cast<const PortfolioRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.currency_ = from._impl_.currency_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioRequest::CopyFrom(const PortfolioRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PortfolioRequest::InternalSwap(PortfolioRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  swap(_impl_.currency_, other->_impl_.currency_);
}

::google::protobuf::Metadata PortfolioRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PortfolioResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PortfolioResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_._has_bits_);
};

void PortfolioResponse::clear_total_amount_shares() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_amount_shares_ != nullptr) _impl_.total_amount_shares_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PortfolioResponse::clear_total_amount_bonds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_amount_bonds_ != nullptr) _impl_.total_amount_bonds_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void PortfolioResponse::clear_total_amount_etf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_amount_etf_ != nullptr) _impl_.total_amount_etf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void PortfolioResponse::clear_total_amount_currencies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_amount_currencies_ != nullptr) _impl_.total_amount_currencies_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void PortfolioResponse::clear_total_amount_futures() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_amount_futures_ != nullptr) _impl_.total_amount_futures_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void PortfolioResponse::clear_expected_yield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expected_yield_ != nullptr) _impl_.expected_yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void PortfolioResponse::clear_total_amount_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_amount_options_ != nullptr) _impl_.total_amount_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void PortfolioResponse::clear_total_amount_sp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_amount_sp_ != nullptr) _impl_.total_amount_sp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void PortfolioResponse::clear_total_amount_portfolio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_amount_portfolio_ != nullptr) _impl_.total_amount_portfolio_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void PortfolioResponse::clear_daily_yield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.daily_yield_ != nullptr) _impl_.daily_yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void PortfolioResponse::clear_daily_yield_relative() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.daily_yield_relative_ != nullptr) _impl_.daily_yield_relative_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
PortfolioResponse::PortfolioResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioResponse)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PortfolioResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        positions_{visibility, arena, from.positions_},
        virtual_positions_{visibility, arena, from.virtual_positions_},
        account_id_(arena, from.account_id_) {}

PortfolioResponse::PortfolioResponse(
    ::google::protobuf::Arena* arena,
    const PortfolioResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PortfolioResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.total_amount_shares_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_amount_shares_)
                        : nullptr;
  _impl_.total_amount_bonds_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_amount_bonds_)
                        : nullptr;
  _impl_.total_amount_etf_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_amount_etf_)
                        : nullptr;
  _impl_.total_amount_currencies_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_amount_currencies_)
                        : nullptr;
  _impl_.total_amount_futures_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_amount_futures_)
                        : nullptr;
  _impl_.expected_yield_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.expected_yield_)
                        : nullptr;
  _impl_.total_amount_options_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_amount_options_)
                        : nullptr;
  _impl_.total_amount_sp_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_amount_sp_)
                        : nullptr;
  _impl_.total_amount_portfolio_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_amount_portfolio_)
                        : nullptr;
  _impl_.daily_yield_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.daily_yield_)
                        : nullptr;
  _impl_.daily_yield_relative_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.daily_yield_relative_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioResponse)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        positions_{visibility, arena},
        virtual_positions_{visibility, arena},
        account_id_(arena) {}

inline void PortfolioResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_amount_shares_),
           0,
           offsetof(Impl_, daily_yield_relative_) -
               offsetof(Impl_, total_amount_shares_) +
               sizeof(Impl_::daily_yield_relative_));
}
PortfolioResponse::~PortfolioResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PortfolioResponse)
  SharedDtor(*this);
}
inline void PortfolioResponse::SharedDtor(MessageLite& self) {
  PortfolioResponse& this_ = static_cast<PortfolioResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  delete this_._impl_.total_amount_shares_;
  delete this_._impl_.total_amount_bonds_;
  delete this_._impl_.total_amount_etf_;
  delete this_._impl_.total_amount_currencies_;
  delete this_._impl_.total_amount_futures_;
  delete this_._impl_.expected_yield_;
  delete this_._impl_.total_amount_options_;
  delete this_._impl_.total_amount_sp_;
  delete this_._impl_.total_amount_portfolio_;
  delete this_._impl_.daily_yield_;
  delete this_._impl_.daily_yield_relative_;
  this_._impl_.~Impl_();
}

inline void* PortfolioResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PortfolioResponse(arena);
}
constexpr auto PortfolioResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.positions_) +
          decltype(PortfolioResponse::_impl_.positions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.virtual_positions_) +
          decltype(PortfolioResponse::_impl_.virtual_positions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PortfolioResponse), alignof(PortfolioResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PortfolioResponse::PlacementNew_,
                                 sizeof(PortfolioResponse),
                                 alignof(PortfolioResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PortfolioResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PortfolioResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PortfolioResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PortfolioResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PortfolioResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PortfolioResponse>(), &PortfolioResponse::ByteSizeLong,
            &PortfolioResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_._cached_size_),
        false,
    },
    &PortfolioResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PortfolioResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 13, 79, 2> PortfolioResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_._has_bits_),
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294914048,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    13,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PortfolioResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.pub.invest.api.contract.v1.Quotation daily_yield_relative = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 10, 12, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.daily_yield_relative_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_shares = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_shares_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_bonds = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_bonds_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_etf = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_etf_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_currencies = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_currencies_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_futures = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_futures_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.expected_yield_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.PortfolioPosition positions = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 6, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.positions_)}},
    // string account_id = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.account_id_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_options = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 6, 7, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_options_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_sp = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 7, 8, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_sp_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_portfolio = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 8, 9, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_portfolio_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition virtual_positions = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 10, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.virtual_positions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 9, 11, PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.daily_yield_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_shares = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_shares_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_bonds = 2;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_bonds_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_etf = 3;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_etf_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_currencies = 4;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_currencies_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_futures = 5;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_futures_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 6;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.expected_yield_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.pub.invest.api.contract.v1.PortfolioPosition positions = 7;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.positions_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string account_id = 8;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_options = 9;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_options_), _Internal::kHasBitsOffset + 6, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_sp = 10;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_sp_), _Internal::kHasBitsOffset + 7, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_portfolio = 11;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_portfolio_), _Internal::kHasBitsOffset + 8, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition virtual_positions = 12;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.virtual_positions_), -1, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 15;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.daily_yield_), _Internal::kHasBitsOffset + 9, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation daily_yield_relative = 16;
    {PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.daily_yield_relative_), _Internal::kHasBitsOffset + 10, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PortfolioPosition>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\64\0\0\0\0\0\0\0\12\0\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.PortfolioResponse"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void PortfolioResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PortfolioResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.positions_.Clear();
  _impl_.virtual_positions_.Clear();
  _impl_.account_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.total_amount_shares_ != nullptr);
      _impl_.total_amount_shares_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.total_amount_bonds_ != nullptr);
      _impl_.total_amount_bonds_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.total_amount_etf_ != nullptr);
      _impl_.total_amount_etf_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.total_amount_currencies_ != nullptr);
      _impl_.total_amount_currencies_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.total_amount_futures_ != nullptr);
      _impl_.total_amount_futures_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.expected_yield_ != nullptr);
      _impl_.expected_yield_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.total_amount_options_ != nullptr);
      _impl_.total_amount_options_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.total_amount_sp_ != nullptr);
      _impl_.total_amount_sp_->Clear();
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.total_amount_portfolio_ != nullptr);
      _impl_.total_amount_portfolio_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.daily_yield_ != nullptr);
      _impl_.daily_yield_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.daily_yield_relative_ != nullptr);
      _impl_.daily_yield_relative_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PortfolioResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PortfolioResponse& this_ = static_cast<const PortfolioResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PortfolioResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PortfolioResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PortfolioResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_shares = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.total_amount_shares_, this_._impl_.total_amount_shares_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_bonds = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.total_amount_bonds_, this_._impl_.total_amount_bonds_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_etf = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.total_amount_etf_, this_._impl_.total_amount_etf_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_currencies = 4;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.total_amount_currencies_, this_._impl_.total_amount_currencies_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_futures = 5;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.total_amount_futures_, this_._impl_.total_amount_futures_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 6;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.expected_yield_, this_._impl_.expected_yield_->GetCachedSize(), target,
                stream);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.PortfolioPosition positions = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_positions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_positions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string account_id = 8;
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PortfolioResponse.account_id");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_options = 9;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.total_amount_options_, this_._impl_.total_amount_options_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_sp = 10;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.total_amount_sp_, this_._impl_.total_amount_sp_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_portfolio = 11;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.total_amount_portfolio_, this_._impl_.total_amount_portfolio_->GetCachedSize(), target,
                stream);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition virtual_positions = 12;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_virtual_positions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_virtual_positions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    12, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 15;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.daily_yield_, this_._impl_.daily_yield_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation daily_yield_relative = 16;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                16, *this_._impl_.daily_yield_relative_, this_._impl_.daily_yield_relative_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PortfolioResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PortfolioResponse::ByteSizeLong(const MessageLite& base) {
          const PortfolioResponse& this_ = static_cast<const PortfolioResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PortfolioResponse::ByteSizeLong() const {
          const PortfolioResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PortfolioResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.PortfolioPosition positions = 7;
            {
              total_size += 1UL * this_._internal_positions_size();
              for (const auto& msg : this_._internal_positions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition virtual_positions = 12;
            {
              total_size += 1UL * this_._internal_virtual_positions_size();
              for (const auto& msg : this_._internal_virtual_positions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string account_id = 8;
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_shares = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_amount_shares_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_bonds = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_amount_bonds_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_etf = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_amount_etf_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_currencies = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_amount_currencies_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_futures = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_amount_futures_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expected_yield_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_options = 9;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_amount_options_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_sp = 10;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_amount_sp_);
            }
          }
          if (cached_has_bits & 0x00000700u) {
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_amount_portfolio = 11;
            if (cached_has_bits & 0x00000100u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_amount_portfolio_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 15;
            if (cached_has_bits & 0x00000200u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.daily_yield_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation daily_yield_relative = 16;
            if (cached_has_bits & 0x00000400u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.daily_yield_relative_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PortfolioResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PortfolioResponse*>(&to_msg);
  auto& from = static_cast<const PortfolioResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_positions()->MergeFrom(
      from._internal_positions());
  _this->_internal_mutable_virtual_positions()->MergeFrom(
      from._internal_virtual_positions());
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.total_amount_shares_ != nullptr);
      if (_this->_impl_.total_amount_shares_ == nullptr) {
        _this->_impl_.total_amount_shares_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_shares_);
      } else {
        _this->_impl_.total_amount_shares_->MergeFrom(*from._impl_.total_amount_shares_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.total_amount_bonds_ != nullptr);
      if (_this->_impl_.total_amount_bonds_ == nullptr) {
        _this->_impl_.total_amount_bonds_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_bonds_);
      } else {
        _this->_impl_.total_amount_bonds_->MergeFrom(*from._impl_.total_amount_bonds_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.total_amount_etf_ != nullptr);
      if (_this->_impl_.total_amount_etf_ == nullptr) {
        _this->_impl_.total_amount_etf_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_etf_);
      } else {
        _this->_impl_.total_amount_etf_->MergeFrom(*from._impl_.total_amount_etf_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.total_amount_currencies_ != nullptr);
      if (_this->_impl_.total_amount_currencies_ == nullptr) {
        _this->_impl_.total_amount_currencies_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_currencies_);
      } else {
        _this->_impl_.total_amount_currencies_->MergeFrom(*from._impl_.total_amount_currencies_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.total_amount_futures_ != nullptr);
      if (_this->_impl_.total_amount_futures_ == nullptr) {
        _this->_impl_.total_amount_futures_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_futures_);
      } else {
        _this->_impl_.total_amount_futures_->MergeFrom(*from._impl_.total_amount_futures_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.expected_yield_ != nullptr);
      if (_this->_impl_.expected_yield_ == nullptr) {
        _this->_impl_.expected_yield_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.expected_yield_);
      } else {
        _this->_impl_.expected_yield_->MergeFrom(*from._impl_.expected_yield_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.total_amount_options_ != nullptr);
      if (_this->_impl_.total_amount_options_ == nullptr) {
        _this->_impl_.total_amount_options_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_options_);
      } else {
        _this->_impl_.total_amount_options_->MergeFrom(*from._impl_.total_amount_options_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.total_amount_sp_ != nullptr);
      if (_this->_impl_.total_amount_sp_ == nullptr) {
        _this->_impl_.total_amount_sp_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_sp_);
      } else {
        _this->_impl_.total_amount_sp_->MergeFrom(*from._impl_.total_amount_sp_);
      }
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.total_amount_portfolio_ != nullptr);
      if (_this->_impl_.total_amount_portfolio_ == nullptr) {
        _this->_impl_.total_amount_portfolio_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_amount_portfolio_);
      } else {
        _this->_impl_.total_amount_portfolio_->MergeFrom(*from._impl_.total_amount_portfolio_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.daily_yield_ != nullptr);
      if (_this->_impl_.daily_yield_ == nullptr) {
        _this->_impl_.daily_yield_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.daily_yield_);
      } else {
        _this->_impl_.daily_yield_->MergeFrom(*from._impl_.daily_yield_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.daily_yield_relative_ != nullptr);
      if (_this->_impl_.daily_yield_relative_ == nullptr) {
        _this->_impl_.daily_yield_relative_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.daily_yield_relative_);
      } else {
        _this->_impl_.daily_yield_relative_->MergeFrom(*from._impl_.daily_yield_relative_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioResponse::CopyFrom(const PortfolioResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PortfolioResponse::InternalSwap(PortfolioResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.positions_.InternalSwap(&other->_impl_.positions_);
  _impl_.virtual_positions_.InternalSwap(&other->_impl_.virtual_positions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.daily_yield_relative_)
      + sizeof(PortfolioResponse::_impl_.daily_yield_relative_)
      - PROTOBUF_FIELD_OFFSET(PortfolioResponse, _impl_.total_amount_shares_)>(
          reinterpret_cast<char*>(&_impl_.total_amount_shares_),
          reinterpret_cast<char*>(&other->_impl_.total_amount_shares_));
}

::google::protobuf::Metadata PortfolioResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionsRequest::_Internal {
 public:
};

PositionsRequest::PositionsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PositionsRequest)
}
inline PROTOBUF_NDEBUG_INLINE PositionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PositionsRequest& from_msg)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

PositionsRequest::PositionsRequest(
    ::google::protobuf::Arena* arena,
    const PositionsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PositionsRequest)
}
inline PROTOBUF_NDEBUG_INLINE PositionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void PositionsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PositionsRequest::~PositionsRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PositionsRequest)
  SharedDtor(*this);
}
inline void PositionsRequest::SharedDtor(MessageLite& self) {
  PositionsRequest& this_ = static_cast<PositionsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PositionsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionsRequest(arena);
}
constexpr auto PositionsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PositionsRequest),
                                            alignof(PositionsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionsRequest>(), &PositionsRequest::ByteSizeLong,
            &PositionsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionsRequest, _impl_._cached_size_),
        false,
    },
    &PositionsRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 70, 2> PositionsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PositionsRequest, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\12\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.PositionsRequest"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void PositionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PositionsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionsRequest& this_ = static_cast<const PositionsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PositionsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PositionsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionsRequest::ByteSizeLong(const MessageLite& base) {
          const PositionsRequest& this_ = static_cast<const PositionsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionsRequest::ByteSizeLong() const {
          const PositionsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PositionsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionsRequest*>(&to_msg);
  auto& from = static_cast<const PositionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PositionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsRequest::CopyFrom(const PositionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PositionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionsRequest::InternalSwap(PositionsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
}

::google::protobuf::Metadata PositionsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionsResponse::_Internal {
 public:
};

void PositionsResponse::clear_money() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.money_.Clear();
}
void PositionsResponse::clear_blocked() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocked_.Clear();
}
PositionsResponse::PositionsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PositionsResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PositionsResponse& from_msg)
      : money_{visibility, arena, from.money_},
        blocked_{visibility, arena, from.blocked_},
        securities_{visibility, arena, from.securities_},
        futures_{visibility, arena, from.futures_},
        options_{visibility, arena, from.options_},
        account_id_(arena, from.account_id_),
        _cached_size_{0} {}

PositionsResponse::PositionsResponse(
    ::google::protobuf::Arena* arena,
    const PositionsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.limits_loading_in_progress_ = from._impl_.limits_loading_in_progress_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PositionsResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : money_{visibility, arena},
        blocked_{visibility, arena},
        securities_{visibility, arena},
        futures_{visibility, arena},
        options_{visibility, arena},
        account_id_(arena),
        _cached_size_{0} {}

inline void PositionsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.limits_loading_in_progress_ = {};
}
PositionsResponse::~PositionsResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PositionsResponse)
  SharedDtor(*this);
}
inline void PositionsResponse::SharedDtor(MessageLite& self) {
  PositionsResponse& this_ = static_cast<PositionsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PositionsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionsResponse(arena);
}
constexpr auto PositionsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.money_) +
          decltype(PositionsResponse::_impl_.money_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.blocked_) +
          decltype(PositionsResponse::_impl_.blocked_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.securities_) +
          decltype(PositionsResponse::_impl_.securities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.futures_) +
          decltype(PositionsResponse::_impl_.futures_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.options_) +
          decltype(PositionsResponse::_impl_.options_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PositionsResponse), alignof(PositionsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PositionsResponse::PlacementNew_,
                                 sizeof(PositionsResponse),
                                 alignof(PositionsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionsResponse>(), &PositionsResponse::ByteSizeLong,
            &PositionsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_._cached_size_),
        false,
    },
    &PositionsResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 5, 71, 2> PositionsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950848,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue money = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.money_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.blocked_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSecurities securities = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.securities_)}},
    // bool limits_loading_in_progress = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PositionsResponse, _impl_.limits_loading_in_progress_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.limits_loading_in_progress_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsFutures futures = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.futures_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsOptions options = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 4, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.options_)}},
    // string account_id = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue money = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.money_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.blocked_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSecurities securities = 3;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.securities_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool limits_loading_in_progress = 4;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.limits_loading_in_progress_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsFutures futures = 5;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.futures_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsOptions options = 6;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.options_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string account_id = 15;
    {PROTOBUF_FIELD_OFFSET(PositionsResponse, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsSecurities>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsFutures>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsOptions>()},
  }}, {{
    "\64\0\0\0\0\0\0\12"
    "tinkoff.pub.invest.api.contract.v1.PositionsResponse"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void PositionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PositionsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.money_.Clear();
  _impl_.blocked_.Clear();
  _impl_.securities_.Clear();
  _impl_.futures_.Clear();
  _impl_.options_.Clear();
  _impl_.account_id_.ClearToEmpty();
  _impl_.limits_loading_in_progress_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionsResponse& this_ = static_cast<const PositionsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PositionsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue money = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_money_size());
               i < n; i++) {
            const auto& repfield = this_._internal_money().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_blocked_size());
               i < n; i++) {
            const auto& repfield = this_._internal_blocked().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSecurities securities = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_securities_size());
               i < n; i++) {
            const auto& repfield = this_._internal_securities().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool limits_loading_in_progress = 4;
          if (this_._internal_limits_loading_in_progress() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_limits_loading_in_progress(), target);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.PositionsFutures futures = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_futures_size());
               i < n; i++) {
            const auto& repfield = this_._internal_futures().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.PositionsOptions options = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_options_size());
               i < n; i++) {
            const auto& repfield = this_._internal_options().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string account_id = 15;
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsResponse.account_id");
            target = stream->WriteStringMaybeAliased(15, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PositionsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionsResponse::ByteSizeLong(const MessageLite& base) {
          const PositionsResponse& this_ = static_cast<const PositionsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionsResponse::ByteSizeLong() const {
          const PositionsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PositionsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue money = 1;
            {
              total_size += 1UL * this_._internal_money_size();
              for (const auto& msg : this_._internal_money()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked = 2;
            {
              total_size += 1UL * this_._internal_blocked_size();
              for (const auto& msg : this_._internal_blocked()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSecurities securities = 3;
            {
              total_size += 1UL * this_._internal_securities_size();
              for (const auto& msg : this_._internal_securities()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.pub.invest.api.contract.v1.PositionsFutures futures = 5;
            {
              total_size += 1UL * this_._internal_futures_size();
              for (const auto& msg : this_._internal_futures()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.pub.invest.api.contract.v1.PositionsOptions options = 6;
            {
              total_size += 1UL * this_._internal_options_size();
              for (const auto& msg : this_._internal_options()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string account_id = 15;
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // bool limits_loading_in_progress = 4;
            if (this_._internal_limits_loading_in_progress() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionsResponse*>(&to_msg);
  auto& from = static_cast<const PositionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PositionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_money()->MergeFrom(
      from._internal_money());
  _this->_internal_mutable_blocked()->MergeFrom(
      from._internal_blocked());
  _this->_internal_mutable_securities()->MergeFrom(
      from._internal_securities());
  _this->_internal_mutable_futures()->MergeFrom(
      from._internal_futures());
  _this->_internal_mutable_options()->MergeFrom(
      from._internal_options());
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_limits_loading_in_progress() != 0) {
    _this->_impl_.limits_loading_in_progress_ = from._impl_.limits_loading_in_progress_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsResponse::CopyFrom(const PositionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PositionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionsResponse::InternalSwap(PositionsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.money_.InternalSwap(&other->_impl_.money_);
  _impl_.blocked_.InternalSwap(&other->_impl_.blocked_);
  _impl_.securities_.InternalSwap(&other->_impl_.securities_);
  _impl_.futures_.InternalSwap(&other->_impl_.futures_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
        swap(_impl_.limits_loading_in_progress_, other->_impl_.limits_loading_in_progress_);
}

::google::protobuf::Metadata PositionsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WithdrawLimitsRequest::_Internal {
 public:
};

WithdrawLimitsRequest::WithdrawLimitsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsRequest)
}
inline PROTOBUF_NDEBUG_INLINE WithdrawLimitsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsRequest& from_msg)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

WithdrawLimitsRequest::WithdrawLimitsRequest(
    ::google::protobuf::Arena* arena,
    const WithdrawLimitsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WithdrawLimitsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsRequest)
}
inline PROTOBUF_NDEBUG_INLINE WithdrawLimitsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void WithdrawLimitsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WithdrawLimitsRequest::~WithdrawLimitsRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsRequest)
  SharedDtor(*this);
}
inline void WithdrawLimitsRequest::SharedDtor(MessageLite& self) {
  WithdrawLimitsRequest& this_ = static_cast<WithdrawLimitsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* WithdrawLimitsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WithdrawLimitsRequest(arena);
}
constexpr auto WithdrawLimitsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WithdrawLimitsRequest),
                                            alignof(WithdrawLimitsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WithdrawLimitsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WithdrawLimitsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WithdrawLimitsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WithdrawLimitsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WithdrawLimitsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WithdrawLimitsRequest>(), &WithdrawLimitsRequest::ByteSizeLong,
            &WithdrawLimitsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WithdrawLimitsRequest, _impl_._cached_size_),
        false,
    },
    &WithdrawLimitsRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WithdrawLimitsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 75, 2> WithdrawLimitsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WithdrawLimitsRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(WithdrawLimitsRequest, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\12\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.WithdrawLimitsRequest"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void WithdrawLimitsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WithdrawLimitsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WithdrawLimitsRequest& this_ = static_cast<const WithdrawLimitsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WithdrawLimitsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WithdrawLimitsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.WithdrawLimitsRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WithdrawLimitsRequest::ByteSizeLong(const MessageLite& base) {
          const WithdrawLimitsRequest& this_ = static_cast<const WithdrawLimitsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WithdrawLimitsRequest::ByteSizeLong() const {
          const WithdrawLimitsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WithdrawLimitsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WithdrawLimitsRequest*>(&to_msg);
  auto& from = static_cast<const WithdrawLimitsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WithdrawLimitsRequest::CopyFrom(const WithdrawLimitsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WithdrawLimitsRequest::InternalSwap(WithdrawLimitsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
}

::google::protobuf::Metadata WithdrawLimitsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WithdrawLimitsResponse::_Internal {
 public:
};

void WithdrawLimitsResponse::clear_money() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.money_.Clear();
}
void WithdrawLimitsResponse::clear_blocked() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocked_.Clear();
}
void WithdrawLimitsResponse::clear_blocked_guarantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocked_guarantee_.Clear();
}
WithdrawLimitsResponse::WithdrawLimitsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsResponse)
}
inline PROTOBUF_NDEBUG_INLINE WithdrawLimitsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsResponse& from_msg)
      : money_{visibility, arena, from.money_},
        blocked_{visibility, arena, from.blocked_},
        blocked_guarantee_{visibility, arena, from.blocked_guarantee_},
        _cached_size_{0} {}

WithdrawLimitsResponse::WithdrawLimitsResponse(
    ::google::protobuf::Arena* arena,
    const WithdrawLimitsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WithdrawLimitsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsResponse)
}
inline PROTOBUF_NDEBUG_INLINE WithdrawLimitsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : money_{visibility, arena},
        blocked_{visibility, arena},
        blocked_guarantee_{visibility, arena},
        _cached_size_{0} {}

inline void WithdrawLimitsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WithdrawLimitsResponse::~WithdrawLimitsResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsResponse)
  SharedDtor(*this);
}
inline void WithdrawLimitsResponse::SharedDtor(MessageLite& self) {
  WithdrawLimitsResponse& this_ = static_cast<WithdrawLimitsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* WithdrawLimitsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WithdrawLimitsResponse(arena);
}
constexpr auto WithdrawLimitsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.money_) +
          decltype(WithdrawLimitsResponse::_impl_.money_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.blocked_) +
          decltype(WithdrawLimitsResponse::_impl_.blocked_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.blocked_guarantee_) +
          decltype(WithdrawLimitsResponse::_impl_.blocked_guarantee_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(WithdrawLimitsResponse), alignof(WithdrawLimitsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&WithdrawLimitsResponse::PlacementNew_,
                                 sizeof(WithdrawLimitsResponse),
                                 alignof(WithdrawLimitsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WithdrawLimitsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WithdrawLimitsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WithdrawLimitsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WithdrawLimitsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WithdrawLimitsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WithdrawLimitsResponse>(), &WithdrawLimitsResponse::ByteSizeLong,
            &WithdrawLimitsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_._cached_size_),
        false,
    },
    &WithdrawLimitsResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WithdrawLimitsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> WithdrawLimitsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::WithdrawLimitsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue money = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.money_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.blocked_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked_guarantee = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.blocked_guarantee_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue money = 1;
    {PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.money_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked = 2;
    {PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.blocked_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked_guarantee = 3;
    {PROTOBUF_FIELD_OFFSET(WithdrawLimitsResponse, _impl_.blocked_guarantee_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void WithdrawLimitsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.money_.Clear();
  _impl_.blocked_.Clear();
  _impl_.blocked_guarantee_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WithdrawLimitsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WithdrawLimitsResponse& this_ = static_cast<const WithdrawLimitsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WithdrawLimitsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WithdrawLimitsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue money = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_money_size());
               i < n; i++) {
            const auto& repfield = this_._internal_money().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_blocked_size());
               i < n; i++) {
            const auto& repfield = this_._internal_blocked().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked_guarantee = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_blocked_guarantee_size());
               i < n; i++) {
            const auto& repfield = this_._internal_blocked_guarantee().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WithdrawLimitsResponse::ByteSizeLong(const MessageLite& base) {
          const WithdrawLimitsResponse& this_ = static_cast<const WithdrawLimitsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WithdrawLimitsResponse::ByteSizeLong() const {
          const WithdrawLimitsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue money = 1;
            {
              total_size += 1UL * this_._internal_money_size();
              for (const auto& msg : this_._internal_money()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked = 2;
            {
              total_size += 1UL * this_._internal_blocked_size();
              for (const auto& msg : this_._internal_blocked()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked_guarantee = 3;
            {
              total_size += 1UL * this_._internal_blocked_guarantee_size();
              for (const auto& msg : this_._internal_blocked_guarantee()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WithdrawLimitsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WithdrawLimitsResponse*>(&to_msg);
  auto& from = static_cast<const WithdrawLimitsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_money()->MergeFrom(
      from._internal_money());
  _this->_internal_mutable_blocked()->MergeFrom(
      from._internal_blocked());
  _this->_internal_mutable_blocked_guarantee()->MergeFrom(
      from._internal_blocked_guarantee());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WithdrawLimitsResponse::CopyFrom(const WithdrawLimitsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.WithdrawLimitsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WithdrawLimitsResponse::InternalSwap(WithdrawLimitsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.money_.InternalSwap(&other->_impl_.money_);
  _impl_.blocked_.InternalSwap(&other->_impl_.blocked_);
  _impl_.blocked_guarantee_.InternalSwap(&other->_impl_.blocked_guarantee_);
}

::google::protobuf::Metadata WithdrawLimitsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PortfolioPosition::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PortfolioPosition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_._has_bits_);
};

void PortfolioPosition::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantity_ != nullptr) _impl_.quantity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PortfolioPosition::clear_average_position_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.average_position_price_ != nullptr) _impl_.average_position_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void PortfolioPosition::clear_expected_yield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expected_yield_ != nullptr) _impl_.expected_yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void PortfolioPosition::clear_current_nkd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_nkd_ != nullptr) _impl_.current_nkd_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void PortfolioPosition::clear_average_position_price_pt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.average_position_price_pt_ != nullptr) _impl_.average_position_price_pt_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void PortfolioPosition::clear_current_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_price_ != nullptr) _impl_.current_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void PortfolioPosition::clear_average_position_price_fifo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.average_position_price_fifo_ != nullptr) _impl_.average_position_price_fifo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void PortfolioPosition::clear_quantity_lots() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantity_lots_ != nullptr) _impl_.quantity_lots_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void PortfolioPosition::clear_blocked_lots() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.blocked_lots_ != nullptr) _impl_.blocked_lots_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void PortfolioPosition::clear_var_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.var_margin_ != nullptr) _impl_.var_margin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void PortfolioPosition::clear_expected_yield_fifo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expected_yield_fifo_ != nullptr) _impl_.expected_yield_fifo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
void PortfolioPosition::clear_daily_yield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.daily_yield_ != nullptr) _impl_.daily_yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
PortfolioPosition::PortfolioPosition(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioPosition)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PortfolioPosition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_type_(arena, from.instrument_type_),
        position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_) {}

PortfolioPosition::PortfolioPosition(
    ::google::protobuf::Arena* arena,
    const PortfolioPosition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PortfolioPosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.quantity_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.quantity_)
                        : nullptr;
  _impl_.average_position_price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.average_position_price_)
                        : nullptr;
  _impl_.expected_yield_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.expected_yield_)
                        : nullptr;
  _impl_.current_nkd_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.current_nkd_)
                        : nullptr;
  _impl_.average_position_price_pt_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.average_position_price_pt_)
                        : nullptr;
  _impl_.current_price_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.current_price_)
                        : nullptr;
  _impl_.average_position_price_fifo_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.average_position_price_fifo_)
                        : nullptr;
  _impl_.quantity_lots_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.quantity_lots_)
                        : nullptr;
  _impl_.blocked_lots_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.blocked_lots_)
                        : nullptr;
  _impl_.var_margin_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.var_margin_)
                        : nullptr;
  _impl_.expected_yield_fifo_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.expected_yield_fifo_)
                        : nullptr;
  _impl_.daily_yield_ = (cached_has_bits & 0x00000800u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.daily_yield_)
                        : nullptr;
  _impl_.blocked_ = from._impl_.blocked_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioPosition)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_type_(arena),
        position_uid_(arena),
        instrument_uid_(arena) {}

inline void PortfolioPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           0,
           offsetof(Impl_, blocked_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::blocked_));
}
PortfolioPosition::~PortfolioPosition() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PortfolioPosition)
  SharedDtor(*this);
}
inline void PortfolioPosition::SharedDtor(MessageLite& self) {
  PortfolioPosition& this_ = static_cast<PortfolioPosition&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_type_.Destroy();
  this_._impl_.position_uid_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.quantity_;
  delete this_._impl_.average_position_price_;
  delete this_._impl_.expected_yield_;
  delete this_._impl_.current_nkd_;
  delete this_._impl_.average_position_price_pt_;
  delete this_._impl_.current_price_;
  delete this_._impl_.average_position_price_fifo_;
  delete this_._impl_.quantity_lots_;
  delete this_._impl_.blocked_lots_;
  delete this_._impl_.var_margin_;
  delete this_._impl_.expected_yield_fifo_;
  delete this_._impl_.daily_yield_;
  this_._impl_.~Impl_();
}

inline void* PortfolioPosition::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PortfolioPosition(arena);
}
constexpr auto PortfolioPosition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PortfolioPosition),
                                            alignof(PortfolioPosition));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PortfolioPosition::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PortfolioPosition_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PortfolioPosition::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PortfolioPosition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PortfolioPosition::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PortfolioPosition>(), &PortfolioPosition::ByteSizeLong,
            &PortfolioPosition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_._cached_size_),
        false,
    },
    &PortfolioPosition::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PortfolioPosition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 12, 122, 2> PortfolioPosition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_._has_bits_),
    0, // no _extensions_
    31, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3092249600,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    12,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PortfolioPosition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.figi_)}},
    // string instrument_type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.instrument_type_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation quantity = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.quantity_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.expected_yield_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_nkd = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.current_nkd_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation average_position_price_pt = 7 [deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 4, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_pt_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_price = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 5, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.current_price_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price_fifo = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 6, 6, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_fifo_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation quantity_lots = 10 [deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {82, 7, 7, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.quantity_lots_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool blocked = 21;
    {::_pbi::TcParser::FastV8S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.blocked_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation blocked_lots = 22;
    {::_pbi::TcParser::FastMtS2,
     {434, 8, 8, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.blocked_lots_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string position_uid = 24;
    {::_pbi::TcParser::FastUS2,
     {450, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.position_uid_)}},
    // string instrument_uid = 25;
    {::_pbi::TcParser::FastUS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.instrument_uid_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue var_margin = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 9, 9, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.var_margin_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield_fifo = 27;
    {::_pbi::TcParser::FastMtS2,
     {474, 10, 10, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.expected_yield_fifo_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 31;
    {::_pbi::TcParser::FastMtS2,
     {506, 11, 11, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.daily_yield_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_type = 2;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.instrument_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation quantity = 3;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.quantity_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price = 4;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 5;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.expected_yield_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_nkd = 6;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.current_nkd_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation average_position_price_pt = 7 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_pt_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_price = 8;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.current_price_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price_fifo = 9;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.average_position_price_fifo_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation quantity_lots = 10 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.quantity_lots_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool blocked = 21;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.blocked_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation blocked_lots = 22;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.blocked_lots_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string position_uid = 24;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.position_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 25;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue var_margin = 26;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.var_margin_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield_fifo = 27;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.expected_yield_fifo_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 31;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.daily_yield_), _Internal::kHasBitsOffset + 11, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
  }}, {{
    "\64\4\17\0\0\0\0\0\0\0\0\0\0\14\16\0\0\0\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.PortfolioPosition"
    "figi"
    "instrument_type"
    "position_uid"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void PortfolioPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PortfolioPosition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_type_.ClearToEmpty();
  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.quantity_ != nullptr);
      _impl_.quantity_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.average_position_price_ != nullptr);
      _impl_.average_position_price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.expected_yield_ != nullptr);
      _impl_.expected_yield_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.current_nkd_ != nullptr);
      _impl_.current_nkd_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.average_position_price_pt_ != nullptr);
      _impl_.average_position_price_pt_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.current_price_ != nullptr);
      _impl_.current_price_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.average_position_price_fifo_ != nullptr);
      _impl_.average_position_price_fifo_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.quantity_lots_ != nullptr);
      _impl_.quantity_lots_->Clear();
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.blocked_lots_ != nullptr);
      _impl_.blocked_lots_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.var_margin_ != nullptr);
      _impl_.var_margin_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.expected_yield_fifo_ != nullptr);
      _impl_.expected_yield_fifo_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.daily_yield_ != nullptr);
      _impl_.daily_yield_->Clear();
    }
  }
  _impl_.blocked_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PortfolioPosition::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PortfolioPosition& this_ = static_cast<const PortfolioPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PortfolioPosition::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PortfolioPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PortfolioPosition)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PortfolioPosition.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string instrument_type = 2;
          if (!this_._internal_instrument_type().empty()) {
            const std::string& _s = this_._internal_instrument_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PortfolioPosition.instrument_type");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.pub.invest.api.contract.v1.Quotation quantity = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.quantity_, this_._impl_.quantity_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.average_position_price_, this_._impl_.average_position_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 5;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.expected_yield_, this_._impl_.expected_yield_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_nkd = 6;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.current_nkd_, this_._impl_.current_nkd_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation average_position_price_pt = 7 [deprecated = true];
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.average_position_price_pt_, this_._impl_.average_position_price_pt_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_price = 8;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.current_price_, this_._impl_.current_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price_fifo = 9;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.average_position_price_fifo_, this_._impl_.average_position_price_fifo_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation quantity_lots = 10 [deprecated = true];
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.quantity_lots_, this_._impl_.quantity_lots_->GetCachedSize(), target,
                stream);
          }

          // bool blocked = 21;
          if (this_._internal_blocked() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                21, this_._internal_blocked(), target);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation blocked_lots = 22;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                22, *this_._impl_.blocked_lots_, this_._impl_.blocked_lots_->GetCachedSize(), target,
                stream);
          }

          // string position_uid = 24;
          if (!this_._internal_position_uid().empty()) {
            const std::string& _s = this_._internal_position_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PortfolioPosition.position_uid");
            target = stream->WriteStringMaybeAliased(24, _s, target);
          }

          // string instrument_uid = 25;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PortfolioPosition.instrument_uid");
            target = stream->WriteStringMaybeAliased(25, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue var_margin = 26;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                26, *this_._impl_.var_margin_, this_._impl_.var_margin_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield_fifo = 27;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                27, *this_._impl_.expected_yield_fifo_, this_._impl_.expected_yield_fifo_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 31;
          if (cached_has_bits & 0x00000800u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                31, *this_._impl_.daily_yield_, this_._impl_.daily_yield_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PortfolioPosition)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PortfolioPosition::ByteSizeLong(const MessageLite& base) {
          const PortfolioPosition& this_ = static_cast<const PortfolioPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PortfolioPosition::ByteSizeLong() const {
          const PortfolioPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PortfolioPosition)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_type = 2;
            if (!this_._internal_instrument_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_type());
            }
            // string position_uid = 24;
            if (!this_._internal_position_uid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_position_uid());
            }
            // string instrument_uid = 25;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .tinkoff.pub.invest.api.contract.v1.Quotation quantity = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quantity_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.average_position_price_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 5;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expected_yield_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_nkd = 6;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.current_nkd_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation average_position_price_pt = 7 [deprecated = true];
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.average_position_price_pt_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_price = 8;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.current_price_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price_fifo = 9;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.average_position_price_fifo_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation quantity_lots = 10 [deprecated = true];
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quantity_lots_);
            }
          }
          if (cached_has_bits & 0x00000f00u) {
            // .tinkoff.pub.invest.api.contract.v1.Quotation blocked_lots = 22;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.blocked_lots_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue var_margin = 26;
            if (cached_has_bits & 0x00000200u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.var_margin_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield_fifo = 27;
            if (cached_has_bits & 0x00000400u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expected_yield_fifo_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 31;
            if (cached_has_bits & 0x00000800u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.daily_yield_);
            }
          }
           {
            // bool blocked = 21;
            if (this_._internal_blocked() != 0) {
              total_size += 3;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PortfolioPosition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PortfolioPosition*>(&to_msg);
  auto& from = static_cast<const PortfolioPosition&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_type().empty()) {
    _this->_internal_set_instrument_type(from._internal_instrument_type());
  }
  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.quantity_ != nullptr);
      if (_this->_impl_.quantity_ == nullptr) {
        _this->_impl_.quantity_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.quantity_);
      } else {
        _this->_impl_.quantity_->MergeFrom(*from._impl_.quantity_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.average_position_price_ != nullptr);
      if (_this->_impl_.average_position_price_ == nullptr) {
        _this->_impl_.average_position_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.average_position_price_);
      } else {
        _this->_impl_.average_position_price_->MergeFrom(*from._impl_.average_position_price_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.expected_yield_ != nullptr);
      if (_this->_impl_.expected_yield_ == nullptr) {
        _this->_impl_.expected_yield_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.expected_yield_);
      } else {
        _this->_impl_.expected_yield_->MergeFrom(*from._impl_.expected_yield_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.current_nkd_ != nullptr);
      if (_this->_impl_.current_nkd_ == nullptr) {
        _this->_impl_.current_nkd_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.current_nkd_);
      } else {
        _this->_impl_.current_nkd_->MergeFrom(*from._impl_.current_nkd_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.average_position_price_pt_ != nullptr);
      if (_this->_impl_.average_position_price_pt_ == nullptr) {
        _this->_impl_.average_position_price_pt_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.average_position_price_pt_);
      } else {
        _this->_impl_.average_position_price_pt_->MergeFrom(*from._impl_.average_position_price_pt_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.current_price_ != nullptr);
      if (_this->_impl_.current_price_ == nullptr) {
        _this->_impl_.current_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.current_price_);
      } else {
        _this->_impl_.current_price_->MergeFrom(*from._impl_.current_price_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.average_position_price_fifo_ != nullptr);
      if (_this->_impl_.average_position_price_fifo_ == nullptr) {
        _this->_impl_.average_position_price_fifo_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.average_position_price_fifo_);
      } else {
        _this->_impl_.average_position_price_fifo_->MergeFrom(*from._impl_.average_position_price_fifo_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.quantity_lots_ != nullptr);
      if (_this->_impl_.quantity_lots_ == nullptr) {
        _this->_impl_.quantity_lots_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.quantity_lots_);
      } else {
        _this->_impl_.quantity_lots_->MergeFrom(*from._impl_.quantity_lots_);
      }
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.blocked_lots_ != nullptr);
      if (_this->_impl_.blocked_lots_ == nullptr) {
        _this->_impl_.blocked_lots_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.blocked_lots_);
      } else {
        _this->_impl_.blocked_lots_->MergeFrom(*from._impl_.blocked_lots_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.var_margin_ != nullptr);
      if (_this->_impl_.var_margin_ == nullptr) {
        _this->_impl_.var_margin_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.var_margin_);
      } else {
        _this->_impl_.var_margin_->MergeFrom(*from._impl_.var_margin_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.expected_yield_fifo_ != nullptr);
      if (_this->_impl_.expected_yield_fifo_ == nullptr) {
        _this->_impl_.expected_yield_fifo_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.expected_yield_fifo_);
      } else {
        _this->_impl_.expected_yield_fifo_->MergeFrom(*from._impl_.expected_yield_fifo_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(from._impl_.daily_yield_ != nullptr);
      if (_this->_impl_.daily_yield_ == nullptr) {
        _this->_impl_.daily_yield_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.daily_yield_);
      } else {
        _this->_impl_.daily_yield_->MergeFrom(*from._impl_.daily_yield_);
      }
    }
  }
  if (from._internal_blocked() != 0) {
    _this->_impl_.blocked_ = from._impl_.blocked_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioPosition::CopyFrom(const PortfolioPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PortfolioPosition::InternalSwap(PortfolioPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_type_, &other->_impl_.instrument_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.blocked_)
      + sizeof(PortfolioPosition::_impl_.blocked_)
      - PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.quantity_)>(
          reinterpret_cast<char*>(&_impl_.quantity_),
          reinterpret_cast<char*>(&other->_impl_.quantity_));
}

::google::protobuf::Metadata PortfolioPosition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VirtualPortfolioPosition::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VirtualPortfolioPosition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_._has_bits_);
};

void VirtualPortfolioPosition::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantity_ != nullptr) _impl_.quantity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void VirtualPortfolioPosition::clear_average_position_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.average_position_price_ != nullptr) _impl_.average_position_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void VirtualPortfolioPosition::clear_expected_yield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expected_yield_ != nullptr) _impl_.expected_yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void VirtualPortfolioPosition::clear_expected_yield_fifo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expected_yield_fifo_ != nullptr) _impl_.expected_yield_fifo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void VirtualPortfolioPosition::clear_expire_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expire_date_ != nullptr) _impl_.expire_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void VirtualPortfolioPosition::clear_current_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_price_ != nullptr) _impl_.current_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void VirtualPortfolioPosition::clear_average_position_price_fifo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.average_position_price_fifo_ != nullptr) _impl_.average_position_price_fifo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void VirtualPortfolioPosition::clear_daily_yield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.daily_yield_ != nullptr) _impl_.daily_yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
VirtualPortfolioPosition::VirtualPortfolioPosition(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition)
}
inline PROTOBUF_NDEBUG_INLINE VirtualPortfolioPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_),
        figi_(arena, from.figi_),
        instrument_type_(arena, from.instrument_type_) {}

VirtualPortfolioPosition::VirtualPortfolioPosition(
    ::google::protobuf::Arena* arena,
    const VirtualPortfolioPosition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VirtualPortfolioPosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.quantity_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.quantity_)
                        : nullptr;
  _impl_.average_position_price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.average_position_price_)
                        : nullptr;
  _impl_.expected_yield_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.expected_yield_)
                        : nullptr;
  _impl_.expected_yield_fifo_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.expected_yield_fifo_)
                        : nullptr;
  _impl_.expire_date_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.expire_date_)
                        : nullptr;
  _impl_.current_price_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.current_price_)
                        : nullptr;
  _impl_.average_position_price_fifo_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.average_position_price_fifo_)
                        : nullptr;
  _impl_.daily_yield_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.daily_yield_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition)
}
inline PROTOBUF_NDEBUG_INLINE VirtualPortfolioPosition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        position_uid_(arena),
        instrument_uid_(arena),
        figi_(arena),
        instrument_type_(arena) {}

inline void VirtualPortfolioPosition::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           0,
           offsetof(Impl_, daily_yield_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::daily_yield_));
}
VirtualPortfolioPosition::~VirtualPortfolioPosition() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition)
  SharedDtor(*this);
}
inline void VirtualPortfolioPosition::SharedDtor(MessageLite& self) {
  VirtualPortfolioPosition& this_ = static_cast<VirtualPortfolioPosition&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.position_uid_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_type_.Destroy();
  delete this_._impl_.quantity_;
  delete this_._impl_.average_position_price_;
  delete this_._impl_.expected_yield_;
  delete this_._impl_.expected_yield_fifo_;
  delete this_._impl_.expire_date_;
  delete this_._impl_.current_price_;
  delete this_._impl_.average_position_price_fifo_;
  delete this_._impl_.daily_yield_;
  this_._impl_.~Impl_();
}

inline void* VirtualPortfolioPosition::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VirtualPortfolioPosition(arena);
}
constexpr auto VirtualPortfolioPosition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(VirtualPortfolioPosition),
                                            alignof(VirtualPortfolioPosition));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VirtualPortfolioPosition::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VirtualPortfolioPosition_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VirtualPortfolioPosition::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VirtualPortfolioPosition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VirtualPortfolioPosition::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VirtualPortfolioPosition>(), &VirtualPortfolioPosition::ByteSizeLong,
            &VirtualPortfolioPosition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_._cached_size_),
        false,
    },
    &VirtualPortfolioPosition::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VirtualPortfolioPosition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 8, 121, 2> VirtualPortfolioPosition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_._has_bits_),
    0, // no _extensions_
    31, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3221223424,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::VirtualPortfolioPosition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string position_uid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.position_uid_)}},
    // string instrument_uid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.instrument_uid_)}},
    // string figi = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.figi_)}},
    // string instrument_type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.instrument_type_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation quantity = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.quantity_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.average_position_price_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expected_yield_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield_fifo = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expected_yield_fifo_)}},
    // .google.protobuf.Timestamp expire_date = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expire_date_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_price = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.current_price_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price_fifo = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 6, 6, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.average_position_price_fifo_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 31;
    {::_pbi::TcParser::FastMtS2,
     {506, 7, 7, PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.daily_yield_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string position_uid = 1;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.position_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 2;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string figi = 3;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_type = 4;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.instrument_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation quantity = 5;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.quantity_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price = 6;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.average_position_price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 7;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expected_yield_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield_fifo = 8;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expected_yield_fifo_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp expire_date = 9;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.expire_date_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_price = 10;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.current_price_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price_fifo = 11;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.average_position_price_fifo_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 31;
    {PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.daily_yield_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
  }}, {{
    "\73\14\16\4\17\0\0\0\0\0\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition"
    "position_uid"
    "instrument_uid"
    "figi"
    "instrument_type"
  }},
};

PROTOBUF_NOINLINE void VirtualPortfolioPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.quantity_ != nullptr);
      _impl_.quantity_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.average_position_price_ != nullptr);
      _impl_.average_position_price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.expected_yield_ != nullptr);
      _impl_.expected_yield_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.expected_yield_fifo_ != nullptr);
      _impl_.expected_yield_fifo_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.expire_date_ != nullptr);
      _impl_.expire_date_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.current_price_ != nullptr);
      _impl_.current_price_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.average_position_price_fifo_ != nullptr);
      _impl_.average_position_price_fifo_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.daily_yield_ != nullptr);
      _impl_.daily_yield_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VirtualPortfolioPosition::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VirtualPortfolioPosition& this_ = static_cast<const VirtualPortfolioPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VirtualPortfolioPosition::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VirtualPortfolioPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string position_uid = 1;
          if (!this_._internal_position_uid().empty()) {
            const std::string& _s = this_._internal_position_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition.position_uid");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string instrument_uid = 2;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition.instrument_uid");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string figi = 3;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition.figi");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string instrument_type = 4;
          if (!this_._internal_instrument_type().empty()) {
            const std::string& _s = this_._internal_instrument_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition.instrument_type");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.pub.invest.api.contract.v1.Quotation quantity = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.quantity_, this_._impl_.quantity_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price = 6;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.average_position_price_, this_._impl_.average_position_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 7;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.expected_yield_, this_._impl_.expected_yield_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield_fifo = 8;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.expected_yield_fifo_, this_._impl_.expected_yield_fifo_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp expire_date = 9;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.expire_date_, this_._impl_.expire_date_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_price = 10;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.current_price_, this_._impl_.current_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price_fifo = 11;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.average_position_price_fifo_, this_._impl_.average_position_price_fifo_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 31;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                31, *this_._impl_.daily_yield_, this_._impl_.daily_yield_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VirtualPortfolioPosition::ByteSizeLong(const MessageLite& base) {
          const VirtualPortfolioPosition& this_ = static_cast<const VirtualPortfolioPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VirtualPortfolioPosition::ByteSizeLong() const {
          const VirtualPortfolioPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string position_uid = 1;
            if (!this_._internal_position_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_position_uid());
            }
            // string instrument_uid = 2;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // string figi = 3;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_type = 4;
            if (!this_._internal_instrument_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_type());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .tinkoff.pub.invest.api.contract.v1.Quotation quantity = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quantity_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price = 6;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.average_position_price_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expected_yield_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation expected_yield_fifo = 8;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expected_yield_fifo_);
            }
            // .google.protobuf.Timestamp expire_date = 9;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expire_date_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue current_price = 10;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.current_price_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue average_position_price_fifo = 11;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.average_position_price_fifo_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue daily_yield = 31;
            if (cached_has_bits & 0x00000080u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.daily_yield_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VirtualPortfolioPosition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VirtualPortfolioPosition*>(&to_msg);
  auto& from = static_cast<const VirtualPortfolioPosition&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_type().empty()) {
    _this->_internal_set_instrument_type(from._internal_instrument_type());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.quantity_ != nullptr);
      if (_this->_impl_.quantity_ == nullptr) {
        _this->_impl_.quantity_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.quantity_);
      } else {
        _this->_impl_.quantity_->MergeFrom(*from._impl_.quantity_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.average_position_price_ != nullptr);
      if (_this->_impl_.average_position_price_ == nullptr) {
        _this->_impl_.average_position_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.average_position_price_);
      } else {
        _this->_impl_.average_position_price_->MergeFrom(*from._impl_.average_position_price_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.expected_yield_ != nullptr);
      if (_this->_impl_.expected_yield_ == nullptr) {
        _this->_impl_.expected_yield_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.expected_yield_);
      } else {
        _this->_impl_.expected_yield_->MergeFrom(*from._impl_.expected_yield_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.expected_yield_fifo_ != nullptr);
      if (_this->_impl_.expected_yield_fifo_ == nullptr) {
        _this->_impl_.expected_yield_fifo_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.expected_yield_fifo_);
      } else {
        _this->_impl_.expected_yield_fifo_->MergeFrom(*from._impl_.expected_yield_fifo_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.expire_date_ != nullptr);
      if (_this->_impl_.expire_date_ == nullptr) {
        _this->_impl_.expire_date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.expire_date_);
      } else {
        _this->_impl_.expire_date_->MergeFrom(*from._impl_.expire_date_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.current_price_ != nullptr);
      if (_this->_impl_.current_price_ == nullptr) {
        _this->_impl_.current_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.current_price_);
      } else {
        _this->_impl_.current_price_->MergeFrom(*from._impl_.current_price_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.average_position_price_fifo_ != nullptr);
      if (_this->_impl_.average_position_price_fifo_ == nullptr) {
        _this->_impl_.average_position_price_fifo_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.average_position_price_fifo_);
      } else {
        _this->_impl_.average_position_price_fifo_->MergeFrom(*from._impl_.average_position_price_fifo_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.daily_yield_ != nullptr);
      if (_this->_impl_.daily_yield_ == nullptr) {
        _this->_impl_.daily_yield_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.daily_yield_);
      } else {
        _this->_impl_.daily_yield_->MergeFrom(*from._impl_.daily_yield_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VirtualPortfolioPosition::CopyFrom(const VirtualPortfolioPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.VirtualPortfolioPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VirtualPortfolioPosition::InternalSwap(VirtualPortfolioPosition* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_type_, &other->_impl_.instrument_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.daily_yield_)
      + sizeof(VirtualPortfolioPosition::_impl_.daily_yield_)
      - PROTOBUF_FIELD_OFFSET(VirtualPortfolioPosition, _impl_.quantity_)>(
          reinterpret_cast<char*>(&_impl_.quantity_),
          reinterpret_cast<char*>(&other->_impl_.quantity_));
}

::google::protobuf::Metadata VirtualPortfolioPosition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionsSecurities::_Internal {
 public:
};

PositionsSecurities::PositionsSecurities(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PositionsSecurities)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSecurities::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PositionsSecurities& from_msg)
      : figi_(arena, from.figi_),
        position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_),
        instrument_type_(arena, from.instrument_type_),
        _cached_size_{0} {}

PositionsSecurities::PositionsSecurities(
    ::google::protobuf::Arena* arena,
    const PositionsSecurities& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionsSecurities* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, blocked_),
           offsetof(Impl_, exchange_blocked_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::exchange_blocked_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PositionsSecurities)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSecurities::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        position_uid_(arena),
        instrument_uid_(arena),
        instrument_type_(arena),
        _cached_size_{0} {}

inline void PositionsSecurities::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           0,
           offsetof(Impl_, exchange_blocked_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::exchange_blocked_));
}
PositionsSecurities::~PositionsSecurities() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PositionsSecurities)
  SharedDtor(*this);
}
inline void PositionsSecurities::SharedDtor(MessageLite& self) {
  PositionsSecurities& this_ = static_cast<PositionsSecurities&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.position_uid_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.instrument_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PositionsSecurities::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionsSecurities(arena);
}
constexpr auto PositionsSecurities::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PositionsSecurities),
                                            alignof(PositionsSecurities));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionsSecurities::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionsSecurities_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionsSecurities::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionsSecurities>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionsSecurities::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionsSecurities>(), &PositionsSecurities::ByteSizeLong,
            &PositionsSecurities::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_._cached_size_),
        false,
    },
    &PositionsSecurities::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionsSecurities::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 108, 2> PositionsSecurities::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    16, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294933472,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsSecurities>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string instrument_type = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.instrument_type_)}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.figi_)}},
    // int64 blocked = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PositionsSecurities, _impl_.blocked_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.blocked_)}},
    // int64 balance = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PositionsSecurities, _impl_.balance_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.balance_)}},
    // string position_uid = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.position_uid_)}},
    // string instrument_uid = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.instrument_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 blocked = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.blocked_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 balance = 3;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.balance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string position_uid = 4;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.position_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 5;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.instrument_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool exchange_blocked = 11;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.exchange_blocked_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string instrument_type = 16;
    {PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.instrument_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\4\0\0\14\16\0\17"
    "tinkoff.pub.invest.api.contract.v1.PositionsSecurities"
    "figi"
    "position_uid"
    "instrument_uid"
    "instrument_type"
  }},
};

PROTOBUF_NOINLINE void PositionsSecurities::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PositionsSecurities)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.instrument_type_.ClearToEmpty();
  ::memset(&_impl_.blocked_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.exchange_blocked_) -
      reinterpret_cast<char*>(&_impl_.blocked_)) + sizeof(_impl_.exchange_blocked_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionsSecurities::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionsSecurities& this_ = static_cast<const PositionsSecurities&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionsSecurities::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionsSecurities& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PositionsSecurities)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsSecurities.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int64 blocked = 2;
          if (this_._internal_blocked() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_blocked(), target);
          }

          // int64 balance = 3;
          if (this_._internal_balance() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_balance(), target);
          }

          // string position_uid = 4;
          if (!this_._internal_position_uid().empty()) {
            const std::string& _s = this_._internal_position_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsSecurities.position_uid");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string instrument_uid = 5;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsSecurities.instrument_uid");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // bool exchange_blocked = 11;
          if (this_._internal_exchange_blocked() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_exchange_blocked(), target);
          }

          // string instrument_type = 16;
          if (!this_._internal_instrument_type().empty()) {
            const std::string& _s = this_._internal_instrument_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsSecurities.instrument_type");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PositionsSecurities)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionsSecurities::ByteSizeLong(const MessageLite& base) {
          const PositionsSecurities& this_ = static_cast<const PositionsSecurities&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionsSecurities::ByteSizeLong() const {
          const PositionsSecurities& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PositionsSecurities)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string position_uid = 4;
            if (!this_._internal_position_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_position_uid());
            }
            // string instrument_uid = 5;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // string instrument_type = 16;
            if (!this_._internal_instrument_type().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_type());
            }
            // int64 blocked = 2;
            if (this_._internal_blocked() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_blocked());
            }
            // int64 balance = 3;
            if (this_._internal_balance() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_balance());
            }
            // bool exchange_blocked = 11;
            if (this_._internal_exchange_blocked() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionsSecurities::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionsSecurities*>(&to_msg);
  auto& from = static_cast<const PositionsSecurities&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PositionsSecurities)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_instrument_type().empty()) {
    _this->_internal_set_instrument_type(from._internal_instrument_type());
  }
  if (from._internal_blocked() != 0) {
    _this->_impl_.blocked_ = from._impl_.blocked_;
  }
  if (from._internal_balance() != 0) {
    _this->_impl_.balance_ = from._impl_.balance_;
  }
  if (from._internal_exchange_blocked() != 0) {
    _this->_impl_.exchange_blocked_ = from._impl_.exchange_blocked_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsSecurities::CopyFrom(const PositionsSecurities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PositionsSecurities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionsSecurities::InternalSwap(PositionsSecurities* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_type_, &other->_impl_.instrument_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.exchange_blocked_)
      + sizeof(PositionsSecurities::_impl_.exchange_blocked_)
      - PROTOBUF_FIELD_OFFSET(PositionsSecurities, _impl_.blocked_)>(
          reinterpret_cast<char*>(&_impl_.blocked_),
          reinterpret_cast<char*>(&other->_impl_.blocked_));
}

::google::protobuf::Metadata PositionsSecurities::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionsFutures::_Internal {
 public:
};

PositionsFutures::PositionsFutures(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PositionsFutures)
}
inline PROTOBUF_NDEBUG_INLINE PositionsFutures::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PositionsFutures& from_msg)
      : figi_(arena, from.figi_),
        position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_),
        _cached_size_{0} {}

PositionsFutures::PositionsFutures(
    ::google::protobuf::Arena* arena,
    const PositionsFutures& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionsFutures* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, blocked_),
           offsetof(Impl_, balance_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::balance_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PositionsFutures)
}
inline PROTOBUF_NDEBUG_INLINE PositionsFutures::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        position_uid_(arena),
        instrument_uid_(arena),
        _cached_size_{0} {}

inline void PositionsFutures::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           0,
           offsetof(Impl_, balance_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::balance_));
}
PositionsFutures::~PositionsFutures() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PositionsFutures)
  SharedDtor(*this);
}
inline void PositionsFutures::SharedDtor(MessageLite& self) {
  PositionsFutures& this_ = static_cast<PositionsFutures&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.position_uid_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PositionsFutures::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionsFutures(arena);
}
constexpr auto PositionsFutures::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PositionsFutures),
                                            alignof(PositionsFutures));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionsFutures::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionsFutures_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionsFutures::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionsFutures>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionsFutures::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionsFutures>(), &PositionsFutures::ByteSizeLong,
            &PositionsFutures::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_._cached_size_),
        false,
    },
    &PositionsFutures::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionsFutures::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 90, 2> PositionsFutures::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsFutures>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.figi_)}},
    // int64 blocked = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PositionsFutures, _impl_.blocked_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.blocked_)}},
    // int64 balance = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PositionsFutures, _impl_.balance_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.balance_)}},
    // string position_uid = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.position_uid_)}},
    // string instrument_uid = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.instrument_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 blocked = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.blocked_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 balance = 3;
    {PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.balance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string position_uid = 4;
    {PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.position_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 5;
    {PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.instrument_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\4\0\0\14\16\0\0"
    "tinkoff.pub.invest.api.contract.v1.PositionsFutures"
    "figi"
    "position_uid"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void PositionsFutures::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PositionsFutures)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  ::memset(&_impl_.blocked_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.balance_) -
      reinterpret_cast<char*>(&_impl_.blocked_)) + sizeof(_impl_.balance_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionsFutures::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionsFutures& this_ = static_cast<const PositionsFutures&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionsFutures::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionsFutures& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PositionsFutures)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsFutures.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int64 blocked = 2;
          if (this_._internal_blocked() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_blocked(), target);
          }

          // int64 balance = 3;
          if (this_._internal_balance() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_balance(), target);
          }

          // string position_uid = 4;
          if (!this_._internal_position_uid().empty()) {
            const std::string& _s = this_._internal_position_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsFutures.position_uid");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string instrument_uid = 5;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsFutures.instrument_uid");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PositionsFutures)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionsFutures::ByteSizeLong(const MessageLite& base) {
          const PositionsFutures& this_ = static_cast<const PositionsFutures&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionsFutures::ByteSizeLong() const {
          const PositionsFutures& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PositionsFutures)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string position_uid = 4;
            if (!this_._internal_position_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_position_uid());
            }
            // string instrument_uid = 5;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // int64 blocked = 2;
            if (this_._internal_blocked() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_blocked());
            }
            // int64 balance = 3;
            if (this_._internal_balance() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_balance());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionsFutures::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionsFutures*>(&to_msg);
  auto& from = static_cast<const PositionsFutures&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PositionsFutures)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (from._internal_blocked() != 0) {
    _this->_impl_.blocked_ = from._impl_.blocked_;
  }
  if (from._internal_balance() != 0) {
    _this->_impl_.balance_ = from._impl_.balance_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsFutures::CopyFrom(const PositionsFutures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PositionsFutures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionsFutures::InternalSwap(PositionsFutures* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.balance_)
      + sizeof(PositionsFutures::_impl_.balance_)
      - PROTOBUF_FIELD_OFFSET(PositionsFutures, _impl_.blocked_)>(
          reinterpret_cast<char*>(&_impl_.blocked_),
          reinterpret_cast<char*>(&other->_impl_.blocked_));
}

::google::protobuf::Metadata PositionsFutures::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionsOptions::_Internal {
 public:
};

PositionsOptions::PositionsOptions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PositionsOptions)
}
inline PROTOBUF_NDEBUG_INLINE PositionsOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PositionsOptions& from_msg)
      : position_uid_(arena, from.position_uid_),
        instrument_uid_(arena, from.instrument_uid_),
        _cached_size_{0} {}

PositionsOptions::PositionsOptions(
    ::google::protobuf::Arena* arena,
    const PositionsOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionsOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, blocked_),
           offsetof(Impl_, balance_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::balance_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PositionsOptions)
}
inline PROTOBUF_NDEBUG_INLINE PositionsOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : position_uid_(arena),
        instrument_uid_(arena),
        _cached_size_{0} {}

inline void PositionsOptions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, blocked_),
           0,
           offsetof(Impl_, balance_) -
               offsetof(Impl_, blocked_) +
               sizeof(Impl_::balance_));
}
PositionsOptions::~PositionsOptions() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PositionsOptions)
  SharedDtor(*this);
}
inline void PositionsOptions::SharedDtor(MessageLite& self) {
  PositionsOptions& this_ = static_cast<PositionsOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.position_uid_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PositionsOptions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionsOptions(arena);
}
constexpr auto PositionsOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PositionsOptions),
                                            alignof(PositionsOptions));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionsOptions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionsOptions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionsOptions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionsOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionsOptions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionsOptions>(), &PositionsOptions::ByteSizeLong,
            &PositionsOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_._cached_size_),
        false,
    },
    &PositionsOptions::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionsOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 0, 86, 2> PositionsOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    21, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293917692,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string position_uid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.position_uid_)}},
    // string instrument_uid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.instrument_uid_)}},
    // int64 blocked = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PositionsOptions, _impl_.blocked_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.blocked_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 balance = 21;
    {::_pbi::TcParser::FastV64S2,
     {424, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.balance_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string position_uid = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.position_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.instrument_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 blocked = 11;
    {PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.blocked_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 balance = 21;
    {PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.balance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\63\14\16\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.PositionsOptions"
    "position_uid"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void PositionsOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PositionsOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.position_uid_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  ::memset(&_impl_.blocked_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.balance_) -
      reinterpret_cast<char*>(&_impl_.blocked_)) + sizeof(_impl_.balance_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionsOptions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionsOptions& this_ = static_cast<const PositionsOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionsOptions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionsOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PositionsOptions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string position_uid = 1;
          if (!this_._internal_position_uid().empty()) {
            const std::string& _s = this_._internal_position_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsOptions.position_uid");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string instrument_uid = 2;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsOptions.instrument_uid");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 blocked = 11;
          if (this_._internal_blocked() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<11>(
                    stream, this_._internal_blocked(), target);
          }

          // int64 balance = 21;
          if (this_._internal_balance() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                21, this_._internal_balance(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PositionsOptions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionsOptions::ByteSizeLong(const MessageLite& base) {
          const PositionsOptions& this_ = static_cast<const PositionsOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionsOptions::ByteSizeLong() const {
          const PositionsOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PositionsOptions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string position_uid = 1;
            if (!this_._internal_position_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_position_uid());
            }
            // string instrument_uid = 2;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // int64 blocked = 11;
            if (this_._internal_blocked() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_blocked());
            }
            // int64 balance = 21;
            if (this_._internal_balance() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_balance());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionsOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionsOptions*>(&to_msg);
  auto& from = static_cast<const PositionsOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PositionsOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (from._internal_blocked() != 0) {
    _this->_impl_.blocked_ = from._impl_.blocked_;
  }
  if (from._internal_balance() != 0) {
    _this->_impl_.balance_ = from._impl_.balance_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsOptions::CopyFrom(const PositionsOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PositionsOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionsOptions::InternalSwap(PositionsOptions* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.balance_)
      + sizeof(PositionsOptions::_impl_.balance_)
      - PROTOBUF_FIELD_OFFSET(PositionsOptions, _impl_.blocked_)>(
          reinterpret_cast<char*>(&_impl_.blocked_),
          reinterpret_cast<char*>(&other->_impl_.blocked_));
}

::google::protobuf::Metadata PositionsOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BrokerReportRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReportRequest, _impl_._oneof_case_);
};

void BrokerReportRequest::set_allocated_generate_broker_report_request(::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest* generate_broker_report_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (generate_broker_report_request) {
    ::google::protobuf::Arena* submessage_arena = generate_broker_report_request->GetArena();
    if (message_arena != submessage_arena) {
      generate_broker_report_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, generate_broker_report_request, submessage_arena);
    }
    set_has_generate_broker_report_request();
    _impl_.payload_.generate_broker_report_request_ = generate_broker_report_request;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest.generate_broker_report_request)
}
void BrokerReportRequest::set_allocated_get_broker_report_request(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportRequest* get_broker_report_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (get_broker_report_request) {
    ::google::protobuf::Arena* submessage_arena = get_broker_report_request->GetArena();
    if (message_arena != submessage_arena) {
      get_broker_report_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_broker_report_request, submessage_arena);
    }
    set_has_get_broker_report_request();
    _impl_.payload_.get_broker_report_request_ = get_broker_report_request;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest.get_broker_report_request)
}
BrokerReportRequest::BrokerReportRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::BrokerReportRequest& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BrokerReportRequest::BrokerReportRequest(
    ::google::protobuf::Arena* arena,
    const BrokerReportRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BrokerReportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kGenerateBrokerReportRequest:
        _impl_.payload_.generate_broker_report_request_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest>(arena, *from._impl_.payload_.generate_broker_report_request_);
        break;
      case kGetBrokerReportRequest:
        _impl_.payload_.get_broker_report_request_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GetBrokerReportRequest>(arena, *from._impl_.payload_.get_broker_report_request_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BrokerReportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BrokerReportRequest::~BrokerReportRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest)
  SharedDtor(*this);
}
inline void BrokerReportRequest::SharedDtor(MessageLite& self) {
  BrokerReportRequest& this_ = static_cast<BrokerReportRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void BrokerReportRequest::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kGenerateBrokerReportRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.generate_broker_report_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.generate_broker_report_request_);
      }
      break;
    }
    case kGetBrokerReportRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.get_broker_report_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.get_broker_report_request_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* BrokerReportRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BrokerReportRequest(arena);
}
constexpr auto BrokerReportRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BrokerReportRequest),
                                            alignof(BrokerReportRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BrokerReportRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BrokerReportRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BrokerReportRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BrokerReportRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BrokerReportRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BrokerReportRequest>(), &BrokerReportRequest::ByteSizeLong,
            &BrokerReportRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BrokerReportRequest, _impl_._cached_size_),
        false,
    },
    &BrokerReportRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BrokerReportRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> BrokerReportRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::BrokerReportRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest generate_broker_report_request = 1;
    {PROTOBUF_FIELD_OFFSET(BrokerReportRequest, _impl_.payload_.generate_broker_report_request_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest get_broker_report_request = 2;
    {PROTOBUF_FIELD_OFFSET(BrokerReportRequest, _impl_.payload_.get_broker_report_request_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetBrokerReportRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BrokerReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BrokerReportRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BrokerReportRequest& this_ = static_cast<const BrokerReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BrokerReportRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BrokerReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            case kGenerateBrokerReportRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.payload_.generate_broker_report_request_, this_._impl_.payload_.generate_broker_report_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kGetBrokerReportRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.payload_.get_broker_report_request_, this_._impl_.payload_.get_broker_report_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BrokerReportRequest::ByteSizeLong(const MessageLite& base) {
          const BrokerReportRequest& this_ = static_cast<const BrokerReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BrokerReportRequest::ByteSizeLong() const {
          const BrokerReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            // .tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest generate_broker_report_request = 1;
            case kGenerateBrokerReportRequest: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.generate_broker_report_request_);
              break;
            }
            // .tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest get_broker_report_request = 2;
            case kGetBrokerReportRequest: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.get_broker_report_request_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BrokerReportRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BrokerReportRequest*>(&to_msg);
  auto& from = static_cast<const BrokerReportRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kGenerateBrokerReportRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.generate_broker_report_request_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest>(arena, *from._impl_.payload_.generate_broker_report_request_);
        } else {
          _this->_impl_.payload_.generate_broker_report_request_->MergeFrom(from._internal_generate_broker_report_request());
        }
        break;
      }
      case kGetBrokerReportRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.get_broker_report_request_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GetBrokerReportRequest>(arena, *from._impl_.payload_.get_broker_report_request_);
        } else {
          _this->_impl_.payload_.get_broker_report_request_->MergeFrom(from._internal_get_broker_report_request());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrokerReportRequest::CopyFrom(const BrokerReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.BrokerReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BrokerReportRequest::InternalSwap(BrokerReportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BrokerReportRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BrokerReportResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::BrokerReportResponse, _impl_._oneof_case_);
};

void BrokerReportResponse::set_allocated_generate_broker_report_response(::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportResponse* generate_broker_report_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (generate_broker_report_response) {
    ::google::protobuf::Arena* submessage_arena = generate_broker_report_response->GetArena();
    if (message_arena != submessage_arena) {
      generate_broker_report_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, generate_broker_report_response, submessage_arena);
    }
    set_has_generate_broker_report_response();
    _impl_.payload_.generate_broker_report_response_ = generate_broker_report_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse.generate_broker_report_response)
}
void BrokerReportResponse::set_allocated_get_broker_report_response(::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse* get_broker_report_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (get_broker_report_response) {
    ::google::protobuf::Arena* submessage_arena = get_broker_report_response->GetArena();
    if (message_arena != submessage_arena) {
      get_broker_report_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_broker_report_response, submessage_arena);
    }
    set_has_get_broker_report_response();
    _impl_.payload_.get_broker_report_response_ = get_broker_report_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse.get_broker_report_response)
}
BrokerReportResponse::BrokerReportResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::BrokerReportResponse& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BrokerReportResponse::BrokerReportResponse(
    ::google::protobuf::Arena* arena,
    const BrokerReportResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BrokerReportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kGenerateBrokerReportResponse:
        _impl_.payload_.generate_broker_report_response_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportResponse>(arena, *from._impl_.payload_.generate_broker_report_response_);
        break;
      case kGetBrokerReportResponse:
        _impl_.payload_.get_broker_report_response_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse>(arena, *from._impl_.payload_.get_broker_report_response_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BrokerReportResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BrokerReportResponse::~BrokerReportResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse)
  SharedDtor(*this);
}
inline void BrokerReportResponse::SharedDtor(MessageLite& self) {
  BrokerReportResponse& this_ = static_cast<BrokerReportResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void BrokerReportResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kGenerateBrokerReportResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.generate_broker_report_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.generate_broker_report_response_);
      }
      break;
    }
    case kGetBrokerReportResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.get_broker_report_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.get_broker_report_response_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* BrokerReportResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BrokerReportResponse(arena);
}
constexpr auto BrokerReportResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BrokerReportResponse),
                                            alignof(BrokerReportResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BrokerReportResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BrokerReportResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BrokerReportResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BrokerReportResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BrokerReportResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BrokerReportResponse>(), &BrokerReportResponse::ByteSizeLong,
            &BrokerReportResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BrokerReportResponse, _impl_._cached_size_),
        false,
    },
    &BrokerReportResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BrokerReportResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> BrokerReportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::BrokerReportResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse generate_broker_report_response = 1;
    {PROTOBUF_FIELD_OFFSET(BrokerReportResponse, _impl_.payload_.generate_broker_report_response_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.GetBrokerReportResponse get_broker_report_response = 2;
    {PROTOBUF_FIELD_OFFSET(BrokerReportResponse, _impl_.payload_.get_broker_report_response_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportResponse>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BrokerReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BrokerReportResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BrokerReportResponse& this_ = static_cast<const BrokerReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BrokerReportResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BrokerReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            case kGenerateBrokerReportResponse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.payload_.generate_broker_report_response_, this_._impl_.payload_.generate_broker_report_response_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kGetBrokerReportResponse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.payload_.get_broker_report_response_, this_._impl_.payload_.get_broker_report_response_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BrokerReportResponse::ByteSizeLong(const MessageLite& base) {
          const BrokerReportResponse& this_ = static_cast<const BrokerReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BrokerReportResponse::ByteSizeLong() const {
          const BrokerReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            // .tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse generate_broker_report_response = 1;
            case kGenerateBrokerReportResponse: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.generate_broker_report_response_);
              break;
            }
            // .tinkoff.pub.invest.api.contract.v1.GetBrokerReportResponse get_broker_report_response = 2;
            case kGetBrokerReportResponse: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.get_broker_report_response_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BrokerReportResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BrokerReportResponse*>(&to_msg);
  auto& from = static_cast<const BrokerReportResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kGenerateBrokerReportResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.generate_broker_report_response_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportResponse>(arena, *from._impl_.payload_.generate_broker_report_response_);
        } else {
          _this->_impl_.payload_.generate_broker_report_response_->MergeFrom(from._internal_generate_broker_report_response());
        }
        break;
      }
      case kGetBrokerReportResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.get_broker_report_response_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse>(arena, *from._impl_.payload_.get_broker_report_response_);
        } else {
          _this->_impl_.payload_.get_broker_report_response_->MergeFrom(from._internal_get_broker_report_response());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrokerReportResponse::CopyFrom(const BrokerReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.BrokerReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BrokerReportResponse::InternalSwap(BrokerReportResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BrokerReportResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenerateBrokerReportRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GenerateBrokerReportRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_._has_bits_);
};

void GenerateBrokerReportRequest::clear_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GenerateBrokerReportRequest::clear_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GenerateBrokerReportRequest::GenerateBrokerReportRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateBrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_) {}

GenerateBrokerReportRequest::GenerateBrokerReportRequest(
    ::google::protobuf::Arena* arena,
    const GenerateBrokerReportRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenerateBrokerReportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.from_)
                        : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.to_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateBrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena) {}

inline void GenerateBrokerReportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, to_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::to_));
}
GenerateBrokerReportRequest::~GenerateBrokerReportRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest)
  SharedDtor(*this);
}
inline void GenerateBrokerReportRequest::SharedDtor(MessageLite& self) {
  GenerateBrokerReportRequest& this_ = static_cast<GenerateBrokerReportRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  delete this_._impl_.from_;
  delete this_._impl_.to_;
  this_._impl_.~Impl_();
}

inline void* GenerateBrokerReportRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenerateBrokerReportRequest(arena);
}
constexpr auto GenerateBrokerReportRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GenerateBrokerReportRequest),
                                            alignof(GenerateBrokerReportRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenerateBrokerReportRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenerateBrokerReportRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenerateBrokerReportRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenerateBrokerReportRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenerateBrokerReportRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenerateBrokerReportRequest>(), &GenerateBrokerReportRequest::ByteSizeLong,
            &GenerateBrokerReportRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_._cached_size_),
        false,
    },
    &GenerateBrokerReportRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenerateBrokerReportRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 81, 2> GenerateBrokerReportRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.account_id_)}},
    // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.from_)}},
    // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.to_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.from_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.to_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\76\12\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void GenerateBrokerReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenerateBrokerReportRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenerateBrokerReportRequest& this_ = static_cast<const GenerateBrokerReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenerateBrokerReportRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenerateBrokerReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.from_, this_._impl_.from_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.to_, this_._impl_.to_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenerateBrokerReportRequest::ByteSizeLong(const MessageLite& base) {
          const GenerateBrokerReportRequest& this_ = static_cast<const GenerateBrokerReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenerateBrokerReportRequest::ByteSizeLong() const {
          const GenerateBrokerReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_);
            }
            // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenerateBrokerReportRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenerateBrokerReportRequest*>(&to_msg);
  auto& from = static_cast<const GenerateBrokerReportRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.from_ != nullptr);
      if (_this->_impl_.from_ == nullptr) {
        _this->_impl_.from_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.from_);
      } else {
        _this->_impl_.from_->MergeFrom(*from._impl_.from_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.to_ != nullptr);
      if (_this->_impl_.to_ == nullptr) {
        _this->_impl_.to_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.to_);
      } else {
        _this->_impl_.to_->MergeFrom(*from._impl_.to_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateBrokerReportRequest::CopyFrom(const GenerateBrokerReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenerateBrokerReportRequest::InternalSwap(GenerateBrokerReportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.to_)
      + sizeof(GenerateBrokerReportRequest::_impl_.to_)
      - PROTOBUF_FIELD_OFFSET(GenerateBrokerReportRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata GenerateBrokerReportRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenerateBrokerReportResponse::_Internal {
 public:
};

GenerateBrokerReportResponse::GenerateBrokerReportResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenerateBrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportResponse& from_msg)
      : task_id_(arena, from.task_id_),
        _cached_size_{0} {}

GenerateBrokerReportResponse::GenerateBrokerReportResponse(
    ::google::protobuf::Arena* arena,
    const GenerateBrokerReportResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenerateBrokerReportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenerateBrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        _cached_size_{0} {}

inline void GenerateBrokerReportResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GenerateBrokerReportResponse::~GenerateBrokerReportResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse)
  SharedDtor(*this);
}
inline void GenerateBrokerReportResponse::SharedDtor(MessageLite& self) {
  GenerateBrokerReportResponse& this_ = static_cast<GenerateBrokerReportResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GenerateBrokerReportResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenerateBrokerReportResponse(arena);
}
constexpr auto GenerateBrokerReportResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GenerateBrokerReportResponse),
                                            alignof(GenerateBrokerReportResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenerateBrokerReportResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenerateBrokerReportResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenerateBrokerReportResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenerateBrokerReportResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenerateBrokerReportResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenerateBrokerReportResponse>(), &GenerateBrokerReportResponse::ByteSizeLong,
            &GenerateBrokerReportResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenerateBrokerReportResponse, _impl_._cached_size_),
        false,
    },
    &GenerateBrokerReportResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenerateBrokerReportResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 79, 2> GenerateBrokerReportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GenerateBrokerReportResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateBrokerReportResponse, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(GenerateBrokerReportResponse, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\77\7\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse"
    "task_id"
  }},
};

PROTOBUF_NOINLINE void GenerateBrokerReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenerateBrokerReportResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenerateBrokerReportResponse& this_ = static_cast<const GenerateBrokerReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenerateBrokerReportResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenerateBrokerReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1;
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenerateBrokerReportResponse::ByteSizeLong(const MessageLite& base) {
          const GenerateBrokerReportResponse& this_ = static_cast<const GenerateBrokerReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenerateBrokerReportResponse::ByteSizeLong() const {
          const GenerateBrokerReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string task_id = 1;
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenerateBrokerReportResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenerateBrokerReportResponse*>(&to_msg);
  auto& from = static_cast<const GenerateBrokerReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateBrokerReportResponse::CopyFrom(const GenerateBrokerReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GenerateBrokerReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenerateBrokerReportResponse::InternalSwap(GenerateBrokerReportResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
}

::google::protobuf::Metadata GenerateBrokerReportResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetBrokerReportRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetBrokerReportRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetBrokerReportRequest, _impl_._has_bits_);
};

GetBrokerReportRequest::GetBrokerReportRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetBrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetBrokerReportRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        task_id_(arena, from.task_id_) {}

GetBrokerReportRequest::GetBrokerReportRequest(
    ::google::protobuf::Arena* arena,
    const GetBrokerReportRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetBrokerReportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.page_ = from._impl_.page_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetBrokerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        task_id_(arena) {}

inline void GetBrokerReportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.page_ = {};
}
GetBrokerReportRequest::~GetBrokerReportRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest)
  SharedDtor(*this);
}
inline void GetBrokerReportRequest::SharedDtor(MessageLite& self) {
  GetBrokerReportRequest& this_ = static_cast<GetBrokerReportRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetBrokerReportRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetBrokerReportRequest(arena);
}
constexpr auto GetBrokerReportRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetBrokerReportRequest),
                                            alignof(GetBrokerReportRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetBrokerReportRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetBrokerReportRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetBrokerReportRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetBrokerReportRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetBrokerReportRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetBrokerReportRequest>(), &GetBrokerReportRequest::ByteSizeLong,
            &GetBrokerReportRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetBrokerReportRequest, _impl_._cached_size_),
        false,
    },
    &GetBrokerReportRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetBrokerReportRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 73, 2> GetBrokerReportRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetBrokerReportRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetBrokerReportRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 page = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetBrokerReportRequest, _impl_.page_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportRequest, _impl_.page_)}},
    // string task_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportRequest, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportRequest, _impl_.task_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 page = 2;
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportRequest, _impl_.page_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\71\7\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest"
    "task_id"
  }},
};

PROTOBUF_NOINLINE void GetBrokerReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _impl_.page_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetBrokerReportRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetBrokerReportRequest& this_ = static_cast<const GetBrokerReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetBrokerReportRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetBrokerReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 page = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_page(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetBrokerReportRequest::ByteSizeLong(const MessageLite& base) {
          const GetBrokerReportRequest& this_ = static_cast<const GetBrokerReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetBrokerReportRequest::ByteSizeLong() const {
          const GetBrokerReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string task_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
          }
           {
            // optional int32 page = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetBrokerReportRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetBrokerReportRequest*>(&to_msg);
  auto& from = static_cast<const GetBrokerReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.page_ = from._impl_.page_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBrokerReportRequest::CopyFrom(const GetBrokerReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetBrokerReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetBrokerReportRequest::InternalSwap(GetBrokerReportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
        swap(_impl_.page_, other->_impl_.page_);
}

::google::protobuf::Metadata GetBrokerReportRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetBrokerReportResponse::_Internal {
 public:
};

GetBrokerReportResponse::GetBrokerReportResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetBrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetBrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse& from_msg)
      : broker_report_{visibility, arena, from.broker_report_},
        _cached_size_{0} {}

GetBrokerReportResponse::GetBrokerReportResponse(
    ::google::protobuf::Arena* arena,
    const GetBrokerReportResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetBrokerReportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itemscount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, itemscount_),
           offsetof(Impl_, page_) -
               offsetof(Impl_, itemscount_) +
               sizeof(Impl_::page_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetBrokerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetBrokerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : broker_report_{visibility, arena},
        _cached_size_{0} {}

inline void GetBrokerReportResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itemscount_),
           0,
           offsetof(Impl_, page_) -
               offsetof(Impl_, itemscount_) +
               sizeof(Impl_::page_));
}
GetBrokerReportResponse::~GetBrokerReportResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetBrokerReportResponse)
  SharedDtor(*this);
}
inline void GetBrokerReportResponse::SharedDtor(MessageLite& self) {
  GetBrokerReportResponse& this_ = static_cast<GetBrokerReportResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetBrokerReportResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetBrokerReportResponse(arena);
}
constexpr auto GetBrokerReportResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.broker_report_) +
          decltype(GetBrokerReportResponse::_impl_.broker_report_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetBrokerReportResponse), alignof(GetBrokerReportResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetBrokerReportResponse::PlacementNew_,
                                 sizeof(GetBrokerReportResponse),
                                 alignof(GetBrokerReportResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetBrokerReportResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetBrokerReportResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetBrokerReportResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetBrokerReportResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetBrokerReportResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetBrokerReportResponse>(), &GetBrokerReportResponse::ByteSizeLong,
            &GetBrokerReportResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_._cached_size_),
        false,
    },
    &GetBrokerReportResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetBrokerReportResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> GetBrokerReportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetBrokerReportResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 page = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetBrokerReportResponse, _impl_.page_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.page_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.BrokerReport broker_report = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.broker_report_)}},
    // int32 itemsCount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetBrokerReportResponse, _impl_.itemscount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.itemscount_)}},
    // int32 pagesCount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetBrokerReportResponse, _impl_.pagescount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.pagescount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.BrokerReport broker_report = 1;
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.broker_report_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 itemsCount = 2;
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.itemscount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 pagesCount = 3;
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.pagescount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 page = 4;
    {PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.page_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::BrokerReport>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetBrokerReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetBrokerReportResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.broker_report_.Clear();
  ::memset(&_impl_.itemscount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.page_) -
      reinterpret_cast<char*>(&_impl_.itemscount_)) + sizeof(_impl_.page_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetBrokerReportResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetBrokerReportResponse& this_ = static_cast<const GetBrokerReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetBrokerReportResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetBrokerReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetBrokerReportResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.pub.invest.api.contract.v1.BrokerReport broker_report = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_broker_report_size());
               i < n; i++) {
            const auto& repfield = this_._internal_broker_report().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 itemsCount = 2;
          if (this_._internal_itemscount() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_itemscount(), target);
          }

          // int32 pagesCount = 3;
          if (this_._internal_pagescount() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_pagescount(), target);
          }

          // int32 page = 4;
          if (this_._internal_page() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_page(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetBrokerReportResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetBrokerReportResponse::ByteSizeLong(const MessageLite& base) {
          const GetBrokerReportResponse& this_ = static_cast<const GetBrokerReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetBrokerReportResponse::ByteSizeLong() const {
          const GetBrokerReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetBrokerReportResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.BrokerReport broker_report = 1;
            {
              total_size += 1UL * this_._internal_broker_report_size();
              for (const auto& msg : this_._internal_broker_report()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int32 itemsCount = 2;
            if (this_._internal_itemscount() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_itemscount());
            }
            // int32 pagesCount = 3;
            if (this_._internal_pagescount() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_pagescount());
            }
            // int32 page = 4;
            if (this_._internal_page() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetBrokerReportResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetBrokerReportResponse*>(&to_msg);
  auto& from = static_cast<const GetBrokerReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetBrokerReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_broker_report()->MergeFrom(
      from._internal_broker_report());
  if (from._internal_itemscount() != 0) {
    _this->_impl_.itemscount_ = from._impl_.itemscount_;
  }
  if (from._internal_pagescount() != 0) {
    _this->_impl_.pagescount_ = from._impl_.pagescount_;
  }
  if (from._internal_page() != 0) {
    _this->_impl_.page_ = from._impl_.page_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetBrokerReportResponse::CopyFrom(const GetBrokerReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetBrokerReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetBrokerReportResponse::InternalSwap(GetBrokerReportResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.broker_report_.InternalSwap(&other->_impl_.broker_report_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.page_)
      + sizeof(GetBrokerReportResponse::_impl_.page_)
      - PROTOBUF_FIELD_OFFSET(GetBrokerReportResponse, _impl_.itemscount_)>(
          reinterpret_cast<char*>(&_impl_.itemscount_),
          reinterpret_cast<char*>(&other->_impl_.itemscount_));
}

::google::protobuf::Metadata GetBrokerReportResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BrokerReport::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BrokerReport>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_._has_bits_);
};

void BrokerReport::clear_trade_datetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trade_datetime_ != nullptr) _impl_.trade_datetime_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void BrokerReport::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void BrokerReport::clear_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.order_amount_ != nullptr) _impl_.order_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void BrokerReport::clear_aci_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.aci_value_ != nullptr) _impl_.aci_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void BrokerReport::clear_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_order_amount_ != nullptr) _impl_.total_order_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void BrokerReport::clear_broker_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.broker_commission_ != nullptr) _impl_.broker_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void BrokerReport::clear_exchange_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exchange_commission_ != nullptr) _impl_.exchange_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void BrokerReport::clear_exchange_clearing_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exchange_clearing_commission_ != nullptr) _impl_.exchange_clearing_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void BrokerReport::clear_repo_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.repo_rate_ != nullptr) _impl_.repo_rate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void BrokerReport::clear_clear_value_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.clear_value_date_ != nullptr) _impl_.clear_value_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void BrokerReport::clear_sec_value_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sec_value_date_ != nullptr) _impl_.sec_value_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
BrokerReport::BrokerReport(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.BrokerReport)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::BrokerReport& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trade_id_(arena, from.trade_id_),
        order_id_(arena, from.order_id_),
        figi_(arena, from.figi_),
        execute_sign_(arena, from.execute_sign_),
        exchange_(arena, from.exchange_),
        class_code_(arena, from.class_code_),
        direction_(arena, from.direction_),
        name_(arena, from.name_),
        ticker_(arena, from.ticker_),
        party_(arena, from.party_),
        broker_status_(arena, from.broker_status_),
        separate_agreement_type_(arena, from.separate_agreement_type_),
        separate_agreement_number_(arena, from.separate_agreement_number_),
        separate_agreement_date_(arena, from.separate_agreement_date_),
        delivery_type_(arena, from.delivery_type_) {}

BrokerReport::BrokerReport(
    ::google::protobuf::Arena* arena,
    const BrokerReport& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BrokerReport* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.trade_datetime_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.trade_datetime_)
                        : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.price_)
                        : nullptr;
  _impl_.order_amount_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.order_amount_)
                        : nullptr;
  _impl_.aci_value_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.aci_value_)
                        : nullptr;
  _impl_.total_order_amount_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_order_amount_)
                        : nullptr;
  _impl_.broker_commission_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.broker_commission_)
                        : nullptr;
  _impl_.exchange_commission_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.exchange_commission_)
                        : nullptr;
  _impl_.exchange_clearing_commission_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.exchange_clearing_commission_)
                        : nullptr;
  _impl_.repo_rate_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.repo_rate_)
                        : nullptr;
  _impl_.clear_value_date_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.clear_value_date_)
                        : nullptr;
  _impl_.sec_value_date_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.sec_value_date_)
                        : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.BrokerReport)
}
inline PROTOBUF_NDEBUG_INLINE BrokerReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trade_id_(arena),
        order_id_(arena),
        figi_(arena),
        execute_sign_(arena),
        exchange_(arena),
        class_code_(arena),
        direction_(arena),
        name_(arena),
        ticker_(arena),
        party_(arena),
        broker_status_(arena),
        separate_agreement_type_(arena),
        separate_agreement_number_(arena),
        separate_agreement_date_(arena),
        delivery_type_(arena) {}

inline void BrokerReport::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trade_datetime_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, trade_datetime_) +
               sizeof(Impl_::quantity_));
}
BrokerReport::~BrokerReport() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.BrokerReport)
  SharedDtor(*this);
}
inline void BrokerReport::SharedDtor(MessageLite& self) {
  BrokerReport& this_ = static_cast<BrokerReport&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.trade_id_.Destroy();
  this_._impl_.order_id_.Destroy();
  this_._impl_.figi_.Destroy();
  this_._impl_.execute_sign_.Destroy();
  this_._impl_.exchange_.Destroy();
  this_._impl_.class_code_.Destroy();
  this_._impl_.direction_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.ticker_.Destroy();
  this_._impl_.party_.Destroy();
  this_._impl_.broker_status_.Destroy();
  this_._impl_.separate_agreement_type_.Destroy();
  this_._impl_.separate_agreement_number_.Destroy();
  this_._impl_.separate_agreement_date_.Destroy();
  this_._impl_.delivery_type_.Destroy();
  delete this_._impl_.trade_datetime_;
  delete this_._impl_.price_;
  delete this_._impl_.order_amount_;
  delete this_._impl_.aci_value_;
  delete this_._impl_.total_order_amount_;
  delete this_._impl_.broker_commission_;
  delete this_._impl_.exchange_commission_;
  delete this_._impl_.exchange_clearing_commission_;
  delete this_._impl_.repo_rate_;
  delete this_._impl_.clear_value_date_;
  delete this_._impl_.sec_value_date_;
  this_._impl_.~Impl_();
}

inline void* BrokerReport::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BrokerReport(arena);
}
constexpr auto BrokerReport::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BrokerReport),
                                            alignof(BrokerReport));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BrokerReport::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BrokerReport_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BrokerReport::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BrokerReport>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BrokerReport::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BrokerReport>(), &BrokerReport::ByteSizeLong,
            &BrokerReport::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_._cached_size_),
        false,
    },
    &BrokerReport::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BrokerReport::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 27, 11, 251, 2> BrokerReport::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_._has_bits_),
    0, // no _extensions_
    27, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4160749568,  // skipmap
    offsetof(decltype(_table_), field_entries),
    27,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::BrokerReport>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string trade_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.trade_id_)}},
    // string order_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.order_id_)}},
    // string figi = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.figi_)}},
    // string execute_sign = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.execute_sign_)}},
    // .google.protobuf.Timestamp trade_datetime = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.trade_datetime_)}},
    // string exchange = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_)}},
    // string class_code = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.class_code_)}},
    // string direction = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.direction_)}},
    // string name = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.name_)}},
    // string ticker = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.ticker_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 1, 1, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.price_)}},
    // int64 quantity = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BrokerReport, _impl_.quantity_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.quantity_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue order_amount = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 2, 2, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.order_amount_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation aci_value = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 3, 3, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.aci_value_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_order_amount = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 4, 4, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.total_order_amount_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue broker_commission = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 5, 5, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.broker_commission_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue exchange_commission = 17;
    {::_pbi::TcParser::FastMtS2,
     {394, 6, 6, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_commission_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue exchange_clearing_commission = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 7, 7, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_clearing_commission_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation repo_rate = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 8, 8, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.repo_rate_)}},
    // string party = 20;
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.party_)}},
    // .google.protobuf.Timestamp clear_value_date = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 9, 9, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.clear_value_date_)}},
    // .google.protobuf.Timestamp sec_value_date = 22;
    {::_pbi::TcParser::FastMtS2,
     {434, 10, 10, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.sec_value_date_)}},
    // string broker_status = 23;
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.broker_status_)}},
    // string separate_agreement_type = 24;
    {::_pbi::TcParser::FastUS2,
     {450, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_type_)}},
    // string separate_agreement_number = 25;
    {::_pbi::TcParser::FastUS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_number_)}},
    // string separate_agreement_date = 26;
    {::_pbi::TcParser::FastUS2,
     {466, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_date_)}},
    // string delivery_type = 27;
    {::_pbi::TcParser::FastUS2,
     {474, 63, 0, PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.delivery_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string trade_id = 1;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.trade_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_id = 2;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string figi = 3;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string execute_sign = 4;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.execute_sign_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp trade_datetime = 5;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.trade_datetime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string exchange = 6;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string class_code = 7;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.class_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string direction = 8;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 9;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ticker = 10;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.ticker_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 11;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 12;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue order_amount = 13;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.order_amount_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation aci_value = 14;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.aci_value_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_order_amount = 15;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.total_order_amount_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue broker_commission = 16;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.broker_commission_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue exchange_commission = 17;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_commission_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue exchange_clearing_commission = 18;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.exchange_clearing_commission_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation repo_rate = 19;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.repo_rate_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string party = 20;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.party_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp clear_value_date = 21;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.clear_value_date_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp sec_value_date = 22;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.sec_value_date_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string broker_status = 23;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.broker_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string separate_agreement_type = 24;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string separate_agreement_number = 25;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_number_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string separate_agreement_date = 26;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.separate_agreement_date_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string delivery_type = 27;
    {PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.delivery_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\57\10\10\4\14\0\10\12\11\4\6\0\0\0\0\0\0\0\0\0\5\0\0\15\27\31\27\15\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.BrokerReport"
    "trade_id"
    "order_id"
    "figi"
    "execute_sign"
    "exchange"
    "class_code"
    "direction"
    "name"
    "ticker"
    "party"
    "broker_status"
    "separate_agreement_type"
    "separate_agreement_number"
    "separate_agreement_date"
    "delivery_type"
  }},
};

PROTOBUF_NOINLINE void BrokerReport::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.BrokerReport)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trade_id_.ClearToEmpty();
  _impl_.order_id_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.execute_sign_.ClearToEmpty();
  _impl_.exchange_.ClearToEmpty();
  _impl_.class_code_.ClearToEmpty();
  _impl_.direction_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.ticker_.ClearToEmpty();
  _impl_.party_.ClearToEmpty();
  _impl_.broker_status_.ClearToEmpty();
  _impl_.separate_agreement_type_.ClearToEmpty();
  _impl_.separate_agreement_number_.ClearToEmpty();
  _impl_.separate_agreement_date_.ClearToEmpty();
  _impl_.delivery_type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.trade_datetime_ != nullptr);
      _impl_.trade_datetime_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.order_amount_ != nullptr);
      _impl_.order_amount_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.aci_value_ != nullptr);
      _impl_.aci_value_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.total_order_amount_ != nullptr);
      _impl_.total_order_amount_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.broker_commission_ != nullptr);
      _impl_.broker_commission_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.exchange_commission_ != nullptr);
      _impl_.exchange_commission_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.exchange_clearing_commission_ != nullptr);
      _impl_.exchange_clearing_commission_->Clear();
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.repo_rate_ != nullptr);
      _impl_.repo_rate_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.clear_value_date_ != nullptr);
      _impl_.clear_value_date_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.sec_value_date_ != nullptr);
      _impl_.sec_value_date_->Clear();
    }
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BrokerReport::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BrokerReport& this_ = static_cast<const BrokerReport&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BrokerReport::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BrokerReport& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.BrokerReport)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string trade_id = 1;
          if (!this_._internal_trade_id().empty()) {
            const std::string& _s = this_._internal_trade_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.trade_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string order_id = 2;
          if (!this_._internal_order_id().empty()) {
            const std::string& _s = this_._internal_order_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.order_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string figi = 3;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.figi");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string execute_sign = 4;
          if (!this_._internal_execute_sign().empty()) {
            const std::string& _s = this_._internal_execute_sign();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.execute_sign");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp trade_datetime = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.trade_datetime_, this_._impl_.trade_datetime_->GetCachedSize(), target,
                stream);
          }

          // string exchange = 6;
          if (!this_._internal_exchange().empty()) {
            const std::string& _s = this_._internal_exchange();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.exchange");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string class_code = 7;
          if (!this_._internal_class_code().empty()) {
            const std::string& _s = this_._internal_class_code();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.class_code");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string direction = 8;
          if (!this_._internal_direction().empty()) {
            const std::string& _s = this_._internal_direction();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.direction");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string name = 9;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.name");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string ticker = 10;
          if (!this_._internal_ticker().empty()) {
            const std::string& _s = this_._internal_ticker();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.ticker");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 11;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // int64 quantity = 12;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<12>(
                    stream, this_._internal_quantity(), target);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue order_amount = 13;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.order_amount_, this_._impl_.order_amount_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation aci_value = 14;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                14, *this_._impl_.aci_value_, this_._impl_.aci_value_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_order_amount = 15;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.total_order_amount_, this_._impl_.total_order_amount_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue broker_commission = 16;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                16, *this_._impl_.broker_commission_, this_._impl_.broker_commission_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue exchange_commission = 17;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                17, *this_._impl_.exchange_commission_, this_._impl_.exchange_commission_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue exchange_clearing_commission = 18;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                18, *this_._impl_.exchange_clearing_commission_, this_._impl_.exchange_clearing_commission_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation repo_rate = 19;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                19, *this_._impl_.repo_rate_, this_._impl_.repo_rate_->GetCachedSize(), target,
                stream);
          }

          // string party = 20;
          if (!this_._internal_party().empty()) {
            const std::string& _s = this_._internal_party();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.party");
            target = stream->WriteStringMaybeAliased(20, _s, target);
          }

          // .google.protobuf.Timestamp clear_value_date = 21;
          if (cached_has_bits & 0x00000200u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                21, *this_._impl_.clear_value_date_, this_._impl_.clear_value_date_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp sec_value_date = 22;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                22, *this_._impl_.sec_value_date_, this_._impl_.sec_value_date_->GetCachedSize(), target,
                stream);
          }

          // string broker_status = 23;
          if (!this_._internal_broker_status().empty()) {
            const std::string& _s = this_._internal_broker_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.broker_status");
            target = stream->WriteStringMaybeAliased(23, _s, target);
          }

          // string separate_agreement_type = 24;
          if (!this_._internal_separate_agreement_type().empty()) {
            const std::string& _s = this_._internal_separate_agreement_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.separate_agreement_type");
            target = stream->WriteStringMaybeAliased(24, _s, target);
          }

          // string separate_agreement_number = 25;
          if (!this_._internal_separate_agreement_number().empty()) {
            const std::string& _s = this_._internal_separate_agreement_number();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.separate_agreement_number");
            target = stream->WriteStringMaybeAliased(25, _s, target);
          }

          // string separate_agreement_date = 26;
          if (!this_._internal_separate_agreement_date().empty()) {
            const std::string& _s = this_._internal_separate_agreement_date();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.separate_agreement_date");
            target = stream->WriteStringMaybeAliased(26, _s, target);
          }

          // string delivery_type = 27;
          if (!this_._internal_delivery_type().empty()) {
            const std::string& _s = this_._internal_delivery_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.BrokerReport.delivery_type");
            target = stream->WriteStringMaybeAliased(27, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.BrokerReport)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BrokerReport::ByteSizeLong(const MessageLite& base) {
          const BrokerReport& this_ = static_cast<const BrokerReport&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BrokerReport::ByteSizeLong() const {
          const BrokerReport& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.BrokerReport)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string trade_id = 1;
            if (!this_._internal_trade_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_trade_id());
            }
            // string order_id = 2;
            if (!this_._internal_order_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_id());
            }
            // string figi = 3;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string execute_sign = 4;
            if (!this_._internal_execute_sign().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_execute_sign());
            }
            // string exchange = 6;
            if (!this_._internal_exchange().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_exchange());
            }
            // string class_code = 7;
            if (!this_._internal_class_code().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_class_code());
            }
            // string direction = 8;
            if (!this_._internal_direction().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_direction());
            }
            // string name = 9;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string ticker = 10;
            if (!this_._internal_ticker().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ticker());
            }
            // string party = 20;
            if (!this_._internal_party().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_party());
            }
            // string broker_status = 23;
            if (!this_._internal_broker_status().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_broker_status());
            }
            // string separate_agreement_type = 24;
            if (!this_._internal_separate_agreement_type().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_separate_agreement_type());
            }
            // string separate_agreement_number = 25;
            if (!this_._internal_separate_agreement_number().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_separate_agreement_number());
            }
            // string separate_agreement_date = 26;
            if (!this_._internal_separate_agreement_date().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_separate_agreement_date());
            }
            // string delivery_type = 27;
            if (!this_._internal_delivery_type().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_delivery_type());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .google.protobuf.Timestamp trade_datetime = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.trade_datetime_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 11;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue order_amount = 13;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.order_amount_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation aci_value = 14;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.aci_value_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue total_order_amount = 15;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_order_amount_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue broker_commission = 16;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.broker_commission_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue exchange_commission = 17;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exchange_commission_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue exchange_clearing_commission = 18;
            if (cached_has_bits & 0x00000080u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exchange_clearing_commission_);
            }
          }
          if (cached_has_bits & 0x00000700u) {
            // .tinkoff.pub.invest.api.contract.v1.Quotation repo_rate = 19;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.repo_rate_);
            }
            // .google.protobuf.Timestamp clear_value_date = 21;
            if (cached_has_bits & 0x00000200u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.clear_value_date_);
            }
            // .google.protobuf.Timestamp sec_value_date = 22;
            if (cached_has_bits & 0x00000400u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sec_value_date_);
            }
          }
           {
            // int64 quantity = 12;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BrokerReport::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BrokerReport*>(&to_msg);
  auto& from = static_cast<const BrokerReport&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.BrokerReport)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trade_id().empty()) {
    _this->_internal_set_trade_id(from._internal_trade_id());
  }
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_execute_sign().empty()) {
    _this->_internal_set_execute_sign(from._internal_execute_sign());
  }
  if (!from._internal_exchange().empty()) {
    _this->_internal_set_exchange(from._internal_exchange());
  }
  if (!from._internal_class_code().empty()) {
    _this->_internal_set_class_code(from._internal_class_code());
  }
  if (!from._internal_direction().empty()) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_ticker().empty()) {
    _this->_internal_set_ticker(from._internal_ticker());
  }
  if (!from._internal_party().empty()) {
    _this->_internal_set_party(from._internal_party());
  }
  if (!from._internal_broker_status().empty()) {
    _this->_internal_set_broker_status(from._internal_broker_status());
  }
  if (!from._internal_separate_agreement_type().empty()) {
    _this->_internal_set_separate_agreement_type(from._internal_separate_agreement_type());
  }
  if (!from._internal_separate_agreement_number().empty()) {
    _this->_internal_set_separate_agreement_number(from._internal_separate_agreement_number());
  }
  if (!from._internal_separate_agreement_date().empty()) {
    _this->_internal_set_separate_agreement_date(from._internal_separate_agreement_date());
  }
  if (!from._internal_delivery_type().empty()) {
    _this->_internal_set_delivery_type(from._internal_delivery_type());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.trade_datetime_ != nullptr);
      if (_this->_impl_.trade_datetime_ == nullptr) {
        _this->_impl_.trade_datetime_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.trade_datetime_);
      } else {
        _this->_impl_.trade_datetime_->MergeFrom(*from._impl_.trade_datetime_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.order_amount_ != nullptr);
      if (_this->_impl_.order_amount_ == nullptr) {
        _this->_impl_.order_amount_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.order_amount_);
      } else {
        _this->_impl_.order_amount_->MergeFrom(*from._impl_.order_amount_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.aci_value_ != nullptr);
      if (_this->_impl_.aci_value_ == nullptr) {
        _this->_impl_.aci_value_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.aci_value_);
      } else {
        _this->_impl_.aci_value_->MergeFrom(*from._impl_.aci_value_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.total_order_amount_ != nullptr);
      if (_this->_impl_.total_order_amount_ == nullptr) {
        _this->_impl_.total_order_amount_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_order_amount_);
      } else {
        _this->_impl_.total_order_amount_->MergeFrom(*from._impl_.total_order_amount_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.broker_commission_ != nullptr);
      if (_this->_impl_.broker_commission_ == nullptr) {
        _this->_impl_.broker_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.broker_commission_);
      } else {
        _this->_impl_.broker_commission_->MergeFrom(*from._impl_.broker_commission_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.exchange_commission_ != nullptr);
      if (_this->_impl_.exchange_commission_ == nullptr) {
        _this->_impl_.exchange_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.exchange_commission_);
      } else {
        _this->_impl_.exchange_commission_->MergeFrom(*from._impl_.exchange_commission_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.exchange_clearing_commission_ != nullptr);
      if (_this->_impl_.exchange_clearing_commission_ == nullptr) {
        _this->_impl_.exchange_clearing_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.exchange_clearing_commission_);
      } else {
        _this->_impl_.exchange_clearing_commission_->MergeFrom(*from._impl_.exchange_clearing_commission_);
      }
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.repo_rate_ != nullptr);
      if (_this->_impl_.repo_rate_ == nullptr) {
        _this->_impl_.repo_rate_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.repo_rate_);
      } else {
        _this->_impl_.repo_rate_->MergeFrom(*from._impl_.repo_rate_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.clear_value_date_ != nullptr);
      if (_this->_impl_.clear_value_date_ == nullptr) {
        _this->_impl_.clear_value_date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.clear_value_date_);
      } else {
        _this->_impl_.clear_value_date_->MergeFrom(*from._impl_.clear_value_date_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.sec_value_date_ != nullptr);
      if (_this->_impl_.sec_value_date_ == nullptr) {
        _this->_impl_.sec_value_date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.sec_value_date_);
      } else {
        _this->_impl_.sec_value_date_->MergeFrom(*from._impl_.sec_value_date_);
      }
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BrokerReport::CopyFrom(const BrokerReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.BrokerReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BrokerReport::InternalSwap(BrokerReport* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_id_, &other->_impl_.trade_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.execute_sign_, &other->_impl_.execute_sign_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_, &other->_impl_.exchange_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.class_code_, &other->_impl_.class_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.direction_, &other->_impl_.direction_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ticker_, &other->_impl_.ticker_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.party_, &other->_impl_.party_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.broker_status_, &other->_impl_.broker_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.separate_agreement_type_, &other->_impl_.separate_agreement_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.separate_agreement_number_, &other->_impl_.separate_agreement_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.separate_agreement_date_, &other->_impl_.separate_agreement_date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delivery_type_, &other->_impl_.delivery_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.quantity_)
      + sizeof(BrokerReport::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(BrokerReport, _impl_.trade_datetime_)>(
          reinterpret_cast<char*>(&_impl_.trade_datetime_),
          reinterpret_cast<char*>(&other->_impl_.trade_datetime_));
}

::google::protobuf::Metadata BrokerReport::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetDividendsForeignIssuerRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerRequest, _impl_._oneof_case_);
};

void GetDividendsForeignIssuerRequest::set_allocated_generate_div_foreign_issuer_report(::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest* generate_div_foreign_issuer_report) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (generate_div_foreign_issuer_report) {
    ::google::protobuf::Arena* submessage_arena = generate_div_foreign_issuer_report->GetArena();
    if (message_arena != submessage_arena) {
      generate_div_foreign_issuer_report = ::google::protobuf::internal::GetOwnedMessage(message_arena, generate_div_foreign_issuer_report, submessage_arena);
    }
    set_has_generate_div_foreign_issuer_report();
    _impl_.payload_.generate_div_foreign_issuer_report_ = generate_div_foreign_issuer_report;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest.generate_div_foreign_issuer_report)
}
void GetDividendsForeignIssuerRequest::set_allocated_get_div_foreign_issuer_report(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest* get_div_foreign_issuer_report) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (get_div_foreign_issuer_report) {
    ::google::protobuf::Arena* submessage_arena = get_div_foreign_issuer_report->GetArena();
    if (message_arena != submessage_arena) {
      get_div_foreign_issuer_report = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_div_foreign_issuer_report, submessage_arena);
    }
    set_has_get_div_foreign_issuer_report();
    _impl_.payload_.get_div_foreign_issuer_report_ = get_div_foreign_issuer_report;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest.get_div_foreign_issuer_report)
}
GetDividendsForeignIssuerRequest::GetDividendsForeignIssuerRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerRequest& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GetDividendsForeignIssuerRequest::GetDividendsForeignIssuerRequest(
    ::google::protobuf::Arena* arena,
    const GetDividendsForeignIssuerRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetDividendsForeignIssuerRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kGenerateDivForeignIssuerReport:
        _impl_.payload_.generate_div_foreign_issuer_report_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest>(arena, *from._impl_.payload_.generate_div_foreign_issuer_report_);
        break;
      case kGetDivForeignIssuerReport:
        _impl_.payload_.get_div_foreign_issuer_report_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest>(arena, *from._impl_.payload_.get_div_foreign_issuer_report_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GetDividendsForeignIssuerRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetDividendsForeignIssuerRequest::~GetDividendsForeignIssuerRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  SharedDtor(*this);
}
inline void GetDividendsForeignIssuerRequest::SharedDtor(MessageLite& self) {
  GetDividendsForeignIssuerRequest& this_ = static_cast<GetDividendsForeignIssuerRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void GetDividendsForeignIssuerRequest::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kGenerateDivForeignIssuerReport: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.generate_div_foreign_issuer_report_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.generate_div_foreign_issuer_report_);
      }
      break;
    }
    case kGetDivForeignIssuerReport: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.get_div_foreign_issuer_report_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.get_div_foreign_issuer_report_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* GetDividendsForeignIssuerRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetDividendsForeignIssuerRequest(arena);
}
constexpr auto GetDividendsForeignIssuerRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetDividendsForeignIssuerRequest),
                                            alignof(GetDividendsForeignIssuerRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetDividendsForeignIssuerRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetDividendsForeignIssuerRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetDividendsForeignIssuerRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetDividendsForeignIssuerRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetDividendsForeignIssuerRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetDividendsForeignIssuerRequest>(), &GetDividendsForeignIssuerRequest::ByteSizeLong,
            &GetDividendsForeignIssuerRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerRequest, _impl_._cached_size_),
        false,
    },
    &GetDividendsForeignIssuerRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetDividendsForeignIssuerRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> GetDividendsForeignIssuerRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest generate_div_foreign_issuer_report = 1;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerRequest, _impl_.payload_.generate_div_foreign_issuer_report_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest get_div_foreign_issuer_report = 2;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerRequest, _impl_.payload_.get_div_foreign_issuer_report_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetDividendsForeignIssuerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetDividendsForeignIssuerRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetDividendsForeignIssuerRequest& this_ = static_cast<const GetDividendsForeignIssuerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetDividendsForeignIssuerRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetDividendsForeignIssuerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            case kGenerateDivForeignIssuerReport: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.payload_.generate_div_foreign_issuer_report_, this_._impl_.payload_.generate_div_foreign_issuer_report_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kGetDivForeignIssuerReport: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.payload_.get_div_foreign_issuer_report_, this_._impl_.payload_.get_div_foreign_issuer_report_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetDividendsForeignIssuerRequest::ByteSizeLong(const MessageLite& base) {
          const GetDividendsForeignIssuerRequest& this_ = static_cast<const GetDividendsForeignIssuerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetDividendsForeignIssuerRequest::ByteSizeLong() const {
          const GetDividendsForeignIssuerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            // .tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest generate_div_foreign_issuer_report = 1;
            case kGenerateDivForeignIssuerReport: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.generate_div_foreign_issuer_report_);
              break;
            }
            // .tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest get_div_foreign_issuer_report = 2;
            case kGetDivForeignIssuerReport: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.get_div_foreign_issuer_report_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetDividendsForeignIssuerRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetDividendsForeignIssuerRequest*>(&to_msg);
  auto& from = static_cast<const GetDividendsForeignIssuerRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kGenerateDivForeignIssuerReport: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.generate_div_foreign_issuer_report_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest>(arena, *from._impl_.payload_.generate_div_foreign_issuer_report_);
        } else {
          _this->_impl_.payload_.generate_div_foreign_issuer_report_->MergeFrom(from._internal_generate_div_foreign_issuer_report());
        }
        break;
      }
      case kGetDivForeignIssuerReport: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.get_div_foreign_issuer_report_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest>(arena, *from._impl_.payload_.get_div_foreign_issuer_report_);
        } else {
          _this->_impl_.payload_.get_div_foreign_issuer_report_->MergeFrom(from._internal_get_div_foreign_issuer_report());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDividendsForeignIssuerRequest::CopyFrom(const GetDividendsForeignIssuerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetDividendsForeignIssuerRequest::InternalSwap(GetDividendsForeignIssuerRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GetDividendsForeignIssuerRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetDividendsForeignIssuerResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerResponse, _impl_._oneof_case_);
};

void GetDividendsForeignIssuerResponse::set_allocated_generate_div_foreign_issuer_report_response(::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse* generate_div_foreign_issuer_report_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (generate_div_foreign_issuer_report_response) {
    ::google::protobuf::Arena* submessage_arena = generate_div_foreign_issuer_report_response->GetArena();
    if (message_arena != submessage_arena) {
      generate_div_foreign_issuer_report_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, generate_div_foreign_issuer_report_response, submessage_arena);
    }
    set_has_generate_div_foreign_issuer_report_response();
    _impl_.payload_.generate_div_foreign_issuer_report_response_ = generate_div_foreign_issuer_report_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse.generate_div_foreign_issuer_report_response)
}
void GetDividendsForeignIssuerResponse::set_allocated_div_foreign_issuer_report(::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse* div_foreign_issuer_report) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (div_foreign_issuer_report) {
    ::google::protobuf::Arena* submessage_arena = div_foreign_issuer_report->GetArena();
    if (message_arena != submessage_arena) {
      div_foreign_issuer_report = ::google::protobuf::internal::GetOwnedMessage(message_arena, div_foreign_issuer_report, submessage_arena);
    }
    set_has_div_foreign_issuer_report();
    _impl_.payload_.div_foreign_issuer_report_ = div_foreign_issuer_report;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse.div_foreign_issuer_report)
}
GetDividendsForeignIssuerResponse::GetDividendsForeignIssuerResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerResponse& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GetDividendsForeignIssuerResponse::GetDividendsForeignIssuerResponse(
    ::google::protobuf::Arena* arena,
    const GetDividendsForeignIssuerResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetDividendsForeignIssuerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kGenerateDivForeignIssuerReportResponse:
        _impl_.payload_.generate_div_foreign_issuer_report_response_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse>(arena, *from._impl_.payload_.generate_div_foreign_issuer_report_response_);
        break;
      case kDivForeignIssuerReport:
        _impl_.payload_.div_foreign_issuer_report_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse>(arena, *from._impl_.payload_.div_foreign_issuer_report_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GetDividendsForeignIssuerResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetDividendsForeignIssuerResponse::~GetDividendsForeignIssuerResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  SharedDtor(*this);
}
inline void GetDividendsForeignIssuerResponse::SharedDtor(MessageLite& self) {
  GetDividendsForeignIssuerResponse& this_ = static_cast<GetDividendsForeignIssuerResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void GetDividendsForeignIssuerResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kGenerateDivForeignIssuerReportResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.generate_div_foreign_issuer_report_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.generate_div_foreign_issuer_report_response_);
      }
      break;
    }
    case kDivForeignIssuerReport: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.div_foreign_issuer_report_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.div_foreign_issuer_report_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* GetDividendsForeignIssuerResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetDividendsForeignIssuerResponse(arena);
}
constexpr auto GetDividendsForeignIssuerResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetDividendsForeignIssuerResponse),
                                            alignof(GetDividendsForeignIssuerResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetDividendsForeignIssuerResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetDividendsForeignIssuerResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetDividendsForeignIssuerResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetDividendsForeignIssuerResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetDividendsForeignIssuerResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetDividendsForeignIssuerResponse>(), &GetDividendsForeignIssuerResponse::ByteSizeLong,
            &GetDividendsForeignIssuerResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerResponse, _impl_._cached_size_),
        false,
    },
    &GetDividendsForeignIssuerResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetDividendsForeignIssuerResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> GetDividendsForeignIssuerResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse generate_div_foreign_issuer_report_response = 1;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerResponse, _impl_.payload_.generate_div_foreign_issuer_report_response_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse div_foreign_issuer_report = 2;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerResponse, _impl_.payload_.div_foreign_issuer_report_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetDividendsForeignIssuerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetDividendsForeignIssuerResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetDividendsForeignIssuerResponse& this_ = static_cast<const GetDividendsForeignIssuerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetDividendsForeignIssuerResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetDividendsForeignIssuerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            case kGenerateDivForeignIssuerReportResponse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.payload_.generate_div_foreign_issuer_report_response_, this_._impl_.payload_.generate_div_foreign_issuer_report_response_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kDivForeignIssuerReport: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.payload_.div_foreign_issuer_report_, this_._impl_.payload_.div_foreign_issuer_report_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetDividendsForeignIssuerResponse::ByteSizeLong(const MessageLite& base) {
          const GetDividendsForeignIssuerResponse& this_ = static_cast<const GetDividendsForeignIssuerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetDividendsForeignIssuerResponse::ByteSizeLong() const {
          const GetDividendsForeignIssuerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            // .tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse generate_div_foreign_issuer_report_response = 1;
            case kGenerateDivForeignIssuerReportResponse: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.generate_div_foreign_issuer_report_response_);
              break;
            }
            // .tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse div_foreign_issuer_report = 2;
            case kDivForeignIssuerReport: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.div_foreign_issuer_report_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetDividendsForeignIssuerResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetDividendsForeignIssuerResponse*>(&to_msg);
  auto& from = static_cast<const GetDividendsForeignIssuerResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kGenerateDivForeignIssuerReportResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.generate_div_foreign_issuer_report_response_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse>(arena, *from._impl_.payload_.generate_div_foreign_issuer_report_response_);
        } else {
          _this->_impl_.payload_.generate_div_foreign_issuer_report_response_->MergeFrom(from._internal_generate_div_foreign_issuer_report_response());
        }
        break;
      }
      case kDivForeignIssuerReport: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.div_foreign_issuer_report_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse>(arena, *from._impl_.payload_.div_foreign_issuer_report_);
        } else {
          _this->_impl_.payload_.div_foreign_issuer_report_->MergeFrom(from._internal_div_foreign_issuer_report());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDividendsForeignIssuerResponse::CopyFrom(const GetDividendsForeignIssuerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetDividendsForeignIssuerResponse::InternalSwap(GetDividendsForeignIssuerResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GetDividendsForeignIssuerResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenerateDividendsForeignIssuerReportRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GenerateDividendsForeignIssuerReportRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_._has_bits_);
};

void GenerateDividendsForeignIssuerReportRequest::clear_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GenerateDividendsForeignIssuerReportRequest::clear_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GenerateDividendsForeignIssuerReportRequest::GenerateDividendsForeignIssuerReportRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_) {}

GenerateDividendsForeignIssuerReportRequest::GenerateDividendsForeignIssuerReportRequest(
    ::google::protobuf::Arena* arena,
    const GenerateDividendsForeignIssuerReportRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenerateDividendsForeignIssuerReportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.from_)
                        : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.to_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena) {}

inline void GenerateDividendsForeignIssuerReportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, to_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::to_));
}
GenerateDividendsForeignIssuerReportRequest::~GenerateDividendsForeignIssuerReportRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
  SharedDtor(*this);
}
inline void GenerateDividendsForeignIssuerReportRequest::SharedDtor(MessageLite& self) {
  GenerateDividendsForeignIssuerReportRequest& this_ = static_cast<GenerateDividendsForeignIssuerReportRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  delete this_._impl_.from_;
  delete this_._impl_.to_;
  this_._impl_.~Impl_();
}

inline void* GenerateDividendsForeignIssuerReportRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenerateDividendsForeignIssuerReportRequest(arena);
}
constexpr auto GenerateDividendsForeignIssuerReportRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GenerateDividendsForeignIssuerReportRequest),
                                            alignof(GenerateDividendsForeignIssuerReportRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenerateDividendsForeignIssuerReportRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenerateDividendsForeignIssuerReportRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenerateDividendsForeignIssuerReportRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenerateDividendsForeignIssuerReportRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenerateDividendsForeignIssuerReportRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenerateDividendsForeignIssuerReportRequest>(), &GenerateDividendsForeignIssuerReportRequest::ByteSizeLong,
            &GenerateDividendsForeignIssuerReportRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_._cached_size_),
        false,
    },
    &GenerateDividendsForeignIssuerReportRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenerateDividendsForeignIssuerReportRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 97, 2> GenerateDividendsForeignIssuerReportRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.account_id_)}},
    // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.from_)}},
    // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.to_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.from_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.to_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\116\12\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void GenerateDividendsForeignIssuerReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenerateDividendsForeignIssuerReportRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenerateDividendsForeignIssuerReportRequest& this_ = static_cast<const GenerateDividendsForeignIssuerReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenerateDividendsForeignIssuerReportRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenerateDividendsForeignIssuerReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.from_, this_._impl_.from_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.to_, this_._impl_.to_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenerateDividendsForeignIssuerReportRequest::ByteSizeLong(const MessageLite& base) {
          const GenerateDividendsForeignIssuerReportRequest& this_ = static_cast<const GenerateDividendsForeignIssuerReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenerateDividendsForeignIssuerReportRequest::ByteSizeLong() const {
          const GenerateDividendsForeignIssuerReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_);
            }
            // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenerateDividendsForeignIssuerReportRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenerateDividendsForeignIssuerReportRequest*>(&to_msg);
  auto& from = static_cast<const GenerateDividendsForeignIssuerReportRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.from_ != nullptr);
      if (_this->_impl_.from_ == nullptr) {
        _this->_impl_.from_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.from_);
      } else {
        _this->_impl_.from_->MergeFrom(*from._impl_.from_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.to_ != nullptr);
      if (_this->_impl_.to_ == nullptr) {
        _this->_impl_.to_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.to_);
      } else {
        _this->_impl_.to_->MergeFrom(*from._impl_.to_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateDividendsForeignIssuerReportRequest::CopyFrom(const GenerateDividendsForeignIssuerReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenerateDividendsForeignIssuerReportRequest::InternalSwap(GenerateDividendsForeignIssuerReportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.to_)
      + sizeof(GenerateDividendsForeignIssuerReportRequest::_impl_.to_)
      - PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata GenerateDividendsForeignIssuerReportRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetDividendsForeignIssuerReportRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetDividendsForeignIssuerReportRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportRequest, _impl_._has_bits_);
};

GetDividendsForeignIssuerReportRequest::GetDividendsForeignIssuerReportRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        task_id_(arena, from.task_id_) {}

GetDividendsForeignIssuerReportRequest::GetDividendsForeignIssuerReportRequest(
    ::google::protobuf::Arena* arena,
    const GetDividendsForeignIssuerReportRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetDividendsForeignIssuerReportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.page_ = from._impl_.page_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerReportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        task_id_(arena) {}

inline void GetDividendsForeignIssuerReportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.page_ = {};
}
GetDividendsForeignIssuerReportRequest::~GetDividendsForeignIssuerReportRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
  SharedDtor(*this);
}
inline void GetDividendsForeignIssuerReportRequest::SharedDtor(MessageLite& self) {
  GetDividendsForeignIssuerReportRequest& this_ = static_cast<GetDividendsForeignIssuerReportRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetDividendsForeignIssuerReportRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetDividendsForeignIssuerReportRequest(arena);
}
constexpr auto GetDividendsForeignIssuerReportRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetDividendsForeignIssuerReportRequest),
                                            alignof(GetDividendsForeignIssuerReportRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetDividendsForeignIssuerReportRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetDividendsForeignIssuerReportRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetDividendsForeignIssuerReportRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetDividendsForeignIssuerReportRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetDividendsForeignIssuerReportRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetDividendsForeignIssuerReportRequest>(), &GetDividendsForeignIssuerReportRequest::ByteSizeLong,
            &GetDividendsForeignIssuerReportRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportRequest, _impl_._cached_size_),
        false,
    },
    &GetDividendsForeignIssuerReportRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetDividendsForeignIssuerReportRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 89, 2> GetDividendsForeignIssuerReportRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 page = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetDividendsForeignIssuerReportRequest, _impl_.page_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportRequest, _impl_.page_)}},
    // string task_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportRequest, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportRequest, _impl_.task_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 page = 2;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportRequest, _impl_.page_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\111\7\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest"
    "task_id"
  }},
};

PROTOBUF_NOINLINE void GetDividendsForeignIssuerReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _impl_.page_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetDividendsForeignIssuerReportRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetDividendsForeignIssuerReportRequest& this_ = static_cast<const GetDividendsForeignIssuerReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetDividendsForeignIssuerReportRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetDividendsForeignIssuerReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 page = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_page(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetDividendsForeignIssuerReportRequest::ByteSizeLong(const MessageLite& base) {
          const GetDividendsForeignIssuerReportRequest& this_ = static_cast<const GetDividendsForeignIssuerReportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetDividendsForeignIssuerReportRequest::ByteSizeLong() const {
          const GetDividendsForeignIssuerReportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string task_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
          }
           {
            // optional int32 page = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetDividendsForeignIssuerReportRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetDividendsForeignIssuerReportRequest*>(&to_msg);
  auto& from = static_cast<const GetDividendsForeignIssuerReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.page_ = from._impl_.page_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDividendsForeignIssuerReportRequest::CopyFrom(const GetDividendsForeignIssuerReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetDividendsForeignIssuerReportRequest::InternalSwap(GetDividendsForeignIssuerReportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
        swap(_impl_.page_, other->_impl_.page_);
}

::google::protobuf::Metadata GetDividendsForeignIssuerReportRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenerateDividendsForeignIssuerReportResponse::_Internal {
 public:
};

GenerateDividendsForeignIssuerReportResponse::GenerateDividendsForeignIssuerReportResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenerateDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse& from_msg)
      : task_id_(arena, from.task_id_),
        _cached_size_{0} {}

GenerateDividendsForeignIssuerReportResponse::GenerateDividendsForeignIssuerReportResponse(
    ::google::protobuf::Arena* arena,
    const GenerateDividendsForeignIssuerReportResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenerateDividendsForeignIssuerReportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenerateDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        _cached_size_{0} {}

inline void GenerateDividendsForeignIssuerReportResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GenerateDividendsForeignIssuerReportResponse::~GenerateDividendsForeignIssuerReportResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
  SharedDtor(*this);
}
inline void GenerateDividendsForeignIssuerReportResponse::SharedDtor(MessageLite& self) {
  GenerateDividendsForeignIssuerReportResponse& this_ = static_cast<GenerateDividendsForeignIssuerReportResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GenerateDividendsForeignIssuerReportResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenerateDividendsForeignIssuerReportResponse(arena);
}
constexpr auto GenerateDividendsForeignIssuerReportResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GenerateDividendsForeignIssuerReportResponse),
                                            alignof(GenerateDividendsForeignIssuerReportResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenerateDividendsForeignIssuerReportResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenerateDividendsForeignIssuerReportResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenerateDividendsForeignIssuerReportResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenerateDividendsForeignIssuerReportResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenerateDividendsForeignIssuerReportResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenerateDividendsForeignIssuerReportResponse>(), &GenerateDividendsForeignIssuerReportResponse::ByteSizeLong,
            &GenerateDividendsForeignIssuerReportResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportResponse, _impl_._cached_size_),
        false,
    },
    &GenerateDividendsForeignIssuerReportResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenerateDividendsForeignIssuerReportResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 95, 2> GenerateDividendsForeignIssuerReportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GenerateDividendsForeignIssuerReportResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportResponse, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(GenerateDividendsForeignIssuerReportResponse, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\117\7\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse"
    "task_id"
  }},
};

PROTOBUF_NOINLINE void GenerateDividendsForeignIssuerReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenerateDividendsForeignIssuerReportResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenerateDividendsForeignIssuerReportResponse& this_ = static_cast<const GenerateDividendsForeignIssuerReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenerateDividendsForeignIssuerReportResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenerateDividendsForeignIssuerReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1;
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenerateDividendsForeignIssuerReportResponse::ByteSizeLong(const MessageLite& base) {
          const GenerateDividendsForeignIssuerReportResponse& this_ = static_cast<const GenerateDividendsForeignIssuerReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenerateDividendsForeignIssuerReportResponse::ByteSizeLong() const {
          const GenerateDividendsForeignIssuerReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string task_id = 1;
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenerateDividendsForeignIssuerReportResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenerateDividendsForeignIssuerReportResponse*>(&to_msg);
  auto& from = static_cast<const GenerateDividendsForeignIssuerReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateDividendsForeignIssuerReportResponse::CopyFrom(const GenerateDividendsForeignIssuerReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GenerateDividendsForeignIssuerReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenerateDividendsForeignIssuerReportResponse::InternalSwap(GenerateDividendsForeignIssuerReportResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
}

::google::protobuf::Metadata GenerateDividendsForeignIssuerReportResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetDividendsForeignIssuerReportResponse::_Internal {
 public:
};

GetDividendsForeignIssuerReportResponse::GetDividendsForeignIssuerReportResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse& from_msg)
      : dividends_foreign_issuer_report_{visibility, arena, from.dividends_foreign_issuer_report_},
        _cached_size_{0} {}

GetDividendsForeignIssuerReportResponse::GetDividendsForeignIssuerReportResponse(
    ::google::protobuf::Arena* arena,
    const GetDividendsForeignIssuerReportResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetDividendsForeignIssuerReportResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itemscount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, itemscount_),
           offsetof(Impl_, page_) -
               offsetof(Impl_, itemscount_) +
               sizeof(Impl_::page_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetDividendsForeignIssuerReportResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dividends_foreign_issuer_report_{visibility, arena},
        _cached_size_{0} {}

inline void GetDividendsForeignIssuerReportResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, itemscount_),
           0,
           offsetof(Impl_, page_) -
               offsetof(Impl_, itemscount_) +
               sizeof(Impl_::page_));
}
GetDividendsForeignIssuerReportResponse::~GetDividendsForeignIssuerReportResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
  SharedDtor(*this);
}
inline void GetDividendsForeignIssuerReportResponse::SharedDtor(MessageLite& self) {
  GetDividendsForeignIssuerReportResponse& this_ = static_cast<GetDividendsForeignIssuerReportResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetDividendsForeignIssuerReportResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetDividendsForeignIssuerReportResponse(arena);
}
constexpr auto GetDividendsForeignIssuerReportResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.dividends_foreign_issuer_report_) +
          decltype(GetDividendsForeignIssuerReportResponse::_impl_.dividends_foreign_issuer_report_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetDividendsForeignIssuerReportResponse), alignof(GetDividendsForeignIssuerReportResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetDividendsForeignIssuerReportResponse::PlacementNew_,
                                 sizeof(GetDividendsForeignIssuerReportResponse),
                                 alignof(GetDividendsForeignIssuerReportResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetDividendsForeignIssuerReportResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetDividendsForeignIssuerReportResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetDividendsForeignIssuerReportResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetDividendsForeignIssuerReportResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetDividendsForeignIssuerReportResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetDividendsForeignIssuerReportResponse>(), &GetDividendsForeignIssuerReportResponse::ByteSizeLong,
            &GetDividendsForeignIssuerReportResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_._cached_size_),
        false,
    },
    &GetDividendsForeignIssuerReportResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetDividendsForeignIssuerReportResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> GetDividendsForeignIssuerReportResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetDividendsForeignIssuerReportResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 page = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetDividendsForeignIssuerReportResponse, _impl_.page_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.page_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport dividends_foreign_issuer_report = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.dividends_foreign_issuer_report_)}},
    // int32 itemsCount = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetDividendsForeignIssuerReportResponse, _impl_.itemscount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.itemscount_)}},
    // int32 pagesCount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetDividendsForeignIssuerReportResponse, _impl_.pagescount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.pagescount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport dividends_foreign_issuer_report = 1;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.dividends_foreign_issuer_report_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 itemsCount = 2;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.itemscount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 pagesCount = 3;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.pagescount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 page = 4;
    {PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.page_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetDividendsForeignIssuerReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dividends_foreign_issuer_report_.Clear();
  ::memset(&_impl_.itemscount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.page_) -
      reinterpret_cast<char*>(&_impl_.itemscount_)) + sizeof(_impl_.page_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetDividendsForeignIssuerReportResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetDividendsForeignIssuerReportResponse& this_ = static_cast<const GetDividendsForeignIssuerReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetDividendsForeignIssuerReportResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetDividendsForeignIssuerReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport dividends_foreign_issuer_report = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_dividends_foreign_issuer_report_size());
               i < n; i++) {
            const auto& repfield = this_._internal_dividends_foreign_issuer_report().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int32 itemsCount = 2;
          if (this_._internal_itemscount() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_itemscount(), target);
          }

          // int32 pagesCount = 3;
          if (this_._internal_pagescount() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_pagescount(), target);
          }

          // int32 page = 4;
          if (this_._internal_page() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_page(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetDividendsForeignIssuerReportResponse::ByteSizeLong(const MessageLite& base) {
          const GetDividendsForeignIssuerReportResponse& this_ = static_cast<const GetDividendsForeignIssuerReportResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetDividendsForeignIssuerReportResponse::ByteSizeLong() const {
          const GetDividendsForeignIssuerReportResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport dividends_foreign_issuer_report = 1;
            {
              total_size += 1UL * this_._internal_dividends_foreign_issuer_report_size();
              for (const auto& msg : this_._internal_dividends_foreign_issuer_report()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int32 itemsCount = 2;
            if (this_._internal_itemscount() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_itemscount());
            }
            // int32 pagesCount = 3;
            if (this_._internal_pagescount() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_pagescount());
            }
            // int32 page = 4;
            if (this_._internal_page() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetDividendsForeignIssuerReportResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetDividendsForeignIssuerReportResponse*>(&to_msg);
  auto& from = static_cast<const GetDividendsForeignIssuerReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dividends_foreign_issuer_report()->MergeFrom(
      from._internal_dividends_foreign_issuer_report());
  if (from._internal_itemscount() != 0) {
    _this->_impl_.itemscount_ = from._impl_.itemscount_;
  }
  if (from._internal_pagescount() != 0) {
    _this->_impl_.pagescount_ = from._impl_.pagescount_;
  }
  if (from._internal_page() != 0) {
    _this->_impl_.page_ = from._impl_.page_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetDividendsForeignIssuerReportResponse::CopyFrom(const GetDividendsForeignIssuerReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetDividendsForeignIssuerReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetDividendsForeignIssuerReportResponse::InternalSwap(GetDividendsForeignIssuerReportResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dividends_foreign_issuer_report_.InternalSwap(&other->_impl_.dividends_foreign_issuer_report_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.page_)
      + sizeof(GetDividendsForeignIssuerReportResponse::_impl_.page_)
      - PROTOBUF_FIELD_OFFSET(GetDividendsForeignIssuerReportResponse, _impl_.itemscount_)>(
          reinterpret_cast<char*>(&_impl_.itemscount_),
          reinterpret_cast<char*>(&other->_impl_.itemscount_));
}

::google::protobuf::Metadata GetDividendsForeignIssuerReportResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DividendsForeignIssuerReport::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DividendsForeignIssuerReport>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_._has_bits_);
};

void DividendsForeignIssuerReport::clear_record_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.record_date_ != nullptr) _impl_.record_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void DividendsForeignIssuerReport::clear_payment_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payment_date_ != nullptr) _impl_.payment_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void DividendsForeignIssuerReport::clear_dividend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dividend_ != nullptr) _impl_.dividend_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void DividendsForeignIssuerReport::clear_external_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.external_commission_ != nullptr) _impl_.external_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void DividendsForeignIssuerReport::clear_dividend_gross() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dividend_gross_ != nullptr) _impl_.dividend_gross_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void DividendsForeignIssuerReport::clear_tax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tax_ != nullptr) _impl_.tax_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void DividendsForeignIssuerReport::clear_dividend_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dividend_amount_ != nullptr) _impl_.dividend_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
DividendsForeignIssuerReport::DividendsForeignIssuerReport(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport)
}
inline PROTOBUF_NDEBUG_INLINE DividendsForeignIssuerReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        security_name_(arena, from.security_name_),
        isin_(arena, from.isin_),
        issuer_country_(arena, from.issuer_country_),
        currency_(arena, from.currency_) {}

DividendsForeignIssuerReport::DividendsForeignIssuerReport(
    ::google::protobuf::Arena* arena,
    const DividendsForeignIssuerReport& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DividendsForeignIssuerReport* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.record_date_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.record_date_)
                        : nullptr;
  _impl_.payment_date_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.payment_date_)
                        : nullptr;
  _impl_.dividend_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.dividend_)
                        : nullptr;
  _impl_.external_commission_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.external_commission_)
                        : nullptr;
  _impl_.dividend_gross_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.dividend_gross_)
                        : nullptr;
  _impl_.tax_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.tax_)
                        : nullptr;
  _impl_.dividend_amount_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.dividend_amount_)
                        : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport)
}
inline PROTOBUF_NDEBUG_INLINE DividendsForeignIssuerReport::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        security_name_(arena),
        isin_(arena),
        issuer_country_(arena),
        currency_(arena) {}

inline void DividendsForeignIssuerReport::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, record_date_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, record_date_) +
               sizeof(Impl_::quantity_));
}
DividendsForeignIssuerReport::~DividendsForeignIssuerReport() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport)
  SharedDtor(*this);
}
inline void DividendsForeignIssuerReport::SharedDtor(MessageLite& self) {
  DividendsForeignIssuerReport& this_ = static_cast<DividendsForeignIssuerReport&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.security_name_.Destroy();
  this_._impl_.isin_.Destroy();
  this_._impl_.issuer_country_.Destroy();
  this_._impl_.currency_.Destroy();
  delete this_._impl_.record_date_;
  delete this_._impl_.payment_date_;
  delete this_._impl_.dividend_;
  delete this_._impl_.external_commission_;
  delete this_._impl_.dividend_gross_;
  delete this_._impl_.tax_;
  delete this_._impl_.dividend_amount_;
  this_._impl_.~Impl_();
}

inline void* DividendsForeignIssuerReport::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DividendsForeignIssuerReport(arena);
}
constexpr auto DividendsForeignIssuerReport::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DividendsForeignIssuerReport),
                                            alignof(DividendsForeignIssuerReport));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DividendsForeignIssuerReport::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DividendsForeignIssuerReport_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DividendsForeignIssuerReport::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DividendsForeignIssuerReport>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DividendsForeignIssuerReport::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DividendsForeignIssuerReport>(), &DividendsForeignIssuerReport::ByteSizeLong,
            &DividendsForeignIssuerReport::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_._cached_size_),
        false,
    },
    &DividendsForeignIssuerReport::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DividendsForeignIssuerReport::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 7, 119, 2> DividendsForeignIssuerReport::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::DividendsForeignIssuerReport>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp record_date = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.record_date_)}},
    // .google.protobuf.Timestamp payment_date = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.payment_date_)}},
    // string security_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.security_name_)}},
    // string isin = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.isin_)}},
    // string issuer_country = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.issuer_country_)}},
    // int64 quantity = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DividendsForeignIssuerReport, _impl_.quantity_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.quantity_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation dividend = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation external_commission = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.external_commission_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation dividend_gross = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_gross_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation tax = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.tax_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation dividend_amount = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 6, 6, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_amount_)}},
    // string currency = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.currency_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp record_date = 1;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.record_date_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp payment_date = 2;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.payment_date_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string security_name = 3;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.security_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string isin = 4;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.isin_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string issuer_country = 5;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.issuer_country_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 quantity = 6;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation dividend = 7;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation external_commission = 8;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.external_commission_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation dividend_gross = 9;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_gross_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation tax = 10;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.tax_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation dividend_amount = 11;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.dividend_amount_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string currency = 12;
    {PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.currency_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\77\0\0\15\4\16\0\0\0\0\0\0\10\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport"
    "security_name"
    "isin"
    "issuer_country"
    "currency"
  }},
};

PROTOBUF_NOINLINE void DividendsForeignIssuerReport::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.security_name_.ClearToEmpty();
  _impl_.isin_.ClearToEmpty();
  _impl_.issuer_country_.ClearToEmpty();
  _impl_.currency_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.record_date_ != nullptr);
      _impl_.record_date_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.payment_date_ != nullptr);
      _impl_.payment_date_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.dividend_ != nullptr);
      _impl_.dividend_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.external_commission_ != nullptr);
      _impl_.external_commission_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.dividend_gross_ != nullptr);
      _impl_.dividend_gross_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.tax_ != nullptr);
      _impl_.tax_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.dividend_amount_ != nullptr);
      _impl_.dividend_amount_->Clear();
    }
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DividendsForeignIssuerReport::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DividendsForeignIssuerReport& this_ = static_cast<const DividendsForeignIssuerReport&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DividendsForeignIssuerReport::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DividendsForeignIssuerReport& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp record_date = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.record_date_, this_._impl_.record_date_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp payment_date = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.payment_date_, this_._impl_.payment_date_->GetCachedSize(), target,
                stream);
          }

          // string security_name = 3;
          if (!this_._internal_security_name().empty()) {
            const std::string& _s = this_._internal_security_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport.security_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string isin = 4;
          if (!this_._internal_isin().empty()) {
            const std::string& _s = this_._internal_isin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport.isin");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string issuer_country = 5;
          if (!this_._internal_issuer_country().empty()) {
            const std::string& _s = this_._internal_issuer_country();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport.issuer_country");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // int64 quantity = 6;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_quantity(), target);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation dividend = 7;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.dividend_, this_._impl_.dividend_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation external_commission = 8;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.external_commission_, this_._impl_.external_commission_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation dividend_gross = 9;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.dividend_gross_, this_._impl_.dividend_gross_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation tax = 10;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.tax_, this_._impl_.tax_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation dividend_amount = 11;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.dividend_amount_, this_._impl_.dividend_amount_->GetCachedSize(), target,
                stream);
          }

          // string currency = 12;
          if (!this_._internal_currency().empty()) {
            const std::string& _s = this_._internal_currency();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport.currency");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DividendsForeignIssuerReport::ByteSizeLong(const MessageLite& base) {
          const DividendsForeignIssuerReport& this_ = static_cast<const DividendsForeignIssuerReport&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DividendsForeignIssuerReport::ByteSizeLong() const {
          const DividendsForeignIssuerReport& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string security_name = 3;
            if (!this_._internal_security_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_security_name());
            }
            // string isin = 4;
            if (!this_._internal_isin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_isin());
            }
            // string issuer_country = 5;
            if (!this_._internal_issuer_country().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_issuer_country());
            }
            // string currency = 12;
            if (!this_._internal_currency().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_currency());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000007fu) {
            // .google.protobuf.Timestamp record_date = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.record_date_);
            }
            // .google.protobuf.Timestamp payment_date = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payment_date_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation dividend = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dividend_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation external_commission = 8;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.external_commission_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation dividend_gross = 9;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dividend_gross_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation tax = 10;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tax_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation dividend_amount = 11;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dividend_amount_);
            }
          }
           {
            // int64 quantity = 6;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DividendsForeignIssuerReport::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DividendsForeignIssuerReport*>(&to_msg);
  auto& from = static_cast<const DividendsForeignIssuerReport&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_security_name().empty()) {
    _this->_internal_set_security_name(from._internal_security_name());
  }
  if (!from._internal_isin().empty()) {
    _this->_internal_set_isin(from._internal_isin());
  }
  if (!from._internal_issuer_country().empty()) {
    _this->_internal_set_issuer_country(from._internal_issuer_country());
  }
  if (!from._internal_currency().empty()) {
    _this->_internal_set_currency(from._internal_currency());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.record_date_ != nullptr);
      if (_this->_impl_.record_date_ == nullptr) {
        _this->_impl_.record_date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.record_date_);
      } else {
        _this->_impl_.record_date_->MergeFrom(*from._impl_.record_date_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.payment_date_ != nullptr);
      if (_this->_impl_.payment_date_ == nullptr) {
        _this->_impl_.payment_date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.payment_date_);
      } else {
        _this->_impl_.payment_date_->MergeFrom(*from._impl_.payment_date_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.dividend_ != nullptr);
      if (_this->_impl_.dividend_ == nullptr) {
        _this->_impl_.dividend_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.dividend_);
      } else {
        _this->_impl_.dividend_->MergeFrom(*from._impl_.dividend_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.external_commission_ != nullptr);
      if (_this->_impl_.external_commission_ == nullptr) {
        _this->_impl_.external_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.external_commission_);
      } else {
        _this->_impl_.external_commission_->MergeFrom(*from._impl_.external_commission_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.dividend_gross_ != nullptr);
      if (_this->_impl_.dividend_gross_ == nullptr) {
        _this->_impl_.dividend_gross_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.dividend_gross_);
      } else {
        _this->_impl_.dividend_gross_->MergeFrom(*from._impl_.dividend_gross_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.tax_ != nullptr);
      if (_this->_impl_.tax_ == nullptr) {
        _this->_impl_.tax_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.tax_);
      } else {
        _this->_impl_.tax_->MergeFrom(*from._impl_.tax_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.dividend_amount_ != nullptr);
      if (_this->_impl_.dividend_amount_ == nullptr) {
        _this->_impl_.dividend_amount_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.dividend_amount_);
      } else {
        _this->_impl_.dividend_amount_->MergeFrom(*from._impl_.dividend_amount_);
      }
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DividendsForeignIssuerReport::CopyFrom(const DividendsForeignIssuerReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.DividendsForeignIssuerReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DividendsForeignIssuerReport::InternalSwap(DividendsForeignIssuerReport* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.security_name_, &other->_impl_.security_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.isin_, &other->_impl_.isin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.issuer_country_, &other->_impl_.issuer_country_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.quantity_)
      + sizeof(DividendsForeignIssuerReport::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(DividendsForeignIssuerReport, _impl_.record_date_)>(
          reinterpret_cast<char*>(&_impl_.record_date_),
          reinterpret_cast<char*>(&other->_impl_.record_date_));
}

::google::protobuf::Metadata DividendsForeignIssuerReport::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PortfolioStreamRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PortfolioStreamRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PortfolioStreamRequest, _impl_._has_bits_);
};

void PortfolioStreamRequest::clear_ping_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ping_settings_ != nullptr) _impl_.ping_settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PortfolioStreamRequest::PortfolioStreamRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PortfolioStreamRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accounts_{visibility, arena, from.accounts_} {}

PortfolioStreamRequest::PortfolioStreamRequest(
    ::google::protobuf::Arena* arena,
    const PortfolioStreamRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PortfolioStreamRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ping_settings_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PingDelaySettings>(
                              arena, *from._impl_.ping_settings_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        accounts_{visibility, arena} {}

inline void PortfolioStreamRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ping_settings_ = {};
}
PortfolioStreamRequest::~PortfolioStreamRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PortfolioStreamRequest)
  SharedDtor(*this);
}
inline void PortfolioStreamRequest::SharedDtor(MessageLite& self) {
  PortfolioStreamRequest& this_ = static_cast<PortfolioStreamRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ping_settings_;
  this_._impl_.~Impl_();
}

inline void* PortfolioStreamRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PortfolioStreamRequest(arena);
}
constexpr auto PortfolioStreamRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PortfolioStreamRequest, _impl_.accounts_) +
          decltype(PortfolioStreamRequest::_impl_.accounts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PortfolioStreamRequest), alignof(PortfolioStreamRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PortfolioStreamRequest::PlacementNew_,
                                 sizeof(PortfolioStreamRequest),
                                 alignof(PortfolioStreamRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PortfolioStreamRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PortfolioStreamRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PortfolioStreamRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PortfolioStreamRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PortfolioStreamRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PortfolioStreamRequest>(), &PortfolioStreamRequest::ByteSizeLong,
            &PortfolioStreamRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PortfolioStreamRequest, _impl_._cached_size_),
        false,
    },
    &PortfolioStreamRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PortfolioStreamRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 74, 2> PortfolioStreamRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PortfolioStreamRequest, _impl_._has_bits_),
    0, // no _extensions_
    15, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950910,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PortfolioStreamRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string accounts = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioStreamRequest, _impl_.accounts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.pub.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 0, 0, PROTOBUF_FIELD_OFFSET(PortfolioStreamRequest, _impl_.ping_settings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string accounts = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioStreamRequest, _impl_.accounts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .tinkoff.pub.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
    {PROTOBUF_FIELD_OFFSET(PortfolioStreamRequest, _impl_.ping_settings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PingDelaySettings>()},
  }}, {{
    "\71\10\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.PortfolioStreamRequest"
    "accounts"
  }},
};

PROTOBUF_NOINLINE void PortfolioStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PortfolioStreamRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ping_settings_ != nullptr);
    _impl_.ping_settings_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PortfolioStreamRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PortfolioStreamRequest& this_ = static_cast<const PortfolioStreamRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PortfolioStreamRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PortfolioStreamRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PortfolioStreamRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string accounts = 1;
          for (int i = 0, n = this_._internal_accounts_size(); i < n; ++i) {
            const auto& s = this_._internal_accounts().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PortfolioStreamRequest.accounts");
            target = stream->WriteString(1, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.pub.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.ping_settings_, this_._impl_.ping_settings_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PortfolioStreamRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PortfolioStreamRequest::ByteSizeLong(const MessageLite& base) {
          const PortfolioStreamRequest& this_ = static_cast<const PortfolioStreamRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PortfolioStreamRequest::ByteSizeLong() const {
          const PortfolioStreamRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PortfolioStreamRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string accounts = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_accounts().size());
              for (int i = 0, n = this_._internal_accounts().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_accounts().Get(i));
              }
            }
          }
           {
            // .tinkoff.pub.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ping_settings_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PortfolioStreamRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PortfolioStreamRequest*>(&to_msg);
  auto& from = static_cast<const PortfolioStreamRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioStreamRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(from._internal_accounts());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.ping_settings_ != nullptr);
    if (_this->_impl_.ping_settings_ == nullptr) {
      _this->_impl_.ping_settings_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PingDelaySettings>(arena, *from._impl_.ping_settings_);
    } else {
      _this->_impl_.ping_settings_->MergeFrom(*from._impl_.ping_settings_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioStreamRequest::CopyFrom(const PortfolioStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PortfolioStreamRequest::InternalSwap(PortfolioStreamRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
  swap(_impl_.ping_settings_, other->_impl_.ping_settings_);
}

::google::protobuf::Metadata PortfolioStreamRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PortfolioStreamResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PortfolioStreamResponse, _impl_._oneof_case_);
};

void PortfolioStreamResponse::set_allocated_subscriptions(::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionResult* subscriptions) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscriptions) {
    ::google::protobuf::Arena* submessage_arena = subscriptions->GetArena();
    if (message_arena != submessage_arena) {
      subscriptions = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscriptions, submessage_arena);
    }
    set_has_subscriptions();
    _impl_.payload_.subscriptions_ = subscriptions;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse.subscriptions)
}
void PortfolioStreamResponse::set_allocated_portfolio(::tinkoff::pub::invest::api::contract::v1::PortfolioResponse* portfolio) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (portfolio) {
    ::google::protobuf::Arena* submessage_arena = portfolio->GetArena();
    if (message_arena != submessage_arena) {
      portfolio = ::google::protobuf::internal::GetOwnedMessage(message_arena, portfolio, submessage_arena);
    }
    set_has_portfolio();
    _impl_.payload_.portfolio_ = portfolio;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse.portfolio)
}
void PortfolioStreamResponse::set_allocated_ping(::tinkoff::pub::invest::api::contract::v1::Ping* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(ping)->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.payload_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse.ping)
}
void PortfolioStreamResponse::clear_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kPing) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.ping_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
    }
    clear_has_payload();
  }
}
PortfolioStreamResponse::PortfolioStreamResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PortfolioStreamResponse& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PortfolioStreamResponse::PortfolioStreamResponse(
    ::google::protobuf::Arena* arena,
    const PortfolioStreamResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PortfolioStreamResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kSubscriptions:
        _impl_.payload_.subscriptions_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionResult>(arena, *from._impl_.payload_.subscriptions_);
        break;
      case kPortfolio:
        _impl_.payload_.portfolio_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PortfolioResponse>(arena, *from._impl_.payload_.portfolio_);
        break;
      case kPing:
        _impl_.payload_.ping_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PortfolioStreamResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PortfolioStreamResponse::~PortfolioStreamResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse)
  SharedDtor(*this);
}
inline void PortfolioStreamResponse::SharedDtor(MessageLite& self) {
  PortfolioStreamResponse& this_ = static_cast<PortfolioStreamResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void PortfolioStreamResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kSubscriptions: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscriptions_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscriptions_);
      }
      break;
    }
    case kPortfolio: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.portfolio_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.portfolio_);
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.ping_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* PortfolioStreamResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PortfolioStreamResponse(arena);
}
constexpr auto PortfolioStreamResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PortfolioStreamResponse),
                                            alignof(PortfolioStreamResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PortfolioStreamResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PortfolioStreamResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PortfolioStreamResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PortfolioStreamResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PortfolioStreamResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PortfolioStreamResponse>(), &PortfolioStreamResponse::ByteSizeLong,
            &PortfolioStreamResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PortfolioStreamResponse, _impl_._cached_size_),
        false,
    },
    &PortfolioStreamResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PortfolioStreamResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> PortfolioStreamResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PortfolioStreamResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult subscriptions = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioStreamResponse, _impl_.payload_.subscriptions_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.PortfolioResponse portfolio = 2;
    {PROTOBUF_FIELD_OFFSET(PortfolioStreamResponse, _impl_.payload_.portfolio_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Ping ping = 3;
    {PROTOBUF_FIELD_OFFSET(PortfolioStreamResponse, _impl_.payload_.ping_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionResult>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PortfolioResponse>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Ping>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PortfolioStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PortfolioStreamResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PortfolioStreamResponse& this_ = static_cast<const PortfolioStreamResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PortfolioStreamResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PortfolioStreamResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            case kSubscriptions: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.payload_.subscriptions_, this_._impl_.payload_.subscriptions_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPortfolio: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.payload_.portfolio_, this_._impl_.payload_.portfolio_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPing: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.payload_.ping_, this_._impl_.payload_.ping_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PortfolioStreamResponse::ByteSizeLong(const MessageLite& base) {
          const PortfolioStreamResponse& this_ = static_cast<const PortfolioStreamResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PortfolioStreamResponse::ByteSizeLong() const {
          const PortfolioStreamResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            // .tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult subscriptions = 1;
            case kSubscriptions: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscriptions_);
              break;
            }
            // .tinkoff.pub.invest.api.contract.v1.PortfolioResponse portfolio = 2;
            case kPortfolio: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.portfolio_);
              break;
            }
            // .tinkoff.pub.invest.api.contract.v1.Ping ping = 3;
            case kPing: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.ping_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PortfolioStreamResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PortfolioStreamResponse*>(&to_msg);
  auto& from = static_cast<const PortfolioStreamResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSubscriptions: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscriptions_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionResult>(arena, *from._impl_.payload_.subscriptions_);
        } else {
          _this->_impl_.payload_.subscriptions_->MergeFrom(from._internal_subscriptions());
        }
        break;
      }
      case kPortfolio: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.portfolio_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PortfolioResponse>(arena, *from._impl_.payload_.portfolio_);
        } else {
          _this->_impl_.payload_.portfolio_->MergeFrom(from._internal_portfolio());
        }
        break;
      }
      case kPing: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.ping_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        } else {
          _this->_impl_.payload_.ping_->MergeFrom(from._internal_ping());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioStreamResponse::CopyFrom(const PortfolioStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PortfolioStreamResponse::InternalSwap(PortfolioStreamResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PortfolioStreamResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PortfolioSubscriptionResult::_Internal {
 public:
};

PortfolioSubscriptionResult::PortfolioSubscriptionResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioSubscriptionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionResult& from_msg)
      : accounts_{visibility, arena, from.accounts_},
        tracking_id_(arena, from.tracking_id_),
        stream_id_(arena, from.stream_id_),
        _cached_size_{0} {}

PortfolioSubscriptionResult::PortfolioSubscriptionResult(
    ::google::protobuf::Arena* arena,
    const PortfolioSubscriptionResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PortfolioSubscriptionResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult)
}
inline PROTOBUF_NDEBUG_INLINE PortfolioSubscriptionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accounts_{visibility, arena},
        tracking_id_(arena),
        stream_id_(arena),
        _cached_size_{0} {}

inline void PortfolioSubscriptionResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PortfolioSubscriptionResult::~PortfolioSubscriptionResult() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult)
  SharedDtor(*this);
}
inline void PortfolioSubscriptionResult::SharedDtor(MessageLite& self) {
  PortfolioSubscriptionResult& this_ = static_cast<PortfolioSubscriptionResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tracking_id_.Destroy();
  this_._impl_.stream_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PortfolioSubscriptionResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PortfolioSubscriptionResult(arena);
}
constexpr auto PortfolioSubscriptionResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PortfolioSubscriptionResult, _impl_.accounts_) +
          decltype(PortfolioSubscriptionResult::_impl_.accounts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PortfolioSubscriptionResult), alignof(PortfolioSubscriptionResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PortfolioSubscriptionResult::PlacementNew_,
                                 sizeof(PortfolioSubscriptionResult),
                                 alignof(PortfolioSubscriptionResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PortfolioSubscriptionResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PortfolioSubscriptionResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PortfolioSubscriptionResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PortfolioSubscriptionResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PortfolioSubscriptionResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PortfolioSubscriptionResult>(), &PortfolioSubscriptionResult::ByteSizeLong,
            &PortfolioSubscriptionResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PortfolioSubscriptionResult, _impl_._cached_size_),
        false,
    },
    &PortfolioSubscriptionResult::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PortfolioSubscriptionResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 91, 2> PortfolioSubscriptionResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967102,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PortfolioSubscriptionResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string stream_id = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioSubscriptionResult, _impl_.stream_id_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus accounts = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioSubscriptionResult, _impl_.accounts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string tracking_id = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PortfolioSubscriptionResult, _impl_.tracking_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus accounts = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioSubscriptionResult, _impl_.accounts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string tracking_id = 7;
    {PROTOBUF_FIELD_OFFSET(PortfolioSubscriptionResult, _impl_.tracking_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string stream_id = 8;
    {PROTOBUF_FIELD_OFFSET(PortfolioSubscriptionResult, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::AccountSubscriptionStatus>()},
  }}, {{
    "\76\0\13\11\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult"
    "tracking_id"
    "stream_id"
  }},
};

PROTOBUF_NOINLINE void PortfolioSubscriptionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _impl_.tracking_id_.ClearToEmpty();
  _impl_.stream_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PortfolioSubscriptionResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PortfolioSubscriptionResult& this_ = static_cast<const PortfolioSubscriptionResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PortfolioSubscriptionResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PortfolioSubscriptionResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus accounts = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_accounts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_accounts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string tracking_id = 7;
          if (!this_._internal_tracking_id().empty()) {
            const std::string& _s = this_._internal_tracking_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult.tracking_id");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string stream_id = 8;
          if (!this_._internal_stream_id().empty()) {
            const std::string& _s = this_._internal_stream_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult.stream_id");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PortfolioSubscriptionResult::ByteSizeLong(const MessageLite& base) {
          const PortfolioSubscriptionResult& this_ = static_cast<const PortfolioSubscriptionResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PortfolioSubscriptionResult::ByteSizeLong() const {
          const PortfolioSubscriptionResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus accounts = 1;
            {
              total_size += 1UL * this_._internal_accounts_size();
              for (const auto& msg : this_._internal_accounts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string tracking_id = 7;
            if (!this_._internal_tracking_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tracking_id());
            }
            // string stream_id = 8;
            if (!this_._internal_stream_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stream_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PortfolioSubscriptionResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PortfolioSubscriptionResult*>(&to_msg);
  auto& from = static_cast<const PortfolioSubscriptionResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(
      from._internal_accounts());
  if (!from._internal_tracking_id().empty()) {
    _this->_internal_set_tracking_id(from._internal_tracking_id());
  }
  if (!from._internal_stream_id().empty()) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioSubscriptionResult::CopyFrom(const PortfolioSubscriptionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PortfolioSubscriptionResult::InternalSwap(PortfolioSubscriptionResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tracking_id_, &other->_impl_.tracking_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stream_id_, &other->_impl_.stream_id_, arena);
}

::google::protobuf::Metadata PortfolioSubscriptionResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AccountSubscriptionStatus::_Internal {
 public:
};

AccountSubscriptionStatus::AccountSubscriptionStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus)
}
inline PROTOBUF_NDEBUG_INLINE AccountSubscriptionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::AccountSubscriptionStatus& from_msg)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

AccountSubscriptionStatus::AccountSubscriptionStatus(
    ::google::protobuf::Arena* arena,
    const AccountSubscriptionStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AccountSubscriptionStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.subscription_status_ = from._impl_.subscription_status_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus)
}
inline PROTOBUF_NDEBUG_INLINE AccountSubscriptionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void AccountSubscriptionStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscription_status_ = {};
}
AccountSubscriptionStatus::~AccountSubscriptionStatus() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus)
  SharedDtor(*this);
}
inline void AccountSubscriptionStatus::SharedDtor(MessageLite& self) {
  AccountSubscriptionStatus& this_ = static_cast<AccountSubscriptionStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AccountSubscriptionStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AccountSubscriptionStatus(arena);
}
constexpr auto AccountSubscriptionStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AccountSubscriptionStatus),
                                            alignof(AccountSubscriptionStatus));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AccountSubscriptionStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AccountSubscriptionStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AccountSubscriptionStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AccountSubscriptionStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AccountSubscriptionStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AccountSubscriptionStatus>(), &AccountSubscriptionStatus::ByteSizeLong,
            &AccountSubscriptionStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AccountSubscriptionStatus, _impl_._cached_size_),
        false,
    },
    &AccountSubscriptionStatus::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AccountSubscriptionStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2> AccountSubscriptionStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967262,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::AccountSubscriptionStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionStatus subscription_status = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AccountSubscriptionStatus, _impl_.subscription_status_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AccountSubscriptionStatus, _impl_.subscription_status_)}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AccountSubscriptionStatus, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(AccountSubscriptionStatus, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionStatus subscription_status = 6;
    {PROTOBUF_FIELD_OFFSET(AccountSubscriptionStatus, _impl_.subscription_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\74\12\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void AccountSubscriptionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.subscription_status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AccountSubscriptionStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AccountSubscriptionStatus& this_ = static_cast<const AccountSubscriptionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AccountSubscriptionStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AccountSubscriptionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1;
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionStatus subscription_status = 6;
          if (this_._internal_subscription_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_subscription_status(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AccountSubscriptionStatus::ByteSizeLong(const MessageLite& base) {
          const AccountSubscriptionStatus& this_ = static_cast<const AccountSubscriptionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AccountSubscriptionStatus::ByteSizeLong() const {
          const AccountSubscriptionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account_id = 1;
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // .tinkoff.pub.invest.api.contract.v1.PortfolioSubscriptionStatus subscription_status = 6;
            if (this_._internal_subscription_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AccountSubscriptionStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AccountSubscriptionStatus*>(&to_msg);
  auto& from = static_cast<const AccountSubscriptionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_subscription_status() != 0) {
    _this->_impl_.subscription_status_ = from._impl_.subscription_status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AccountSubscriptionStatus::CopyFrom(const AccountSubscriptionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.AccountSubscriptionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AccountSubscriptionStatus::InternalSwap(AccountSubscriptionStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  swap(_impl_.subscription_status_, other->_impl_.subscription_status_);
}

::google::protobuf::Metadata AccountSubscriptionStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetOperationsByCursorRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetOperationsByCursorRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_._has_bits_);
};

void GetOperationsByCursorRequest::clear_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GetOperationsByCursorRequest::clear_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
GetOperationsByCursorRequest::GetOperationsByCursorRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOperationsByCursorRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        operation_types_{visibility, arena, from.operation_types_},
        _operation_types_cached_byte_size_{0},
        account_id_(arena, from.account_id_),
        instrument_id_(arena, from.instrument_id_),
        cursor_(arena, from.cursor_) {}

GetOperationsByCursorRequest::GetOperationsByCursorRequest(
    ::google::protobuf::Arena* arena,
    const GetOperationsByCursorRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetOperationsByCursorRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.from_)
                        : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.to_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, limit_),
           offsetof(Impl_, without_overnights_) -
               offsetof(Impl_, limit_) +
               sizeof(Impl_::without_overnights_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOperationsByCursorRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        operation_types_{visibility, arena},
        _operation_types_cached_byte_size_{0},
        account_id_(arena),
        instrument_id_(arena),
        cursor_(arena) {}

inline void GetOperationsByCursorRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, without_overnights_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::without_overnights_));
}
GetOperationsByCursorRequest::~GetOperationsByCursorRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest)
  SharedDtor(*this);
}
inline void GetOperationsByCursorRequest::SharedDtor(MessageLite& self) {
  GetOperationsByCursorRequest& this_ = static_cast<GetOperationsByCursorRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  this_._impl_.cursor_.Destroy();
  delete this_._impl_.from_;
  delete this_._impl_.to_;
  this_._impl_.~Impl_();
}

inline void* GetOperationsByCursorRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetOperationsByCursorRequest(arena);
}
constexpr auto GetOperationsByCursorRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.operation_types_) +
          decltype(GetOperationsByCursorRequest::_impl_.operation_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetOperationsByCursorRequest), alignof(GetOperationsByCursorRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetOperationsByCursorRequest::PlacementNew_,
                                 sizeof(GetOperationsByCursorRequest),
                                 alignof(GetOperationsByCursorRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetOperationsByCursorRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetOperationsByCursorRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetOperationsByCursorRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetOperationsByCursorRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetOperationsByCursorRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetOperationsByCursorRequest>(), &GetOperationsByCursorRequest::ByteSizeLong,
            &GetOperationsByCursorRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_._cached_size_),
        false,
    },
    &GetOperationsByCursorRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetOperationsByCursorRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 109, 2> GetOperationsByCursorRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_._has_bits_),
    0, // no _extensions_
    17, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294837148,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool without_trades = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 7, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_trades_)}},
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.account_id_)}},
    // optional string instrument_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.instrument_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .google.protobuf.Timestamp from = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.from_)}},
    // optional .google.protobuf.Timestamp to = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 1, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.to_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string cursor = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 1, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.cursor_)}},
    // optional int32 limit = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetOperationsByCursorRequest, _impl_.limit_), 4>(),
     {96, 4, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.limit_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.OperationType operation_types = 13;
    {::_pbi::TcParser::FastV32P1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.operation_types_)}},
    // optional .tinkoff.pub.invest.api.contract.v1.OperationState state = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetOperationsByCursorRequest, _impl_.state_), 5>(),
     {112, 5, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.state_)}},
    // optional bool without_commissions = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetOperationsByCursorRequest, _impl_.without_commissions_), 6>(),
     {120, 6, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_commissions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string instrument_id = 2;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.instrument_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .google.protobuf.Timestamp from = 6;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.from_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .google.protobuf.Timestamp to = 7;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.to_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string cursor = 11;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.cursor_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 limit = 12;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.limit_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .tinkoff.pub.invest.api.contract.v1.OperationType operation_types = 13;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.operation_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // optional .tinkoff.pub.invest.api.contract.v1.OperationState state = 14;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.state_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional bool without_commissions = 15;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_commissions_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool without_trades = 16;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_trades_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool without_overnights = 17;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_overnights_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\77\12\15\0\0\6\0\0\0\0\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest"
    "account_id"
    "instrument_id"
    "cursor"
  }},
};

PROTOBUF_NOINLINE void GetOperationsByCursorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.operation_types_.Clear();
  _impl_.account_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.instrument_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.cursor_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&_impl_.limit_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.without_trades_) -
        reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.without_trades_));
  }
  _impl_.without_overnights_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetOperationsByCursorRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetOperationsByCursorRequest& this_ = static_cast<const GetOperationsByCursorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetOperationsByCursorRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetOperationsByCursorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string instrument_id = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest.instrument_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // optional .google.protobuf.Timestamp from = 6;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.from_, this_._impl_.from_->GetCachedSize(), target,
                stream);
          }

          // optional .google.protobuf.Timestamp to = 7;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.to_, this_._impl_.to_->GetCachedSize(), target,
                stream);
          }

          // optional string cursor = 11;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_cursor();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest.cursor");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // optional int32 limit = 12;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<12>(
                    stream, this_._internal_limit(), target);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.OperationType operation_types = 13;
          {
            std::size_t byte_size =
                                              this_._impl_._operation_types_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteEnumPacked(
                  13, this_._internal_operation_types(), byte_size, target);
            }
          }

          // optional .tinkoff.pub.invest.api.contract.v1.OperationState state = 14;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                14, this_._internal_state(), target);
          }

          // optional bool without_commissions = 15;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                15, this_._internal_without_commissions(), target);
          }

          // optional bool without_trades = 16;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                16, this_._internal_without_trades(), target);
          }

          // optional bool without_overnights = 17;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                17, this_._internal_without_overnights(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetOperationsByCursorRequest::ByteSizeLong(const MessageLite& base) {
          const GetOperationsByCursorRequest& this_ = static_cast<const GetOperationsByCursorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetOperationsByCursorRequest::ByteSizeLong() const {
          const GetOperationsByCursorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.OperationType operation_types = 13;
            {
              total_size += ::_pbi::WireFormatLite::EnumSizeWithPackedTagSize(
                  this_._internal_operation_types(), 1, this_._impl_._operation_types_cached_byte_size_);
            }
          }
           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional string instrument_id = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
            // optional string cursor = 11;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cursor());
            }
            // optional .google.protobuf.Timestamp from = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_);
            }
            // optional .google.protobuf.Timestamp to = 7;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_);
            }
            // optional int32 limit = 12;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_limit());
            }
            // optional .tinkoff.pub.invest.api.contract.v1.OperationState state = 14;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_state());
            }
            // optional bool without_commissions = 15;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2;
            }
            // optional bool without_trades = 16;
            if (cached_has_bits & 0x00000080u) {
              total_size += 3;
            }
          }
           {
            // optional bool without_overnights = 17;
            if (cached_has_bits & 0x00000100u) {
              total_size += 3;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetOperationsByCursorRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetOperationsByCursorRequest*>(&to_msg);
  auto& from = static_cast<const GetOperationsByCursorRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_operation_types()->MergeFrom(from._internal_operation_types());
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_instrument_id(from._internal_instrument_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_cursor(from._internal_cursor());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.from_ != nullptr);
      if (_this->_impl_.from_ == nullptr) {
        _this->_impl_.from_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.from_);
      } else {
        _this->_impl_.from_->MergeFrom(*from._impl_.from_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.to_ != nullptr);
      if (_this->_impl_.to_ == nullptr) {
        _this->_impl_.to_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.to_);
      } else {
        _this->_impl_.to_->MergeFrom(*from._impl_.to_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.limit_ = from._impl_.limit_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.state_ = from._impl_.state_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.without_commissions_ = from._impl_.without_commissions_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.without_trades_ = from._impl_.without_trades_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.without_overnights_ = from._impl_.without_overnights_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOperationsByCursorRequest::CopyFrom(const GetOperationsByCursorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetOperationsByCursorRequest::InternalSwap(GetOperationsByCursorRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.operation_types_.InternalSwap(&other->_impl_.operation_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cursor_, &other->_impl_.cursor_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.without_overnights_)
      + sizeof(GetOperationsByCursorRequest::_impl_.without_overnights_)
      - PROTOBUF_FIELD_OFFSET(GetOperationsByCursorRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata GetOperationsByCursorRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetOperationsByCursorResponse::_Internal {
 public:
};

GetOperationsByCursorResponse::GetOperationsByCursorResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOperationsByCursorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorResponse& from_msg)
      : items_{visibility, arena, from.items_},
        next_cursor_(arena, from.next_cursor_),
        _cached_size_{0} {}

GetOperationsByCursorResponse::GetOperationsByCursorResponse(
    ::google::protobuf::Arena* arena,
    const GetOperationsByCursorResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetOperationsByCursorResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.has_next_ = from._impl_.has_next_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOperationsByCursorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : items_{visibility, arena},
        next_cursor_(arena),
        _cached_size_{0} {}

inline void GetOperationsByCursorResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.has_next_ = {};
}
GetOperationsByCursorResponse::~GetOperationsByCursorResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorResponse)
  SharedDtor(*this);
}
inline void GetOperationsByCursorResponse::SharedDtor(MessageLite& self) {
  GetOperationsByCursorResponse& this_ = static_cast<GetOperationsByCursorResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.next_cursor_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetOperationsByCursorResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetOperationsByCursorResponse(arena);
}
constexpr auto GetOperationsByCursorResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_.items_) +
          decltype(GetOperationsByCursorResponse::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetOperationsByCursorResponse), alignof(GetOperationsByCursorResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetOperationsByCursorResponse::PlacementNew_,
                                 sizeof(GetOperationsByCursorResponse),
                                 alignof(GetOperationsByCursorResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetOperationsByCursorResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetOperationsByCursorResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetOperationsByCursorResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetOperationsByCursorResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetOperationsByCursorResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetOperationsByCursorResponse>(), &GetOperationsByCursorResponse::ByteSizeLong,
            &GetOperationsByCursorResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_._cached_size_),
        false,
    },
    &GetOperationsByCursorResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetOperationsByCursorResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 84, 2> GetOperationsByCursorResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967260,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetOperationsByCursorResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string next_cursor = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_.next_cursor_)}},
    // bool has_next = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetOperationsByCursorResponse, _impl_.has_next_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_.has_next_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool has_next = 1;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_.has_next_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string next_cursor = 2;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_.next_cursor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.pub.invest.api.contract.v1.OperationItem items = 6;
    {PROTOBUF_FIELD_OFFSET(GetOperationsByCursorResponse, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::OperationItem>()},
  }}, {{
    "\100\0\13\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorResponse"
    "next_cursor"
  }},
};

PROTOBUF_NOINLINE void GetOperationsByCursorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.next_cursor_.ClearToEmpty();
  _impl_.has_next_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetOperationsByCursorResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetOperationsByCursorResponse& this_ = static_cast<const GetOperationsByCursorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetOperationsByCursorResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetOperationsByCursorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool has_next = 1;
          if (this_._internal_has_next() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_has_next(), target);
          }

          // string next_cursor = 2;
          if (!this_._internal_next_cursor().empty()) {
            const std::string& _s = this_._internal_next_cursor();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorResponse.next_cursor");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.OperationItem items = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_items_size());
               i < n; i++) {
            const auto& repfield = this_._internal_items().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetOperationsByCursorResponse::ByteSizeLong(const MessageLite& base) {
          const GetOperationsByCursorResponse& this_ = static_cast<const GetOperationsByCursorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetOperationsByCursorResponse::ByteSizeLong() const {
          const GetOperationsByCursorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.OperationItem items = 6;
            {
              total_size += 1UL * this_._internal_items_size();
              for (const auto& msg : this_._internal_items()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string next_cursor = 2;
            if (!this_._internal_next_cursor().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_next_cursor());
            }
            // bool has_next = 1;
            if (this_._internal_has_next() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetOperationsByCursorResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetOperationsByCursorResponse*>(&to_msg);
  auto& from = static_cast<const GetOperationsByCursorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  if (!from._internal_next_cursor().empty()) {
    _this->_internal_set_next_cursor(from._internal_next_cursor());
  }
  if (from._internal_has_next() != 0) {
    _this->_impl_.has_next_ = from._impl_.has_next_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOperationsByCursorResponse::CopyFrom(const GetOperationsByCursorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetOperationsByCursorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetOperationsByCursorResponse::InternalSwap(GetOperationsByCursorResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_cursor_, &other->_impl_.next_cursor_, arena);
        swap(_impl_.has_next_, other->_impl_.has_next_);
}

::google::protobuf::Metadata GetOperationsByCursorResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OperationItem::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OperationItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OperationItem, _impl_._has_bits_);
};

void OperationItem::clear_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.date_ != nullptr) _impl_.date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OperationItem::clear_payment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payment_ != nullptr) _impl_.payment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OperationItem::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void OperationItem::clear_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.commission_ != nullptr) _impl_.commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void OperationItem::clear_yield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.yield_ != nullptr) _impl_.yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void OperationItem::clear_yield_relative() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.yield_relative_ != nullptr) _impl_.yield_relative_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void OperationItem::clear_accrued_int() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.accrued_int_ != nullptr) _impl_.accrued_int_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void OperationItem::clear_cancel_date_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cancel_date_time_ != nullptr) _impl_.cancel_date_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
OperationItem::OperationItem(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.OperationItem)
}
inline PROTOBUF_NDEBUG_INLINE OperationItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::OperationItem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        child_operations_{visibility, arena, from.child_operations_},
        cursor_(arena, from.cursor_),
        broker_account_id_(arena, from.broker_account_id_),
        id_(arena, from.id_),
        parent_operation_id_(arena, from.parent_operation_id_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        instrument_uid_(arena, from.instrument_uid_),
        figi_(arena, from.figi_),
        instrument_type_(arena, from.instrument_type_),
        position_uid_(arena, from.position_uid_),
        cancel_reason_(arena, from.cancel_reason_),
        asset_uid_(arena, from.asset_uid_) {}

OperationItem::OperationItem(
    ::google::protobuf::Arena* arena,
    const OperationItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.date_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.date_)
                        : nullptr;
  _impl_.payment_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.payment_)
                        : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.price_)
                        : nullptr;
  _impl_.commission_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.commission_)
                        : nullptr;
  _impl_.yield_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.yield_)
                        : nullptr;
  _impl_.yield_relative_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.yield_relative_)
                        : nullptr;
  _impl_.accrued_int_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.accrued_int_)
                        : nullptr;
  _impl_.cancel_date_time_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.cancel_date_time_)
                        : nullptr;
  _impl_.trades_info_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::OperationItemTrades>(
                              arena, *from._impl_.trades_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, instrument_kind_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::instrument_kind_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.OperationItem)
}
inline PROTOBUF_NDEBUG_INLINE OperationItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        child_operations_{visibility, arena},
        cursor_(arena),
        broker_account_id_(arena),
        id_(arena),
        parent_operation_id_(arena),
        name_(arena),
        description_(arena),
        instrument_uid_(arena),
        figi_(arena),
        instrument_type_(arena),
        position_uid_(arena),
        cancel_reason_(arena),
        asset_uid_(arena) {}

inline void OperationItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, date_),
           0,
           offsetof(Impl_, instrument_kind_) -
               offsetof(Impl_, date_) +
               sizeof(Impl_::instrument_kind_));
}
OperationItem::~OperationItem() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.OperationItem)
  SharedDtor(*this);
}
inline void OperationItem::SharedDtor(MessageLite& self) {
  OperationItem& this_ = static_cast<OperationItem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cursor_.Destroy();
  this_._impl_.broker_account_id_.Destroy();
  this_._impl_.id_.Destroy();
  this_._impl_.parent_operation_id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_type_.Destroy();
  this_._impl_.position_uid_.Destroy();
  this_._impl_.cancel_reason_.Destroy();
  this_._impl_.asset_uid_.Destroy();
  delete this_._impl_.date_;
  delete this_._impl_.payment_;
  delete this_._impl_.price_;
  delete this_._impl_.commission_;
  delete this_._impl_.yield_;
  delete this_._impl_.yield_relative_;
  delete this_._impl_.accrued_int_;
  delete this_._impl_.cancel_date_time_;
  delete this_._impl_.trades_info_;
  this_._impl_.~Impl_();
}

inline void* OperationItem::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OperationItem(arena);
}
constexpr auto OperationItem::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.child_operations_) +
          decltype(OperationItem::_impl_.child_operations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OperationItem), alignof(OperationItem), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OperationItem::PlacementNew_,
                                 sizeof(OperationItem),
                                 alignof(OperationItem));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OperationItem::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OperationItem_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OperationItem::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OperationItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OperationItem::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OperationItem>(), &OperationItem::ByteSizeLong,
            &OperationItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OperationItem, _impl_._cached_size_),
        false,
    },
    &OperationItem::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OperationItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 28, 10, 207, 11> OperationItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationItem, _impl_._has_bits_),
    0, // no _extensions_
    65, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    1057783774,  // skipmap
    offsetof(decltype(_table_), field_entries),
    28,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::OperationItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string cursor = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.cursor_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string broker_account_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.broker_account_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.id_)}},
    // string parent_operation_id = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.parent_operation_id_)}},
    // string name = 18;
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.name_)}},
    // string position_uid = 35;
    {::_pbi::TcParser::FastUS2,
     {666, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.position_uid_)}},
    // int64 quantity_rest = 52;
    {::_pbi::TcParser::FastV64S2,
     {928, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.quantity_rest_)}},
    // .google.protobuf.Timestamp date = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 0, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.date_)}},
    // .tinkoff.pub.invest.api.contract.v1.OperationType type = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.type_)}},
    // string description = 23;
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.description_)}},
    // .tinkoff.pub.invest.api.contract.v1.OperationState state = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.state_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 41;
    {::_pbi::TcParser::FastMtS2,
     {714, 1, 1, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.payment_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 42;
    {::_pbi::TcParser::FastMtS2,
     {722, 2, 2, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.price_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue commission = 43;
    {::_pbi::TcParser::FastMtS2,
     {730, 3, 3, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.commission_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue yield = 44;
    {::_pbi::TcParser::FastMtS2,
     {738, 4, 4, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.yield_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation yield_relative = 45;
    {::_pbi::TcParser::FastMtS2,
     {746, 5, 5, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.yield_relative_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue accrued_int = 46;
    {::_pbi::TcParser::FastMtS2,
     {754, 6, 6, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.accrued_int_)}},
    // string instrument_uid = 31;
    {::_pbi::TcParser::FastUS2,
     {506, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.instrument_uid_)}},
  }}, {{
    33, 0, 3,
    49400, 11, 28259, 20, 65534, 27,
    65535, 65535
  }}, {{
    // string cursor = 1;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.cursor_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string broker_account_id = 6;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.broker_account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string id = 16;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string parent_operation_id = 17;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.parent_operation_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 18;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp date = 21;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.date_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.OperationType type = 22;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string description = 23;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.OperationState state = 24;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string instrument_uid = 31;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string figi = 32;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_type = 33;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.instrument_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.InstrumentType instrument_kind = 34;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.instrument_kind_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string position_uid = 35;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.position_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 41;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.payment_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 42;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.price_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue commission = 43;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.commission_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue yield = 44;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.yield_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation yield_relative = 45;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.yield_relative_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue accrued_int = 46;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.accrued_int_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 51;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 quantity_rest = 52;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.quantity_rest_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 quantity_done = 53;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.quantity_done_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp cancel_date_time = 56;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.cancel_date_time_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string cancel_reason = 57;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.cancel_reason_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.OperationItemTrades trades_info = 61;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.trades_info_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string asset_uid = 64;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.asset_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.pub.invest.api.contract.v1.ChildOperationItem child_operations = 65;
    {PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.child_operations_), -1, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::OperationItemTrades>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::ChildOperationItem>()},
  }}, {{
    "\60\6\21\2\23\4\0\0\13\0\16\4\17\0\14\0\0\0\0\0\0\0\0\0\0\15\0\11\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.OperationItem"
    "cursor"
    "broker_account_id"
    "id"
    "parent_operation_id"
    "name"
    "description"
    "instrument_uid"
    "figi"
    "instrument_type"
    "position_uid"
    "cancel_reason"
    "asset_uid"
  }},
};

PROTOBUF_NOINLINE void OperationItem::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.OperationItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.child_operations_.Clear();
  _impl_.cursor_.ClearToEmpty();
  _impl_.broker_account_id_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.parent_operation_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_type_.ClearToEmpty();
  _impl_.position_uid_.ClearToEmpty();
  _impl_.cancel_reason_.ClearToEmpty();
  _impl_.asset_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.date_ != nullptr);
      _impl_.date_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.payment_ != nullptr);
      _impl_.payment_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.commission_ != nullptr);
      _impl_.commission_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.yield_ != nullptr);
      _impl_.yield_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.yield_relative_ != nullptr);
      _impl_.yield_relative_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.accrued_int_ != nullptr);
      _impl_.accrued_int_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.cancel_date_time_ != nullptr);
      _impl_.cancel_date_time_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(_impl_.trades_info_ != nullptr);
    _impl_.trades_info_->Clear();
  }
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.instrument_kind_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.instrument_kind_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OperationItem::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OperationItem& this_ = static_cast<const OperationItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OperationItem::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OperationItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.OperationItem)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string cursor = 1;
          if (!this_._internal_cursor().empty()) {
            const std::string& _s = this_._internal_cursor();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.cursor");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string broker_account_id = 6;
          if (!this_._internal_broker_account_id().empty()) {
            const std::string& _s = this_._internal_broker_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.broker_account_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string id = 16;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.id");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          // string parent_operation_id = 17;
          if (!this_._internal_parent_operation_id().empty()) {
            const std::string& _s = this_._internal_parent_operation_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.parent_operation_id");
            target = stream->WriteStringMaybeAliased(17, _s, target);
          }

          // string name = 18;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.name");
            target = stream->WriteStringMaybeAliased(18, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp date = 21;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                21, *this_._impl_.date_, this_._impl_.date_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.OperationType type = 22;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                22, this_._internal_type(), target);
          }

          // string description = 23;
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.description");
            target = stream->WriteStringMaybeAliased(23, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.OperationState state = 24;
          if (this_._internal_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                24, this_._internal_state(), target);
          }

          // string instrument_uid = 31;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.instrument_uid");
            target = stream->WriteStringMaybeAliased(31, _s, target);
          }

          // string figi = 32;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.figi");
            target = stream->WriteStringMaybeAliased(32, _s, target);
          }

          // string instrument_type = 33;
          if (!this_._internal_instrument_type().empty()) {
            const std::string& _s = this_._internal_instrument_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.instrument_type");
            target = stream->WriteStringMaybeAliased(33, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.InstrumentType instrument_kind = 34;
          if (this_._internal_instrument_kind() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                34, this_._internal_instrument_kind(), target);
          }

          // string position_uid = 35;
          if (!this_._internal_position_uid().empty()) {
            const std::string& _s = this_._internal_position_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.position_uid");
            target = stream->WriteStringMaybeAliased(35, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 41;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                41, *this_._impl_.payment_, this_._impl_.payment_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 42;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                42, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue commission = 43;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                43, *this_._impl_.commission_, this_._impl_.commission_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue yield = 44;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                44, *this_._impl_.yield_, this_._impl_.yield_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation yield_relative = 45;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                45, *this_._impl_.yield_relative_, this_._impl_.yield_relative_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue accrued_int = 46;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                46, *this_._impl_.accrued_int_, this_._impl_.accrued_int_->GetCachedSize(), target,
                stream);
          }

          // int64 quantity = 51;
          if (this_._internal_quantity() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                51, this_._internal_quantity(), target);
          }

          // int64 quantity_rest = 52;
          if (this_._internal_quantity_rest() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                52, this_._internal_quantity_rest(), target);
          }

          // int64 quantity_done = 53;
          if (this_._internal_quantity_done() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                53, this_._internal_quantity_done(), target);
          }

          // .google.protobuf.Timestamp cancel_date_time = 56;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                56, *this_._impl_.cancel_date_time_, this_._impl_.cancel_date_time_->GetCachedSize(), target,
                stream);
          }

          // string cancel_reason = 57;
          if (!this_._internal_cancel_reason().empty()) {
            const std::string& _s = this_._internal_cancel_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.cancel_reason");
            target = stream->WriteStringMaybeAliased(57, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.OperationItemTrades trades_info = 61;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                61, *this_._impl_.trades_info_, this_._impl_.trades_info_->GetCachedSize(), target,
                stream);
          }

          // string asset_uid = 64;
          if (!this_._internal_asset_uid().empty()) {
            const std::string& _s = this_._internal_asset_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItem.asset_uid");
            target = stream->WriteStringMaybeAliased(64, _s, target);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.ChildOperationItem child_operations = 65;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_child_operations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_child_operations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    65, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.OperationItem)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OperationItem::ByteSizeLong(const MessageLite& base) {
          const OperationItem& this_ = static_cast<const OperationItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OperationItem::ByteSizeLong() const {
          const OperationItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.OperationItem)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.ChildOperationItem child_operations = 65;
            {
              total_size += 2UL * this_._internal_child_operations_size();
              for (const auto& msg : this_._internal_child_operations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string cursor = 1;
            if (!this_._internal_cursor().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cursor());
            }
            // string broker_account_id = 6;
            if (!this_._internal_broker_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_broker_account_id());
            }
            // string id = 16;
            if (!this_._internal_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string parent_operation_id = 17;
            if (!this_._internal_parent_operation_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_parent_operation_id());
            }
            // string name = 18;
            if (!this_._internal_name().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string description = 23;
            if (!this_._internal_description().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string instrument_uid = 31;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // string figi = 32;
            if (!this_._internal_figi().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_type = 33;
            if (!this_._internal_instrument_type().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_type());
            }
            // string position_uid = 35;
            if (!this_._internal_position_uid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_position_uid());
            }
            // string cancel_reason = 57;
            if (!this_._internal_cancel_reason().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cancel_reason());
            }
            // string asset_uid = 64;
            if (!this_._internal_asset_uid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_asset_uid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .google.protobuf.Timestamp date = 21;
            if (cached_has_bits & 0x00000001u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.date_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 41;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payment_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 42;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue commission = 43;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.commission_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue yield = 44;
            if (cached_has_bits & 0x00000010u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.yield_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation yield_relative = 45;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.yield_relative_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue accrued_int = 46;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.accrued_int_);
            }
            // .google.protobuf.Timestamp cancel_date_time = 56;
            if (cached_has_bits & 0x00000080u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cancel_date_time_);
            }
          }
           {
            // .tinkoff.pub.invest.api.contract.v1.OperationItemTrades trades_info = 61;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.trades_info_);
            }
          }
           {
            // .tinkoff.pub.invest.api.contract.v1.OperationType type = 22;
            if (this_._internal_type() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // .tinkoff.pub.invest.api.contract.v1.OperationState state = 24;
            if (this_._internal_state() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_state());
            }
            // int64 quantity = 51;
            if (this_._internal_quantity() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_quantity());
            }
            // int64 quantity_rest = 52;
            if (this_._internal_quantity_rest() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_quantity_rest());
            }
            // int64 quantity_done = 53;
            if (this_._internal_quantity_done() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_quantity_done());
            }
            // .tinkoff.pub.invest.api.contract.v1.InstrumentType instrument_kind = 34;
            if (this_._internal_instrument_kind() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_instrument_kind());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OperationItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationItem*>(&to_msg);
  auto& from = static_cast<const OperationItem&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.OperationItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_child_operations()->MergeFrom(
      from._internal_child_operations());
  if (!from._internal_cursor().empty()) {
    _this->_internal_set_cursor(from._internal_cursor());
  }
  if (!from._internal_broker_account_id().empty()) {
    _this->_internal_set_broker_account_id(from._internal_broker_account_id());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_parent_operation_id().empty()) {
    _this->_internal_set_parent_operation_id(from._internal_parent_operation_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_type().empty()) {
    _this->_internal_set_instrument_type(from._internal_instrument_type());
  }
  if (!from._internal_position_uid().empty()) {
    _this->_internal_set_position_uid(from._internal_position_uid());
  }
  if (!from._internal_cancel_reason().empty()) {
    _this->_internal_set_cancel_reason(from._internal_cancel_reason());
  }
  if (!from._internal_asset_uid().empty()) {
    _this->_internal_set_asset_uid(from._internal_asset_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.date_ != nullptr);
      if (_this->_impl_.date_ == nullptr) {
        _this->_impl_.date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.date_);
      } else {
        _this->_impl_.date_->MergeFrom(*from._impl_.date_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.payment_ != nullptr);
      if (_this->_impl_.payment_ == nullptr) {
        _this->_impl_.payment_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.payment_);
      } else {
        _this->_impl_.payment_->MergeFrom(*from._impl_.payment_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.commission_ != nullptr);
      if (_this->_impl_.commission_ == nullptr) {
        _this->_impl_.commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.commission_);
      } else {
        _this->_impl_.commission_->MergeFrom(*from._impl_.commission_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.yield_ != nullptr);
      if (_this->_impl_.yield_ == nullptr) {
        _this->_impl_.yield_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.yield_);
      } else {
        _this->_impl_.yield_->MergeFrom(*from._impl_.yield_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.yield_relative_ != nullptr);
      if (_this->_impl_.yield_relative_ == nullptr) {
        _this->_impl_.yield_relative_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.yield_relative_);
      } else {
        _this->_impl_.yield_relative_->MergeFrom(*from._impl_.yield_relative_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.accrued_int_ != nullptr);
      if (_this->_impl_.accrued_int_ == nullptr) {
        _this->_impl_.accrued_int_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.accrued_int_);
      } else {
        _this->_impl_.accrued_int_->MergeFrom(*from._impl_.accrued_int_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.cancel_date_time_ != nullptr);
      if (_this->_impl_.cancel_date_time_ == nullptr) {
        _this->_impl_.cancel_date_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.cancel_date_time_);
      } else {
        _this->_impl_.cancel_date_time_->MergeFrom(*from._impl_.cancel_date_time_);
      }
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(from._impl_.trades_info_ != nullptr);
    if (_this->_impl_.trades_info_ == nullptr) {
      _this->_impl_.trades_info_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::OperationItemTrades>(arena, *from._impl_.trades_info_);
    } else {
      _this->_impl_.trades_info_->MergeFrom(*from._impl_.trades_info_);
    }
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_state() != 0) {
    _this->_impl_.state_ = from._impl_.state_;
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  if (from._internal_quantity_rest() != 0) {
    _this->_impl_.quantity_rest_ = from._impl_.quantity_rest_;
  }
  if (from._internal_quantity_done() != 0) {
    _this->_impl_.quantity_done_ = from._impl_.quantity_done_;
  }
  if (from._internal_instrument_kind() != 0) {
    _this->_impl_.instrument_kind_ = from._impl_.instrument_kind_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationItem::CopyFrom(const OperationItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.OperationItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationItem::InternalSwap(OperationItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.child_operations_.InternalSwap(&other->_impl_.child_operations_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cursor_, &other->_impl_.cursor_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.broker_account_id_, &other->_impl_.broker_account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_operation_id_, &other->_impl_.parent_operation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_type_, &other->_impl_.instrument_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_uid_, &other->_impl_.position_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cancel_reason_, &other->_impl_.cancel_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.asset_uid_, &other->_impl_.asset_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.instrument_kind_)
      + sizeof(OperationItem::_impl_.instrument_kind_)
      - PROTOBUF_FIELD_OFFSET(OperationItem, _impl_.date_)>(
          reinterpret_cast<char*>(&_impl_.date_),
          reinterpret_cast<char*>(&other->_impl_.date_));
}

::google::protobuf::Metadata OperationItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OperationItemTrades::_Internal {
 public:
};

OperationItemTrades::OperationItemTrades(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.OperationItemTrades)
}
inline PROTOBUF_NDEBUG_INLINE OperationItemTrades::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::OperationItemTrades& from_msg)
      : trades_{visibility, arena, from.trades_},
        _cached_size_{0} {}

OperationItemTrades::OperationItemTrades(
    ::google::protobuf::Arena* arena,
    const OperationItemTrades& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationItemTrades* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.OperationItemTrades)
}
inline PROTOBUF_NDEBUG_INLINE OperationItemTrades::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trades_{visibility, arena},
        _cached_size_{0} {}

inline void OperationItemTrades::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OperationItemTrades::~OperationItemTrades() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.OperationItemTrades)
  SharedDtor(*this);
}
inline void OperationItemTrades::SharedDtor(MessageLite& self) {
  OperationItemTrades& this_ = static_cast<OperationItemTrades&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* OperationItemTrades::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OperationItemTrades(arena);
}
constexpr auto OperationItemTrades::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OperationItemTrades, _impl_.trades_) +
          decltype(OperationItemTrades::_impl_.trades_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(OperationItemTrades), alignof(OperationItemTrades), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OperationItemTrades::PlacementNew_,
                                 sizeof(OperationItemTrades),
                                 alignof(OperationItemTrades));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OperationItemTrades::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OperationItemTrades_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OperationItemTrades::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OperationItemTrades>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OperationItemTrades::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OperationItemTrades>(), &OperationItemTrades::ByteSizeLong,
            &OperationItemTrades::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OperationItemTrades, _impl_._cached_size_),
        false,
    },
    &OperationItemTrades::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OperationItemTrades::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> OperationItemTrades::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967263,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::OperationItemTrades>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.OperationItemTrade trades = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItemTrades, _impl_.trades_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.OperationItemTrade trades = 6;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrades, _impl_.trades_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::OperationItemTrade>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void OperationItemTrades::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.OperationItemTrades)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trades_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OperationItemTrades::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OperationItemTrades& this_ = static_cast<const OperationItemTrades&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OperationItemTrades::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OperationItemTrades& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.OperationItemTrades)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.pub.invest.api.contract.v1.OperationItemTrade trades = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_trades_size());
               i < n; i++) {
            const auto& repfield = this_._internal_trades().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.OperationItemTrades)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OperationItemTrades::ByteSizeLong(const MessageLite& base) {
          const OperationItemTrades& this_ = static_cast<const OperationItemTrades&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OperationItemTrades::ByteSizeLong() const {
          const OperationItemTrades& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.OperationItemTrades)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.OperationItemTrade trades = 6;
            {
              total_size += 1UL * this_._internal_trades_size();
              for (const auto& msg : this_._internal_trades()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OperationItemTrades::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationItemTrades*>(&to_msg);
  auto& from = static_cast<const OperationItemTrades&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.OperationItemTrades)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trades()->MergeFrom(
      from._internal_trades());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationItemTrades::CopyFrom(const OperationItemTrades& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.OperationItemTrades)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationItemTrades::InternalSwap(OperationItemTrades* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trades_.InternalSwap(&other->_impl_.trades_);
}

::google::protobuf::Metadata OperationItemTrades::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OperationItemTrade::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OperationItemTrade>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_._has_bits_);
};

void OperationItemTrade::clear_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.date_ != nullptr) _impl_.date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OperationItemTrade::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OperationItemTrade::clear_yield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.yield_ != nullptr) _impl_.yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void OperationItemTrade::clear_yield_relative() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.yield_relative_ != nullptr) _impl_.yield_relative_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
OperationItemTrade::OperationItemTrade(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.OperationItemTrade)
}
inline PROTOBUF_NDEBUG_INLINE OperationItemTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::OperationItemTrade& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        num_(arena, from.num_) {}

OperationItemTrade::OperationItemTrade(
    ::google::protobuf::Arena* arena,
    const OperationItemTrade& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OperationItemTrade* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.date_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.date_)
                        : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.price_)
                        : nullptr;
  _impl_.yield_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.yield_)
                        : nullptr;
  _impl_.yield_relative_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.yield_relative_)
                        : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.OperationItemTrade)
}
inline PROTOBUF_NDEBUG_INLINE OperationItemTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        num_(arena) {}

inline void OperationItemTrade::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, date_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, date_) +
               sizeof(Impl_::quantity_));
}
OperationItemTrade::~OperationItemTrade() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.OperationItemTrade)
  SharedDtor(*this);
}
inline void OperationItemTrade::SharedDtor(MessageLite& self) {
  OperationItemTrade& this_ = static_cast<OperationItemTrade&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.num_.Destroy();
  delete this_._impl_.date_;
  delete this_._impl_.price_;
  delete this_._impl_.yield_;
  delete this_._impl_.yield_relative_;
  this_._impl_.~Impl_();
}

inline void* OperationItemTrade::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OperationItemTrade(arena);
}
constexpr auto OperationItemTrade::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OperationItemTrade),
                                            alignof(OperationItemTrade));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OperationItemTrade::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OperationItemTrade_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OperationItemTrade::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OperationItemTrade>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OperationItemTrade::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OperationItemTrade>(), &OperationItemTrade::ByteSizeLong,
            &OperationItemTrade::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_._cached_size_),
        false,
    },
    &OperationItemTrade::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OperationItemTrade::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 65, 2> OperationItemTrade::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_._has_bits_),
    0, // no _extensions_
    22, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4291787742,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::OperationItemTrade>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 1, 1, PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.price_)}},
    // string num = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.num_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 quantity = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OperationItemTrade, _impl_.quantity_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.quantity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue yield = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 2, 2, PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.yield_)}},
    // .google.protobuf.Timestamp date = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.date_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string num = 1;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.num_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp date = 6;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.date_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 11;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 16;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue yield = 21;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.yield_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation yield_relative = 22;
    {PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.yield_relative_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\65\3\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.OperationItemTrade"
    "num"
  }},
};

PROTOBUF_NOINLINE void OperationItemTrade::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.OperationItemTrade)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.num_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.date_ != nullptr);
      _impl_.date_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.yield_ != nullptr);
      _impl_.yield_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.yield_relative_ != nullptr);
      _impl_.yield_relative_->Clear();
    }
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OperationItemTrade::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OperationItemTrade& this_ = static_cast<const OperationItemTrade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OperationItemTrade::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OperationItemTrade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.OperationItemTrade)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string num = 1;
          if (!this_._internal_num().empty()) {
            const std::string& _s = this_._internal_num();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.OperationItemTrade.num");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp date = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.date_, this_._impl_.date_->GetCachedSize(), target,
                stream);
          }

          // int64 quantity = 11;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<11>(
                    stream, this_._internal_quantity(), target);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 16;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                16, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue yield = 21;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                21, *this_._impl_.yield_, this_._impl_.yield_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation yield_relative = 22;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                22, *this_._impl_.yield_relative_, this_._impl_.yield_relative_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.OperationItemTrade)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OperationItemTrade::ByteSizeLong(const MessageLite& base) {
          const OperationItemTrade& this_ = static_cast<const OperationItemTrade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OperationItemTrade::ByteSizeLong() const {
          const OperationItemTrade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.OperationItemTrade)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string num = 1;
            if (!this_._internal_num().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_num());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .google.protobuf.Timestamp date = 6;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.date_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue price = 16;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue yield = 21;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.yield_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation yield_relative = 22;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.yield_relative_);
            }
          }
           {
            // int64 quantity = 11;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OperationItemTrade::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OperationItemTrade*>(&to_msg);
  auto& from = static_cast<const OperationItemTrade&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.OperationItemTrade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_num().empty()) {
    _this->_internal_set_num(from._internal_num());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.date_ != nullptr);
      if (_this->_impl_.date_ == nullptr) {
        _this->_impl_.date_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.date_);
      } else {
        _this->_impl_.date_->MergeFrom(*from._impl_.date_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.yield_ != nullptr);
      if (_this->_impl_.yield_ == nullptr) {
        _this->_impl_.yield_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.yield_);
      } else {
        _this->_impl_.yield_->MergeFrom(*from._impl_.yield_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.yield_relative_ != nullptr);
      if (_this->_impl_.yield_relative_ == nullptr) {
        _this->_impl_.yield_relative_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.yield_relative_);
      } else {
        _this->_impl_.yield_relative_->MergeFrom(*from._impl_.yield_relative_);
      }
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OperationItemTrade::CopyFrom(const OperationItemTrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.OperationItemTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OperationItemTrade::InternalSwap(OperationItemTrade* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.num_, &other->_impl_.num_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.quantity_)
      + sizeof(OperationItemTrade::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(OperationItemTrade, _impl_.date_)>(
          reinterpret_cast<char*>(&_impl_.date_),
          reinterpret_cast<char*>(&other->_impl_.date_));
}

::google::protobuf::Metadata OperationItemTrade::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionsStreamRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PositionsStreamRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_._has_bits_);
};

void PositionsStreamRequest::clear_ping_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ping_settings_ != nullptr) _impl_.ping_settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PositionsStreamRequest::PositionsStreamRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PositionsStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE PositionsStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PositionsStreamRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accounts_{visibility, arena, from.accounts_} {}

PositionsStreamRequest::PositionsStreamRequest(
    ::google::protobuf::Arena* arena,
    const PositionsStreamRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionsStreamRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ping_settings_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PingDelaySettings>(
                              arena, *from._impl_.ping_settings_)
                        : nullptr;
  _impl_.with_initial_positions_ = from._impl_.with_initial_positions_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PositionsStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE PositionsStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        accounts_{visibility, arena} {}

inline void PositionsStreamRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ping_settings_),
           0,
           offsetof(Impl_, with_initial_positions_) -
               offsetof(Impl_, ping_settings_) +
               sizeof(Impl_::with_initial_positions_));
}
PositionsStreamRequest::~PositionsStreamRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PositionsStreamRequest)
  SharedDtor(*this);
}
inline void PositionsStreamRequest::SharedDtor(MessageLite& self) {
  PositionsStreamRequest& this_ = static_cast<PositionsStreamRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ping_settings_;
  this_._impl_.~Impl_();
}

inline void* PositionsStreamRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionsStreamRequest(arena);
}
constexpr auto PositionsStreamRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_.accounts_) +
          decltype(PositionsStreamRequest::_impl_.accounts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PositionsStreamRequest), alignof(PositionsStreamRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PositionsStreamRequest::PlacementNew_,
                                 sizeof(PositionsStreamRequest),
                                 alignof(PositionsStreamRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionsStreamRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionsStreamRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionsStreamRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionsStreamRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionsStreamRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionsStreamRequest>(), &PositionsStreamRequest::ByteSizeLong,
            &PositionsStreamRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_._cached_size_),
        false,
    },
    &PositionsStreamRequest::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionsStreamRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 74, 2> PositionsStreamRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_._has_bits_),
    0, // no _extensions_
    15, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950906,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsStreamRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string accounts = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_.accounts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool with_initial_positions = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PositionsStreamRequest, _impl_.with_initial_positions_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_.with_initial_positions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string accounts = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_.accounts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bool with_initial_positions = 3;
    {PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_.with_initial_positions_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .tinkoff.pub.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
    {PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_.ping_settings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PingDelaySettings>()},
  }}, {{
    "\71\10\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.PositionsStreamRequest"
    "accounts"
  }},
};

PROTOBUF_NOINLINE void PositionsStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PositionsStreamRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ping_settings_ != nullptr);
    _impl_.ping_settings_->Clear();
  }
  _impl_.with_initial_positions_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionsStreamRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionsStreamRequest& this_ = static_cast<const PositionsStreamRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionsStreamRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionsStreamRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PositionsStreamRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string accounts = 1;
          for (int i = 0, n = this_._internal_accounts_size(); i < n; ++i) {
            const auto& s = this_._internal_accounts().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsStreamRequest.accounts");
            target = stream->WriteString(1, s, target);
          }

          // bool with_initial_positions = 3;
          if (this_._internal_with_initial_positions() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_with_initial_positions(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.pub.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.ping_settings_, this_._impl_.ping_settings_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PositionsStreamRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionsStreamRequest::ByteSizeLong(const MessageLite& base) {
          const PositionsStreamRequest& this_ = static_cast<const PositionsStreamRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionsStreamRequest::ByteSizeLong() const {
          const PositionsStreamRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PositionsStreamRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string accounts = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_accounts().size());
              for (int i = 0, n = this_._internal_accounts().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_accounts().Get(i));
              }
            }
          }
           {
            // .tinkoff.pub.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ping_settings_);
            }
          }
           {
            // bool with_initial_positions = 3;
            if (this_._internal_with_initial_positions() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionsStreamRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionsStreamRequest*>(&to_msg);
  auto& from = static_cast<const PositionsStreamRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PositionsStreamRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(from._internal_accounts());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.ping_settings_ != nullptr);
    if (_this->_impl_.ping_settings_ == nullptr) {
      _this->_impl_.ping_settings_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PingDelaySettings>(arena, *from._impl_.ping_settings_);
    } else {
      _this->_impl_.ping_settings_->MergeFrom(*from._impl_.ping_settings_);
    }
  }
  if (from._internal_with_initial_positions() != 0) {
    _this->_impl_.with_initial_positions_ = from._impl_.with_initial_positions_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsStreamRequest::CopyFrom(const PositionsStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PositionsStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionsStreamRequest::InternalSwap(PositionsStreamRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_.with_initial_positions_)
      + sizeof(PositionsStreamRequest::_impl_.with_initial_positions_)
      - PROTOBUF_FIELD_OFFSET(PositionsStreamRequest, _impl_.ping_settings_)>(
          reinterpret_cast<char*>(&_impl_.ping_settings_),
          reinterpret_cast<char*>(&other->_impl_.ping_settings_));
}

::google::protobuf::Metadata PositionsStreamRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionsStreamResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::PositionsStreamResponse, _impl_._oneof_case_);
};

void PositionsStreamResponse::set_allocated_subscriptions(::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionResult* subscriptions) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscriptions) {
    ::google::protobuf::Arena* submessage_arena = subscriptions->GetArena();
    if (message_arena != submessage_arena) {
      subscriptions = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscriptions, submessage_arena);
    }
    set_has_subscriptions();
    _impl_.payload_.subscriptions_ = subscriptions;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse.subscriptions)
}
void PositionsStreamResponse::set_allocated_position(::tinkoff::pub::invest::api::contract::v1::PositionData* position) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (position) {
    ::google::protobuf::Arena* submessage_arena = position->GetArena();
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(message_arena, position, submessage_arena);
    }
    set_has_position();
    _impl_.payload_.position_ = position;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse.position)
}
void PositionsStreamResponse::set_allocated_ping(::tinkoff::pub::invest::api::contract::v1::Ping* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(ping)->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.payload_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse.ping)
}
void PositionsStreamResponse::clear_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kPing) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.ping_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
    }
    clear_has_payload();
  }
}
void PositionsStreamResponse::set_allocated_initial_positions(::tinkoff::pub::invest::api::contract::v1::PositionsResponse* initial_positions) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (initial_positions) {
    ::google::protobuf::Arena* submessage_arena = initial_positions->GetArena();
    if (message_arena != submessage_arena) {
      initial_positions = ::google::protobuf::internal::GetOwnedMessage(message_arena, initial_positions, submessage_arena);
    }
    set_has_initial_positions();
    _impl_.payload_.initial_positions_ = initial_positions;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse.initial_positions)
}
PositionsStreamResponse::PositionsStreamResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionsStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PositionsStreamResponse& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PositionsStreamResponse::PositionsStreamResponse(
    ::google::protobuf::Arena* arena,
    const PositionsStreamResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionsStreamResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kSubscriptions:
        _impl_.payload_.subscriptions_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionResult>(arena, *from._impl_.payload_.subscriptions_);
        break;
      case kPosition:
        _impl_.payload_.position_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PositionData>(arena, *from._impl_.payload_.position_);
        break;
      case kPing:
        _impl_.payload_.ping_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        break;
      case kInitialPositions:
        _impl_.payload_.initial_positions_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PositionsResponse>(arena, *from._impl_.payload_.initial_positions_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE PositionsStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PositionsStreamResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PositionsStreamResponse::~PositionsStreamResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse)
  SharedDtor(*this);
}
inline void PositionsStreamResponse::SharedDtor(MessageLite& self) {
  PositionsStreamResponse& this_ = static_cast<PositionsStreamResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void PositionsStreamResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kSubscriptions: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscriptions_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscriptions_);
      }
      break;
    }
    case kPosition: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.position_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.position_);
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.ping_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
      }
      break;
    }
    case kInitialPositions: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.initial_positions_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.initial_positions_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* PositionsStreamResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionsStreamResponse(arena);
}
constexpr auto PositionsStreamResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PositionsStreamResponse),
                                            alignof(PositionsStreamResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionsStreamResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionsStreamResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionsStreamResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionsStreamResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionsStreamResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionsStreamResponse>(), &PositionsStreamResponse::ByteSizeLong,
            &PositionsStreamResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionsStreamResponse, _impl_._cached_size_),
        false,
    },
    &PositionsStreamResponse::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionsStreamResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2> PositionsStreamResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsStreamResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult subscriptions = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsStreamResponse, _impl_.payload_.subscriptions_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.PositionData position = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsStreamResponse, _impl_.payload_.position_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Ping ping = 3;
    {PROTOBUF_FIELD_OFFSET(PositionsStreamResponse, _impl_.payload_.ping_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.PositionsResponse initial_positions = 5;
    {PROTOBUF_FIELD_OFFSET(PositionsStreamResponse, _impl_.payload_.initial_positions_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionResult>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionData>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Ping>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PositionsStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionsStreamResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionsStreamResponse& this_ = static_cast<const PositionsStreamResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionsStreamResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionsStreamResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            case kSubscriptions: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.payload_.subscriptions_, this_._impl_.payload_.subscriptions_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPosition: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.payload_.position_, this_._impl_.payload_.position_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPing: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.payload_.ping_, this_._impl_.payload_.ping_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kInitialPositions: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.payload_.initial_positions_, this_._impl_.payload_.initial_positions_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionsStreamResponse::ByteSizeLong(const MessageLite& base) {
          const PositionsStreamResponse& this_ = static_cast<const PositionsStreamResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionsStreamResponse::ByteSizeLong() const {
          const PositionsStreamResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            // .tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult subscriptions = 1;
            case kSubscriptions: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscriptions_);
              break;
            }
            // .tinkoff.pub.invest.api.contract.v1.PositionData position = 2;
            case kPosition: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.position_);
              break;
            }
            // .tinkoff.pub.invest.api.contract.v1.Ping ping = 3;
            case kPing: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.ping_);
              break;
            }
            // .tinkoff.pub.invest.api.contract.v1.PositionsResponse initial_positions = 5;
            case kInitialPositions: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.initial_positions_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionsStreamResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionsStreamResponse*>(&to_msg);
  auto& from = static_cast<const PositionsStreamResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSubscriptions: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscriptions_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionResult>(arena, *from._impl_.payload_.subscriptions_);
        } else {
          _this->_impl_.payload_.subscriptions_->MergeFrom(from._internal_subscriptions());
        }
        break;
      }
      case kPosition: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.position_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PositionData>(arena, *from._impl_.payload_.position_);
        } else {
          _this->_impl_.payload_.position_->MergeFrom(from._internal_position());
        }
        break;
      }
      case kPing: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.ping_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        } else {
          _this->_impl_.payload_.ping_->MergeFrom(from._internal_ping());
        }
        break;
      }
      case kInitialPositions: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.initial_positions_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PositionsResponse>(arena, *from._impl_.payload_.initial_positions_);
        } else {
          _this->_impl_.payload_.initial_positions_->MergeFrom(from._internal_initial_positions());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsStreamResponse::CopyFrom(const PositionsStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PositionsStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionsStreamResponse::InternalSwap(PositionsStreamResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PositionsStreamResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionsSubscriptionResult::_Internal {
 public:
};

PositionsSubscriptionResult::PositionsSubscriptionResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSubscriptionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionResult& from_msg)
      : accounts_{visibility, arena, from.accounts_},
        tracking_id_(arena, from.tracking_id_),
        stream_id_(arena, from.stream_id_),
        _cached_size_{0} {}

PositionsSubscriptionResult::PositionsSubscriptionResult(
    ::google::protobuf::Arena* arena,
    const PositionsSubscriptionResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionsSubscriptionResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSubscriptionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accounts_{visibility, arena},
        tracking_id_(arena),
        stream_id_(arena),
        _cached_size_{0} {}

inline void PositionsSubscriptionResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PositionsSubscriptionResult::~PositionsSubscriptionResult() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult)
  SharedDtor(*this);
}
inline void PositionsSubscriptionResult::SharedDtor(MessageLite& self) {
  PositionsSubscriptionResult& this_ = static_cast<PositionsSubscriptionResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tracking_id_.Destroy();
  this_._impl_.stream_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PositionsSubscriptionResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionsSubscriptionResult(arena);
}
constexpr auto PositionsSubscriptionResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PositionsSubscriptionResult, _impl_.accounts_) +
          decltype(PositionsSubscriptionResult::_impl_.accounts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PositionsSubscriptionResult), alignof(PositionsSubscriptionResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PositionsSubscriptionResult::PlacementNew_,
                                 sizeof(PositionsSubscriptionResult),
                                 alignof(PositionsSubscriptionResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionsSubscriptionResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionsSubscriptionResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionsSubscriptionResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionsSubscriptionResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionsSubscriptionResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionsSubscriptionResult>(), &PositionsSubscriptionResult::ByteSizeLong,
            &PositionsSubscriptionResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionsSubscriptionResult, _impl_._cached_size_),
        false,
    },
    &PositionsSubscriptionResult::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionsSubscriptionResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 91, 2> PositionsSubscriptionResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967102,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string stream_id = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSubscriptionResult, _impl_.stream_id_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus accounts = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSubscriptionResult, _impl_.accounts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string tracking_id = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSubscriptionResult, _impl_.tracking_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus accounts = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsSubscriptionResult, _impl_.accounts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string tracking_id = 7;
    {PROTOBUF_FIELD_OFFSET(PositionsSubscriptionResult, _impl_.tracking_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string stream_id = 8;
    {PROTOBUF_FIELD_OFFSET(PositionsSubscriptionResult, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionStatus>()},
  }}, {{
    "\76\0\13\11\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult"
    "tracking_id"
    "stream_id"
  }},
};

PROTOBUF_NOINLINE void PositionsSubscriptionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _impl_.tracking_id_.ClearToEmpty();
  _impl_.stream_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionsSubscriptionResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionsSubscriptionResult& this_ = static_cast<const PositionsSubscriptionResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionsSubscriptionResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionsSubscriptionResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus accounts = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_accounts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_accounts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string tracking_id = 7;
          if (!this_._internal_tracking_id().empty()) {
            const std::string& _s = this_._internal_tracking_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult.tracking_id");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string stream_id = 8;
          if (!this_._internal_stream_id().empty()) {
            const std::string& _s = this_._internal_stream_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult.stream_id");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionsSubscriptionResult::ByteSizeLong(const MessageLite& base) {
          const PositionsSubscriptionResult& this_ = static_cast<const PositionsSubscriptionResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionsSubscriptionResult::ByteSizeLong() const {
          const PositionsSubscriptionResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus accounts = 1;
            {
              total_size += 1UL * this_._internal_accounts_size();
              for (const auto& msg : this_._internal_accounts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string tracking_id = 7;
            if (!this_._internal_tracking_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tracking_id());
            }
            // string stream_id = 8;
            if (!this_._internal_stream_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stream_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionsSubscriptionResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionsSubscriptionResult*>(&to_msg);
  auto& from = static_cast<const PositionsSubscriptionResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(
      from._internal_accounts());
  if (!from._internal_tracking_id().empty()) {
    _this->_internal_set_tracking_id(from._internal_tracking_id());
  }
  if (!from._internal_stream_id().empty()) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsSubscriptionResult::CopyFrom(const PositionsSubscriptionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionsSubscriptionResult::InternalSwap(PositionsSubscriptionResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tracking_id_, &other->_impl_.tracking_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stream_id_, &other->_impl_.stream_id_, arena);
}

::google::protobuf::Metadata PositionsSubscriptionResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionsSubscriptionStatus::_Internal {
 public:
};

PositionsSubscriptionStatus::PositionsSubscriptionStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSubscriptionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionStatus& from_msg)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

PositionsSubscriptionStatus::PositionsSubscriptionStatus(
    ::google::protobuf::Arena* arena,
    const PositionsSubscriptionStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionsSubscriptionStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.subscription_status_ = from._impl_.subscription_status_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus)
}
inline PROTOBUF_NDEBUG_INLINE PositionsSubscriptionStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void PositionsSubscriptionStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscription_status_ = {};
}
PositionsSubscriptionStatus::~PositionsSubscriptionStatus() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus)
  SharedDtor(*this);
}
inline void PositionsSubscriptionStatus::SharedDtor(MessageLite& self) {
  PositionsSubscriptionStatus& this_ = static_cast<PositionsSubscriptionStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PositionsSubscriptionStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionsSubscriptionStatus(arena);
}
constexpr auto PositionsSubscriptionStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PositionsSubscriptionStatus),
                                            alignof(PositionsSubscriptionStatus));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionsSubscriptionStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionsSubscriptionStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionsSubscriptionStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionsSubscriptionStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionsSubscriptionStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionsSubscriptionStatus>(), &PositionsSubscriptionStatus::ByteSizeLong,
            &PositionsSubscriptionStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionsSubscriptionStatus, _impl_._cached_size_),
        false,
    },
    &PositionsSubscriptionStatus::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionsSubscriptionStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 81, 2> PositionsSubscriptionStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967262,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsSubscriptionStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.pub.invest.api.contract.v1.PositionsAccountSubscriptionStatus subscription_status = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PositionsSubscriptionStatus, _impl_.subscription_status_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSubscriptionStatus, _impl_.subscription_status_)}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionsSubscriptionStatus, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsSubscriptionStatus, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.PositionsAccountSubscriptionStatus subscription_status = 6;
    {PROTOBUF_FIELD_OFFSET(PositionsSubscriptionStatus, _impl_.subscription_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\76\12\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void PositionsSubscriptionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.subscription_status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionsSubscriptionStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionsSubscriptionStatus& this_ = static_cast<const PositionsSubscriptionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionsSubscriptionStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionsSubscriptionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1;
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.PositionsAccountSubscriptionStatus subscription_status = 6;
          if (this_._internal_subscription_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_subscription_status(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionsSubscriptionStatus::ByteSizeLong(const MessageLite& base) {
          const PositionsSubscriptionStatus& this_ = static_cast<const PositionsSubscriptionStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionsSubscriptionStatus::ByteSizeLong() const {
          const PositionsSubscriptionStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account_id = 1;
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // .tinkoff.pub.invest.api.contract.v1.PositionsAccountSubscriptionStatus subscription_status = 6;
            if (this_._internal_subscription_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionsSubscriptionStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionsSubscriptionStatus*>(&to_msg);
  auto& from = static_cast<const PositionsSubscriptionStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (from._internal_subscription_status() != 0) {
    _this->_impl_.subscription_status_ = from._impl_.subscription_status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsSubscriptionStatus::CopyFrom(const PositionsSubscriptionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PositionsSubscriptionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionsSubscriptionStatus::InternalSwap(PositionsSubscriptionStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  swap(_impl_.subscription_status_, other->_impl_.subscription_status_);
}

::google::protobuf::Metadata PositionsSubscriptionStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PositionData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PositionData, _impl_._has_bits_);
};

void PositionData::clear_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.date_ != nullptr) _impl_.date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PositionData::PositionData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PositionData)
}
inline PROTOBUF_NDEBUG_INLINE PositionData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PositionData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        money_{visibility, arena, from.money_},
        securities_{visibility, arena, from.securities_},
        futures_{visibility, arena, from.futures_},
        options_{visibility, arena, from.options_},
        account_id_(arena, from.account_id_) {}

PositionData::PositionData(
    ::google::protobuf::Arena* arena,
    const PositionData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.date_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.date_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PositionData)
}
inline PROTOBUF_NDEBUG_INLINE PositionData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        money_{visibility, arena},
        securities_{visibility, arena},
        futures_{visibility, arena},
        options_{visibility, arena},
        account_id_(arena) {}

inline void PositionData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.date_ = {};
}
PositionData::~PositionData() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PositionData)
  SharedDtor(*this);
}
inline void PositionData::SharedDtor(MessageLite& self) {
  PositionData& this_ = static_cast<PositionData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  delete this_._impl_.date_;
  this_._impl_.~Impl_();
}

inline void* PositionData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionData(arena);
}
constexpr auto PositionData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PositionData, _impl_.money_) +
          decltype(PositionData::_impl_.money_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PositionData, _impl_.securities_) +
          decltype(PositionData::_impl_.securities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PositionData, _impl_.futures_) +
          decltype(PositionData::_impl_.futures_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(PositionData, _impl_.options_) +
          decltype(PositionData::_impl_.options_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PositionData), alignof(PositionData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PositionData::PlacementNew_,
                                 sizeof(PositionData),
                                 alignof(PositionData));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionData>(), &PositionData::ByteSizeLong,
            &PositionData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionData, _impl_._cached_size_),
        false,
    },
    &PositionData::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 5, 66, 2> PositionData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionData, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.account_id_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsMoney money = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.money_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSecurities securities = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.securities_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsFutures futures = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.futures_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsOptions options = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.options_)}},
    // .google.protobuf.Timestamp date = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 4, PROTOBUF_FIELD_OFFSET(PositionData, _impl_.date_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsMoney money = 2;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.money_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSecurities securities = 3;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.securities_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsFutures futures = 4;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.futures_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.pub.invest.api.contract.v1.PositionsOptions options = 5;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.options_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp date = 6;
    {PROTOBUF_FIELD_OFFSET(PositionData, _impl_.date_), _Internal::kHasBitsOffset + 0, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsMoney>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsSecurities>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsFutures>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsOptions>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\57\12\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.PositionData"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void PositionData::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PositionData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.money_.Clear();
  _impl_.securities_.Clear();
  _impl_.futures_.Clear();
  _impl_.options_.Clear();
  _impl_.account_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.date_ != nullptr);
    _impl_.date_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionData& this_ = static_cast<const PositionData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PositionData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1;
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.PositionData.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.PositionsMoney money = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_money_size());
               i < n; i++) {
            const auto& repfield = this_._internal_money().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSecurities securities = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_securities_size());
               i < n; i++) {
            const auto& repfield = this_._internal_securities().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.PositionsFutures futures = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_futures_size());
               i < n; i++) {
            const auto& repfield = this_._internal_futures().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tinkoff.pub.invest.api.contract.v1.PositionsOptions options = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_options_size());
               i < n; i++) {
            const auto& repfield = this_._internal_options().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp date = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.date_, this_._impl_.date_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PositionData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionData::ByteSizeLong(const MessageLite& base) {
          const PositionData& this_ = static_cast<const PositionData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionData::ByteSizeLong() const {
          const PositionData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PositionData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.PositionsMoney money = 2;
            {
              total_size += 1UL * this_._internal_money_size();
              for (const auto& msg : this_._internal_money()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.pub.invest.api.contract.v1.PositionsSecurities securities = 3;
            {
              total_size += 1UL * this_._internal_securities_size();
              for (const auto& msg : this_._internal_securities()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.pub.invest.api.contract.v1.PositionsFutures futures = 4;
            {
              total_size += 1UL * this_._internal_futures_size();
              for (const auto& msg : this_._internal_futures()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.pub.invest.api.contract.v1.PositionsOptions options = 5;
            {
              total_size += 1UL * this_._internal_options_size();
              for (const auto& msg : this_._internal_options()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string account_id = 1;
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
          }
           {
            // .google.protobuf.Timestamp date = 6;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.date_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionData*>(&to_msg);
  auto& from = static_cast<const PositionData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PositionData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_money()->MergeFrom(
      from._internal_money());
  _this->_internal_mutable_securities()->MergeFrom(
      from._internal_securities());
  _this->_internal_mutable_futures()->MergeFrom(
      from._internal_futures());
  _this->_internal_mutable_options()->MergeFrom(
      from._internal_options());
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.date_ != nullptr);
    if (_this->_impl_.date_ == nullptr) {
      _this->_impl_.date_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.date_);
    } else {
      _this->_impl_.date_->MergeFrom(*from._impl_.date_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionData::CopyFrom(const PositionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PositionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionData::InternalSwap(PositionData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.money_.InternalSwap(&other->_impl_.money_);
  _impl_.securities_.InternalSwap(&other->_impl_.securities_);
  _impl_.futures_.InternalSwap(&other->_impl_.futures_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  swap(_impl_.date_, other->_impl_.date_);
}

::google::protobuf::Metadata PositionData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionsMoney::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PositionsMoney>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_._has_bits_);
};

void PositionsMoney::clear_available_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.available_value_ != nullptr) _impl_.available_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PositionsMoney::clear_blocked_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.blocked_value_ != nullptr) _impl_.blocked_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PositionsMoney::PositionsMoney(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.PositionsMoney)
}
inline PROTOBUF_NDEBUG_INLINE PositionsMoney::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::PositionsMoney& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PositionsMoney::PositionsMoney(
    ::google::protobuf::Arena* arena,
    const PositionsMoney& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionsMoney* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.available_value_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.available_value_)
                        : nullptr;
  _impl_.blocked_value_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.blocked_value_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.PositionsMoney)
}
inline PROTOBUF_NDEBUG_INLINE PositionsMoney::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PositionsMoney::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, available_value_),
           0,
           offsetof(Impl_, blocked_value_) -
               offsetof(Impl_, available_value_) +
               sizeof(Impl_::blocked_value_));
}
PositionsMoney::~PositionsMoney() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.PositionsMoney)
  SharedDtor(*this);
}
inline void PositionsMoney::SharedDtor(MessageLite& self) {
  PositionsMoney& this_ = static_cast<PositionsMoney&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.available_value_;
  delete this_._impl_.blocked_value_;
  this_._impl_.~Impl_();
}

inline void* PositionsMoney::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionsMoney(arena);
}
constexpr auto PositionsMoney::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PositionsMoney),
                                            alignof(PositionsMoney));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionsMoney::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionsMoney_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionsMoney::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionsMoney>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionsMoney::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionsMoney>(), &PositionsMoney::ByteSizeLong,
            &PositionsMoney::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_._cached_size_),
        false,
    },
    &PositionsMoney::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionsMoney::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PositionsMoney::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PositionsMoney>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked_value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.blocked_value_)}},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue available_value = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.available_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue available_value = 1;
    {PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.available_value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked_value = 2;
    {PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.blocked_value_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PositionsMoney::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.PositionsMoney)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.available_value_ != nullptr);
      _impl_.available_value_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.blocked_value_ != nullptr);
      _impl_.blocked_value_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionsMoney::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionsMoney& this_ = static_cast<const PositionsMoney&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionsMoney::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionsMoney& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.PositionsMoney)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.pub.invest.api.contract.v1.MoneyValue available_value = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.available_value_, this_._impl_.available_value_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked_value = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.blocked_value_, this_._impl_.blocked_value_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.PositionsMoney)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionsMoney::ByteSizeLong(const MessageLite& base) {
          const PositionsMoney& this_ = static_cast<const PositionsMoney&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionsMoney::ByteSizeLong() const {
          const PositionsMoney& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.PositionsMoney)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue available_value = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.available_value_);
            }
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue blocked_value = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.blocked_value_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionsMoney::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionsMoney*>(&to_msg);
  auto& from = static_cast<const PositionsMoney&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.PositionsMoney)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.available_value_ != nullptr);
      if (_this->_impl_.available_value_ == nullptr) {
        _this->_impl_.available_value_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.available_value_);
      } else {
        _this->_impl_.available_value_->MergeFrom(*from._impl_.available_value_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.blocked_value_ != nullptr);
      if (_this->_impl_.blocked_value_ == nullptr) {
        _this->_impl_.blocked_value_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.blocked_value_);
      } else {
        _this->_impl_.blocked_value_->MergeFrom(*from._impl_.blocked_value_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionsMoney::CopyFrom(const PositionsMoney& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.PositionsMoney)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionsMoney::InternalSwap(PositionsMoney* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.blocked_value_)
      + sizeof(PositionsMoney::_impl_.blocked_value_)
      - PROTOBUF_FIELD_OFFSET(PositionsMoney, _impl_.available_value_)>(
          reinterpret_cast<char*>(&_impl_.available_value_),
          reinterpret_cast<char*>(&other->_impl_.available_value_));
}

::google::protobuf::Metadata PositionsMoney::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChildOperationItem::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ChildOperationItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChildOperationItem, _impl_._has_bits_);
};

void ChildOperationItem::clear_payment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payment_ != nullptr) _impl_.payment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ChildOperationItem::ChildOperationItem(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.ChildOperationItem)
}
inline PROTOBUF_NDEBUG_INLINE ChildOperationItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::ChildOperationItem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        instrument_uid_(arena, from.instrument_uid_) {}

ChildOperationItem::ChildOperationItem(
    ::google::protobuf::Arena* arena,
    const ChildOperationItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChildOperationItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.payment_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.payment_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.ChildOperationItem)
}
inline PROTOBUF_NDEBUG_INLINE ChildOperationItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        instrument_uid_(arena) {}

inline void ChildOperationItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.payment_ = {};
}
ChildOperationItem::~ChildOperationItem() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.ChildOperationItem)
  SharedDtor(*this);
}
inline void ChildOperationItem::SharedDtor(MessageLite& self) {
  ChildOperationItem& this_ = static_cast<ChildOperationItem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.payment_;
  this_._impl_.~Impl_();
}

inline void* ChildOperationItem::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ChildOperationItem(arena);
}
constexpr auto ChildOperationItem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ChildOperationItem),
                                            alignof(ChildOperationItem));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ChildOperationItem::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ChildOperationItem_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ChildOperationItem::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ChildOperationItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ChildOperationItem::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ChildOperationItem>(), &ChildOperationItem::ByteSizeLong,
            &ChildOperationItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ChildOperationItem, _impl_._cached_size_),
        false,
    },
    &ChildOperationItem::kDescriptorMethods,
    &descriptor_table_operations_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ChildOperationItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 76, 2> ChildOperationItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChildOperationItem, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::ChildOperationItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ChildOperationItem, _impl_.payment_)}},
    // string instrument_uid = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ChildOperationItem, _impl_.instrument_uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string instrument_uid = 1;
    {PROTOBUF_FIELD_OFFSET(ChildOperationItem, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 2;
    {PROTOBUF_FIELD_OFFSET(ChildOperationItem, _impl_.payment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::MoneyValue>()},
  }}, {{
    "\65\16\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.ChildOperationItem"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void ChildOperationItem::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.ChildOperationItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.payment_ != nullptr);
    _impl_.payment_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ChildOperationItem::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ChildOperationItem& this_ = static_cast<const ChildOperationItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ChildOperationItem::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ChildOperationItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.ChildOperationItem)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string instrument_uid = 1;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.ChildOperationItem.instrument_uid");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.payment_, this_._impl_.payment_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.ChildOperationItem)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ChildOperationItem::ByteSizeLong(const MessageLite& base) {
          const ChildOperationItem& this_ = static_cast<const ChildOperationItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ChildOperationItem::ByteSizeLong() const {
          const ChildOperationItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.ChildOperationItem)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string instrument_uid = 1;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
           {
            // .tinkoff.pub.invest.api.contract.v1.MoneyValue payment = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payment_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ChildOperationItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChildOperationItem*>(&to_msg);
  auto& from = static_cast<const ChildOperationItem&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.ChildOperationItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.payment_ != nullptr);
    if (_this->_impl_.payment_ == nullptr) {
      _this->_impl_.payment_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.payment_);
    } else {
      _this->_impl_.payment_->MergeFrom(*from._impl_.payment_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChildOperationItem::CopyFrom(const ChildOperationItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.ChildOperationItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChildOperationItem::InternalSwap(ChildOperationItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  swap(_impl_.payment_, other->_impl_.payment_);
}

::google::protobuf::Metadata ChildOperationItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace pub
}  // namespace tinkoff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_operations_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
