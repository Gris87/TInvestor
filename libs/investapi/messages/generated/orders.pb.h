// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: orders.proto
// Protobuf C++ Version: 5.29.3

#ifndef orders_2eproto_2epb_2eh
#define orders_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "google/api/field_behavior.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_orders_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_orders_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_orders_2eproto;
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
class CancelOrderRequest;
struct CancelOrderRequestDefaultTypeInternal;
extern CancelOrderRequestDefaultTypeInternal _CancelOrderRequest_default_instance_;
class CancelOrderResponse;
struct CancelOrderResponseDefaultTypeInternal;
extern CancelOrderResponseDefaultTypeInternal _CancelOrderResponse_default_instance_;
class GetMaxLotsRequest;
struct GetMaxLotsRequestDefaultTypeInternal;
extern GetMaxLotsRequestDefaultTypeInternal _GetMaxLotsRequest_default_instance_;
class GetMaxLotsResponse;
struct GetMaxLotsResponseDefaultTypeInternal;
extern GetMaxLotsResponseDefaultTypeInternal _GetMaxLotsResponse_default_instance_;
class GetMaxLotsResponse_BuyLimitsView;
struct GetMaxLotsResponse_BuyLimitsViewDefaultTypeInternal;
extern GetMaxLotsResponse_BuyLimitsViewDefaultTypeInternal _GetMaxLotsResponse_BuyLimitsView_default_instance_;
class GetMaxLotsResponse_SellLimitsView;
struct GetMaxLotsResponse_SellLimitsViewDefaultTypeInternal;
extern GetMaxLotsResponse_SellLimitsViewDefaultTypeInternal _GetMaxLotsResponse_SellLimitsView_default_instance_;
class GetOrderPriceRequest;
struct GetOrderPriceRequestDefaultTypeInternal;
extern GetOrderPriceRequestDefaultTypeInternal _GetOrderPriceRequest_default_instance_;
class GetOrderPriceResponse;
struct GetOrderPriceResponseDefaultTypeInternal;
extern GetOrderPriceResponseDefaultTypeInternal _GetOrderPriceResponse_default_instance_;
class GetOrderPriceResponse_ExtraBond;
struct GetOrderPriceResponse_ExtraBondDefaultTypeInternal;
extern GetOrderPriceResponse_ExtraBondDefaultTypeInternal _GetOrderPriceResponse_ExtraBond_default_instance_;
class GetOrderPriceResponse_ExtraFuture;
struct GetOrderPriceResponse_ExtraFutureDefaultTypeInternal;
extern GetOrderPriceResponse_ExtraFutureDefaultTypeInternal _GetOrderPriceResponse_ExtraFuture_default_instance_;
class GetOrderStateRequest;
struct GetOrderStateRequestDefaultTypeInternal;
extern GetOrderStateRequestDefaultTypeInternal _GetOrderStateRequest_default_instance_;
class GetOrdersRequest;
struct GetOrdersRequestDefaultTypeInternal;
extern GetOrdersRequestDefaultTypeInternal _GetOrdersRequest_default_instance_;
class GetOrdersResponse;
struct GetOrdersResponseDefaultTypeInternal;
extern GetOrdersResponseDefaultTypeInternal _GetOrdersResponse_default_instance_;
class OrderStage;
struct OrderStageDefaultTypeInternal;
extern OrderStageDefaultTypeInternal _OrderStage_default_instance_;
class OrderState;
struct OrderStateDefaultTypeInternal;
extern OrderStateDefaultTypeInternal _OrderState_default_instance_;
class OrderStateStreamRequest;
struct OrderStateStreamRequestDefaultTypeInternal;
extern OrderStateStreamRequestDefaultTypeInternal _OrderStateStreamRequest_default_instance_;
class OrderStateStreamResponse;
struct OrderStateStreamResponseDefaultTypeInternal;
extern OrderStateStreamResponseDefaultTypeInternal _OrderStateStreamResponse_default_instance_;
class OrderStateStreamResponse_OrderState;
struct OrderStateStreamResponse_OrderStateDefaultTypeInternal;
extern OrderStateStreamResponse_OrderStateDefaultTypeInternal _OrderStateStreamResponse_OrderState_default_instance_;
class OrderTrade;
struct OrderTradeDefaultTypeInternal;
extern OrderTradeDefaultTypeInternal _OrderTrade_default_instance_;
class OrderTrades;
struct OrderTradesDefaultTypeInternal;
extern OrderTradesDefaultTypeInternal _OrderTrades_default_instance_;
class PostOrderAsyncRequest;
struct PostOrderAsyncRequestDefaultTypeInternal;
extern PostOrderAsyncRequestDefaultTypeInternal _PostOrderAsyncRequest_default_instance_;
class PostOrderAsyncResponse;
struct PostOrderAsyncResponseDefaultTypeInternal;
extern PostOrderAsyncResponseDefaultTypeInternal _PostOrderAsyncResponse_default_instance_;
class PostOrderRequest;
struct PostOrderRequestDefaultTypeInternal;
extern PostOrderRequestDefaultTypeInternal _PostOrderRequest_default_instance_;
class PostOrderResponse;
struct PostOrderResponseDefaultTypeInternal;
extern PostOrderResponseDefaultTypeInternal _PostOrderResponse_default_instance_;
class ReplaceOrderRequest;
struct ReplaceOrderRequestDefaultTypeInternal;
extern ReplaceOrderRequestDefaultTypeInternal _ReplaceOrderRequest_default_instance_;
class SubscriptionResponse;
struct SubscriptionResponseDefaultTypeInternal;
extern SubscriptionResponseDefaultTypeInternal _SubscriptionResponse_default_instance_;
class TradesStreamRequest;
struct TradesStreamRequestDefaultTypeInternal;
extern TradesStreamRequestDefaultTypeInternal _TradesStreamRequest_default_instance_;
class TradesStreamResponse;
struct TradesStreamResponseDefaultTypeInternal;
extern TradesStreamResponseDefaultTypeInternal _TradesStreamResponse_default_instance_;
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
enum OrderStateStreamResponse_MarkerType : int {
  OrderStateStreamResponse_MarkerType_MARKER_UNKNOWN = 0,
  OrderStateStreamResponse_MarkerType_MARKER_BROKER = 1,
  OrderStateStreamResponse_MarkerType_MARKER_CHAT = 2,
  OrderStateStreamResponse_MarkerType_MARKER_PAPER = 3,
  OrderStateStreamResponse_MarkerType_MARKER_MARGIN = 4,
  OrderStateStreamResponse_MarkerType_MARKER_TKBNM = 5,
  OrderStateStreamResponse_MarkerType_MARKER_SHORT = 6,
  OrderStateStreamResponse_MarkerType_MARKER_SPECMM = 7,
  OrderStateStreamResponse_MarkerType_MARKER_PO = 8,
  OrderStateStreamResponse_MarkerType_OrderStateStreamResponse_MarkerType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OrderStateStreamResponse_MarkerType_OrderStateStreamResponse_MarkerType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OrderStateStreamResponse_MarkerType_IsValid(int value);
extern const uint32_t OrderStateStreamResponse_MarkerType_internal_data_[];
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse_MarkerType_MarkerType_MIN = static_cast<OrderStateStreamResponse_MarkerType>(0);
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse_MarkerType_MarkerType_MAX = static_cast<OrderStateStreamResponse_MarkerType>(8);
constexpr int OrderStateStreamResponse_MarkerType_MarkerType_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
OrderStateStreamResponse_MarkerType_descriptor();
template <typename T>
const std::string& OrderStateStreamResponse_MarkerType_Name(T value) {
  static_assert(std::is_same<T, OrderStateStreamResponse_MarkerType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MarkerType_Name().");
  return OrderStateStreamResponse_MarkerType_Name(static_cast<OrderStateStreamResponse_MarkerType>(value));
}
template <>
inline const std::string& OrderStateStreamResponse_MarkerType_Name(OrderStateStreamResponse_MarkerType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OrderStateStreamResponse_MarkerType_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool OrderStateStreamResponse_MarkerType_Parse(absl::string_view name, OrderStateStreamResponse_MarkerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderStateStreamResponse_MarkerType>(
      OrderStateStreamResponse_MarkerType_descriptor(), name, value);
}
enum OrderStateStreamResponse_StatusCauseInfo : int {
  OrderStateStreamResponse_StatusCauseInfo_CAUSE_UNSPECIFIED = 0,
  OrderStateStreamResponse_StatusCauseInfo_CAUSE_CANCELLED_BY_CLIENT = 15,
  OrderStateStreamResponse_StatusCauseInfo_CAUSE_CANCELLED_BY_EXCHANGE = 1,
  OrderStateStreamResponse_StatusCauseInfo_CAUSE_CANCELLED_NOT_ENOUGH_POSITION = 2,
  OrderStateStreamResponse_StatusCauseInfo_CAUSE_CANCELLED_BY_CLIENT_BLOCK = 3,
  OrderStateStreamResponse_StatusCauseInfo_CAUSE_REJECTED_BY_BROKER = 4,
  OrderStateStreamResponse_StatusCauseInfo_CAUSE_REJECTED_BY_EXCHANGE = 5,
  OrderStateStreamResponse_StatusCauseInfo_CAUSE_CANCELLED_BY_BROKER = 6,
  OrderStateStreamResponse_StatusCauseInfo_OrderStateStreamResponse_StatusCauseInfo_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OrderStateStreamResponse_StatusCauseInfo_OrderStateStreamResponse_StatusCauseInfo_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OrderStateStreamResponse_StatusCauseInfo_IsValid(int value);
extern const uint32_t OrderStateStreamResponse_StatusCauseInfo_internal_data_[];
constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse_StatusCauseInfo_StatusCauseInfo_MIN = static_cast<OrderStateStreamResponse_StatusCauseInfo>(0);
constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse_StatusCauseInfo_StatusCauseInfo_MAX = static_cast<OrderStateStreamResponse_StatusCauseInfo>(15);
constexpr int OrderStateStreamResponse_StatusCauseInfo_StatusCauseInfo_ARRAYSIZE = 15 + 1;
const ::google::protobuf::EnumDescriptor*
OrderStateStreamResponse_StatusCauseInfo_descriptor();
template <typename T>
const std::string& OrderStateStreamResponse_StatusCauseInfo_Name(T value) {
  static_assert(std::is_same<T, OrderStateStreamResponse_StatusCauseInfo>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to StatusCauseInfo_Name().");
  return OrderStateStreamResponse_StatusCauseInfo_Name(static_cast<OrderStateStreamResponse_StatusCauseInfo>(value));
}
template <>
inline const std::string& OrderStateStreamResponse_StatusCauseInfo_Name(OrderStateStreamResponse_StatusCauseInfo value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OrderStateStreamResponse_StatusCauseInfo_descriptor,
                                                 0, 15>(
      static_cast<int>(value));
}
inline bool OrderStateStreamResponse_StatusCauseInfo_Parse(absl::string_view name, OrderStateStreamResponse_StatusCauseInfo* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderStateStreamResponse_StatusCauseInfo>(
      OrderStateStreamResponse_StatusCauseInfo_descriptor(), name, value);
}
enum OrderDirection : int {
  ORDER_DIRECTION_UNSPECIFIED = 0,
  ORDER_DIRECTION_BUY = 1,
  ORDER_DIRECTION_SELL = 2,
  OrderDirection_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OrderDirection_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OrderDirection_IsValid(int value);
extern const uint32_t OrderDirection_internal_data_[];
constexpr OrderDirection OrderDirection_MIN = static_cast<OrderDirection>(0);
constexpr OrderDirection OrderDirection_MAX = static_cast<OrderDirection>(2);
constexpr int OrderDirection_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
OrderDirection_descriptor();
template <typename T>
const std::string& OrderDirection_Name(T value) {
  static_assert(std::is_same<T, OrderDirection>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OrderDirection_Name().");
  return OrderDirection_Name(static_cast<OrderDirection>(value));
}
template <>
inline const std::string& OrderDirection_Name(OrderDirection value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OrderDirection_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool OrderDirection_Parse(absl::string_view name, OrderDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderDirection>(
      OrderDirection_descriptor(), name, value);
}
enum OrderType : int {
  ORDER_TYPE_UNSPECIFIED = 0,
  ORDER_TYPE_LIMIT = 1,
  ORDER_TYPE_MARKET = 2,
  ORDER_TYPE_BESTPRICE = 3,
  OrderType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OrderType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OrderType_IsValid(int value);
extern const uint32_t OrderType_internal_data_[];
constexpr OrderType OrderType_MIN = static_cast<OrderType>(0);
constexpr OrderType OrderType_MAX = static_cast<OrderType>(3);
constexpr int OrderType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
OrderType_descriptor();
template <typename T>
const std::string& OrderType_Name(T value) {
  static_assert(std::is_same<T, OrderType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OrderType_Name().");
  return OrderType_Name(static_cast<OrderType>(value));
}
template <>
inline const std::string& OrderType_Name(OrderType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OrderType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool OrderType_Parse(absl::string_view name, OrderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderType>(
      OrderType_descriptor(), name, value);
}
enum OrderExecutionReportStatus : int {
  EXECUTION_REPORT_STATUS_UNSPECIFIED = 0,
  EXECUTION_REPORT_STATUS_FILL = 1,
  EXECUTION_REPORT_STATUS_REJECTED = 2,
  EXECUTION_REPORT_STATUS_CANCELLED = 3,
  EXECUTION_REPORT_STATUS_NEW = 4,
  EXECUTION_REPORT_STATUS_PARTIALLYFILL = 5,
  OrderExecutionReportStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OrderExecutionReportStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OrderExecutionReportStatus_IsValid(int value);
extern const uint32_t OrderExecutionReportStatus_internal_data_[];
constexpr OrderExecutionReportStatus OrderExecutionReportStatus_MIN = static_cast<OrderExecutionReportStatus>(0);
constexpr OrderExecutionReportStatus OrderExecutionReportStatus_MAX = static_cast<OrderExecutionReportStatus>(5);
constexpr int OrderExecutionReportStatus_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
OrderExecutionReportStatus_descriptor();
template <typename T>
const std::string& OrderExecutionReportStatus_Name(T value) {
  static_assert(std::is_same<T, OrderExecutionReportStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OrderExecutionReportStatus_Name().");
  return OrderExecutionReportStatus_Name(static_cast<OrderExecutionReportStatus>(value));
}
template <>
inline const std::string& OrderExecutionReportStatus_Name(OrderExecutionReportStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OrderExecutionReportStatus_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool OrderExecutionReportStatus_Parse(absl::string_view name, OrderExecutionReportStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderExecutionReportStatus>(
      OrderExecutionReportStatus_descriptor(), name, value);
}
enum TimeInForceType : int {
  TIME_IN_FORCE_UNSPECIFIED = 0,
  TIME_IN_FORCE_DAY = 1,
  TIME_IN_FORCE_FILL_AND_KILL = 2,
  TIME_IN_FORCE_FILL_OR_KILL = 3,
  TimeInForceType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TimeInForceType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TimeInForceType_IsValid(int value);
extern const uint32_t TimeInForceType_internal_data_[];
constexpr TimeInForceType TimeInForceType_MIN = static_cast<TimeInForceType>(0);
constexpr TimeInForceType TimeInForceType_MAX = static_cast<TimeInForceType>(3);
constexpr int TimeInForceType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
TimeInForceType_descriptor();
template <typename T>
const std::string& TimeInForceType_Name(T value) {
  static_assert(std::is_same<T, TimeInForceType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TimeInForceType_Name().");
  return TimeInForceType_Name(static_cast<TimeInForceType>(value));
}
template <>
inline const std::string& TimeInForceType_Name(TimeInForceType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TimeInForceType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool TimeInForceType_Parse(absl::string_view name, TimeInForceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TimeInForceType>(
      TimeInForceType_descriptor(), name, value);
}
enum OrderIdType : int {
  ORDER_ID_TYPE_UNSPECIFIED = 0,
  ORDER_ID_TYPE_EXCHANGE = 1,
  ORDER_ID_TYPE_REQUEST = 2,
  OrderIdType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OrderIdType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OrderIdType_IsValid(int value);
extern const uint32_t OrderIdType_internal_data_[];
constexpr OrderIdType OrderIdType_MIN = static_cast<OrderIdType>(0);
constexpr OrderIdType OrderIdType_MAX = static_cast<OrderIdType>(2);
constexpr int OrderIdType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
OrderIdType_descriptor();
template <typename T>
const std::string& OrderIdType_Name(T value) {
  static_assert(std::is_same<T, OrderIdType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OrderIdType_Name().");
  return OrderIdType_Name(static_cast<OrderIdType>(value));
}
template <>
inline const std::string& OrderIdType_Name(OrderIdType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OrderIdType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool OrderIdType_Parse(absl::string_view name, OrderIdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderIdType>(
      OrderIdType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TradesStreamRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.TradesStreamRequest) */ {
 public:
  inline TradesStreamRequest() : TradesStreamRequest(nullptr) {}
  ~TradesStreamRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TradesStreamRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TradesStreamRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TradesStreamRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TradesStreamRequest(const TradesStreamRequest& from) : TradesStreamRequest(nullptr, from) {}
  inline TradesStreamRequest(TradesStreamRequest&& from) noexcept
      : TradesStreamRequest(nullptr, std::move(from)) {}
  inline TradesStreamRequest& operator=(const TradesStreamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TradesStreamRequest& operator=(TradesStreamRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TradesStreamRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TradesStreamRequest* internal_default_instance() {
    return reinterpret_cast<const TradesStreamRequest*>(
        &_TradesStreamRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TradesStreamRequest& a, TradesStreamRequest& b) { a.Swap(&b); }
  inline void Swap(TradesStreamRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TradesStreamRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TradesStreamRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TradesStreamRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TradesStreamRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TradesStreamRequest& from) { TradesStreamRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TradesStreamRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.TradesStreamRequest"; }

 protected:
  explicit TradesStreamRequest(::google::protobuf::Arena* arena);
  TradesStreamRequest(::google::protobuf::Arena* arena, const TradesStreamRequest& from);
  TradesStreamRequest(::google::protobuf::Arena* arena, TradesStreamRequest&& from) noexcept
      : TradesStreamRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountsFieldNumber = 1,
    kPingDelayMsFieldNumber = 15,
  };
  // repeated string accounts = 1;
  int accounts_size() const;
  private:
  int _internal_accounts_size() const;

  public:
  void clear_accounts() ;
  const std::string& accounts(int index) const;
  std::string* mutable_accounts(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accounts(int index, Arg_&& value, Args_... args);
  std::string* add_accounts();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_accounts(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& accounts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_accounts();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_accounts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_accounts();

  public:
  // optional int32 ping_delay_ms = 15;
  bool has_ping_delay_ms() const;
  void clear_ping_delay_ms() ;
  ::int32_t ping_delay_ms() const;
  void set_ping_delay_ms(::int32_t value);

  private:
  ::int32_t _internal_ping_delay_ms() const;
  void _internal_set_ping_delay_ms(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      74, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TradesStreamRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> accounts_;
    ::int32_t ping_delay_ms_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class PostOrderAsyncResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse) */ {
 public:
  inline PostOrderAsyncResponse() : PostOrderAsyncResponse(nullptr) {}
  ~PostOrderAsyncResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PostOrderAsyncResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PostOrderAsyncResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PostOrderAsyncResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PostOrderAsyncResponse(const PostOrderAsyncResponse& from) : PostOrderAsyncResponse(nullptr, from) {}
  inline PostOrderAsyncResponse(PostOrderAsyncResponse&& from) noexcept
      : PostOrderAsyncResponse(nullptr, std::move(from)) {}
  inline PostOrderAsyncResponse& operator=(const PostOrderAsyncResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostOrderAsyncResponse& operator=(PostOrderAsyncResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PostOrderAsyncResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PostOrderAsyncResponse* internal_default_instance() {
    return reinterpret_cast<const PostOrderAsyncResponse*>(
        &_PostOrderAsyncResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(PostOrderAsyncResponse& a, PostOrderAsyncResponse& b) { a.Swap(&b); }
  inline void Swap(PostOrderAsyncResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PostOrderAsyncResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PostOrderAsyncResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PostOrderAsyncResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PostOrderAsyncResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PostOrderAsyncResponse& from) { PostOrderAsyncResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PostOrderAsyncResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse"; }

 protected:
  explicit PostOrderAsyncResponse(::google::protobuf::Arena* arena);
  PostOrderAsyncResponse(::google::protobuf::Arena* arena, const PostOrderAsyncResponse& from);
  PostOrderAsyncResponse(::google::protobuf::Arena* arena, PostOrderAsyncResponse&& from) noexcept
      : PostOrderAsyncResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderRequestIdFieldNumber = 1,
    kTradeIntentIdFieldNumber = 3,
    kExecutionReportStatusFieldNumber = 2,
  };
  // string order_request_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_order_request_id() ;
  const std::string& order_request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_request_id();
  PROTOBUF_NODISCARD std::string* release_order_request_id();
  void set_allocated_order_request_id(std::string* value);

  private:
  const std::string& _internal_order_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_request_id(
      const std::string& value);
  std::string* _internal_mutable_order_request_id();

  public:
  // optional string trade_intent_id = 3;
  bool has_trade_intent_id() const;
  void clear_trade_intent_id() ;
  const std::string& trade_intent_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trade_intent_id(Arg_&& arg, Args_... args);
  std::string* mutable_trade_intent_id();
  PROTOBUF_NODISCARD std::string* release_trade_intent_id();
  void set_allocated_trade_intent_id(std::string* value);

  private:
  const std::string& _internal_trade_intent_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_trade_intent_id(
      const std::string& value);
  std::string* _internal_mutable_trade_intent_id();

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_execution_report_status() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus execution_report_status() const;
  void set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus _internal_execution_report_status() const;
  void _internal_set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      100, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PostOrderAsyncResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr order_request_id_;
    ::google::protobuf::internal::ArenaStringPtr trade_intent_id_;
    int execution_report_status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class OrderStateStreamRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest) */ {
 public:
  inline OrderStateStreamRequest() : OrderStateStreamRequest(nullptr) {}
  ~OrderStateStreamRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderStateStreamRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderStateStreamRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderStateStreamRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderStateStreamRequest(const OrderStateStreamRequest& from) : OrderStateStreamRequest(nullptr, from) {}
  inline OrderStateStreamRequest(OrderStateStreamRequest&& from) noexcept
      : OrderStateStreamRequest(nullptr, std::move(from)) {}
  inline OrderStateStreamRequest& operator=(const OrderStateStreamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderStateStreamRequest& operator=(OrderStateStreamRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderStateStreamRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderStateStreamRequest* internal_default_instance() {
    return reinterpret_cast<const OrderStateStreamRequest*>(
        &_OrderStateStreamRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(OrderStateStreamRequest& a, OrderStateStreamRequest& b) { a.Swap(&b); }
  inline void Swap(OrderStateStreamRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderStateStreamRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderStateStreamRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderStateStreamRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderStateStreamRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderStateStreamRequest& from) { OrderStateStreamRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderStateStreamRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest"; }

 protected:
  explicit OrderStateStreamRequest(::google::protobuf::Arena* arena);
  OrderStateStreamRequest(::google::protobuf::Arena* arena, const OrderStateStreamRequest& from);
  OrderStateStreamRequest(::google::protobuf::Arena* arena, OrderStateStreamRequest&& from) noexcept
      : OrderStateStreamRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountsFieldNumber = 1,
    kPingDelayMillisFieldNumber = 15,
  };
  // repeated string accounts = 1;
  int accounts_size() const;
  private:
  int _internal_accounts_size() const;

  public:
  void clear_accounts() ;
  const std::string& accounts(int index) const;
  std::string* mutable_accounts(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accounts(int index, Arg_&& value, Args_... args);
  std::string* add_accounts();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_accounts(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& accounts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_accounts();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_accounts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_accounts();

  public:
  // optional int32 ping_delay_millis = 15;
  bool has_ping_delay_millis() const;
  void clear_ping_delay_millis() ;
  ::int32_t ping_delay_millis() const;
  void set_ping_delay_millis(::int32_t value);

  private:
  ::int32_t _internal_ping_delay_millis() const;
  void _internal_set_ping_delay_millis(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderStateStreamRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> accounts_;
    ::int32_t ping_delay_millis_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class GetOrdersRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetOrdersRequest) */ {
 public:
  inline GetOrdersRequest() : GetOrdersRequest(nullptr) {}
  ~GetOrdersRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOrdersRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOrdersRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrdersRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetOrdersRequest(const GetOrdersRequest& from) : GetOrdersRequest(nullptr, from) {}
  inline GetOrdersRequest(GetOrdersRequest&& from) noexcept
      : GetOrdersRequest(nullptr, std::move(from)) {}
  inline GetOrdersRequest& operator=(const GetOrdersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrdersRequest& operator=(GetOrdersRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrdersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrdersRequest* internal_default_instance() {
    return reinterpret_cast<const GetOrdersRequest*>(
        &_GetOrdersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GetOrdersRequest& a, GetOrdersRequest& b) { a.Swap(&b); }
  inline void Swap(GetOrdersRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrdersRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrdersRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOrdersRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrdersRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOrdersRequest& from) { GetOrdersRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOrdersRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetOrdersRequest"; }

 protected:
  explicit GetOrdersRequest(::google::protobuf::Arena* arena);
  GetOrdersRequest(::google::protobuf::Arena* arena, const GetOrdersRequest& from);
  GetOrdersRequest(::google::protobuf::Arena* arena, GetOrdersRequest&& from) noexcept
      : GetOrdersRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      73, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetOrdersRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class GetOrderStateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest) */ {
 public:
  inline GetOrderStateRequest() : GetOrderStateRequest(nullptr) {}
  ~GetOrderStateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOrderStateRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOrderStateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrderStateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetOrderStateRequest(const GetOrderStateRequest& from) : GetOrderStateRequest(nullptr, from) {}
  inline GetOrderStateRequest(GetOrderStateRequest&& from) noexcept
      : GetOrderStateRequest(nullptr, std::move(from)) {}
  inline GetOrderStateRequest& operator=(const GetOrderStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrderStateRequest& operator=(GetOrderStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrderStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrderStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetOrderStateRequest*>(
        &_GetOrderStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(GetOrderStateRequest& a, GetOrderStateRequest& b) { a.Swap(&b); }
  inline void Swap(GetOrderStateRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrderStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrderStateRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOrderStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrderStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOrderStateRequest& from) { GetOrderStateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOrderStateRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetOrderStateRequest"; }

 protected:
  explicit GetOrderStateRequest(::google::protobuf::Arena* arena);
  GetOrderStateRequest(::google::protobuf::Arena* arena, const GetOrderStateRequest& from);
  GetOrderStateRequest(::google::protobuf::Arena* arena, GetOrderStateRequest&& from) noexcept
      : GetOrderStateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kOrderIdFieldNumber = 2,
    kPriceTypeFieldNumber = 3,
    kOrderIdTypeFieldNumber = 4,
  };
  // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_order_id() ;
  const std::string& order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_id();
  PROTOBUF_NODISCARD std::string* release_order_id();
  void set_allocated_order_id(std::string* value);

  private:
  const std::string& _internal_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_id(
      const std::string& value);
  std::string* _internal_mutable_order_id();

  public:
  // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 3;
  void clear_price_type() ;
  ::tinkoff::public_::invest::api::contract::v1::PriceType price_type() const;
  void set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::PriceType _internal_price_type() const;
  void _internal_set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value);

  public:
  // optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 4;
  bool has_order_id_type() const;
  void clear_order_id_type() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderIdType order_id_type() const;
  void set_order_id_type(::tinkoff::public_::invest::api::contract::v1::OrderIdType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderIdType _internal_order_id_type() const;
  void _internal_set_order_id_type(::tinkoff::public_::invest::api::contract::v1::OrderIdType value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      85, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetOrderStateRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr order_id_;
    int price_type_;
    int order_id_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class GetMaxLotsResponse_SellLimitsView final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView) */ {
 public:
  inline GetMaxLotsResponse_SellLimitsView() : GetMaxLotsResponse_SellLimitsView(nullptr) {}
  ~GetMaxLotsResponse_SellLimitsView() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMaxLotsResponse_SellLimitsView* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMaxLotsResponse_SellLimitsView));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMaxLotsResponse_SellLimitsView(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMaxLotsResponse_SellLimitsView(const GetMaxLotsResponse_SellLimitsView& from) : GetMaxLotsResponse_SellLimitsView(nullptr, from) {}
  inline GetMaxLotsResponse_SellLimitsView(GetMaxLotsResponse_SellLimitsView&& from) noexcept
      : GetMaxLotsResponse_SellLimitsView(nullptr, std::move(from)) {}
  inline GetMaxLotsResponse_SellLimitsView& operator=(const GetMaxLotsResponse_SellLimitsView& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMaxLotsResponse_SellLimitsView& operator=(GetMaxLotsResponse_SellLimitsView&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMaxLotsResponse_SellLimitsView& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMaxLotsResponse_SellLimitsView* internal_default_instance() {
    return reinterpret_cast<const GetMaxLotsResponse_SellLimitsView*>(
        &_GetMaxLotsResponse_SellLimitsView_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetMaxLotsResponse_SellLimitsView& a, GetMaxLotsResponse_SellLimitsView& b) { a.Swap(&b); }
  inline void Swap(GetMaxLotsResponse_SellLimitsView* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMaxLotsResponse_SellLimitsView* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMaxLotsResponse_SellLimitsView* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMaxLotsResponse_SellLimitsView>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMaxLotsResponse_SellLimitsView& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMaxLotsResponse_SellLimitsView& from) { GetMaxLotsResponse_SellLimitsView::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMaxLotsResponse_SellLimitsView* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView"; }

 protected:
  explicit GetMaxLotsResponse_SellLimitsView(::google::protobuf::Arena* arena);
  GetMaxLotsResponse_SellLimitsView(::google::protobuf::Arena* arena, const GetMaxLotsResponse_SellLimitsView& from);
  GetMaxLotsResponse_SellLimitsView(::google::protobuf::Arena* arena, GetMaxLotsResponse_SellLimitsView&& from) noexcept
      : GetMaxLotsResponse_SellLimitsView(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSellMaxLotsFieldNumber = 1,
  };
  // int64 sell_max_lots = 1;
  void clear_sell_max_lots() ;
  ::int64_t sell_max_lots() const;
  void set_sell_max_lots(::int64_t value);

  private:
  ::int64_t _internal_sell_max_lots() const;
  void _internal_set_sell_max_lots(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMaxLotsResponse_SellLimitsView& from_msg);
    ::int64_t sell_max_lots_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class CancelOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.CancelOrderRequest) */ {
 public:
  inline CancelOrderRequest() : CancelOrderRequest(nullptr) {}
  ~CancelOrderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CancelOrderRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CancelOrderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CancelOrderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CancelOrderRequest(const CancelOrderRequest& from) : CancelOrderRequest(nullptr, from) {}
  inline CancelOrderRequest(CancelOrderRequest&& from) noexcept
      : CancelOrderRequest(nullptr, std::move(from)) {}
  inline CancelOrderRequest& operator=(const CancelOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelOrderRequest& operator=(CancelOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CancelOrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CancelOrderRequest* internal_default_instance() {
    return reinterpret_cast<const CancelOrderRequest*>(
        &_CancelOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CancelOrderRequest& a, CancelOrderRequest& b) { a.Swap(&b); }
  inline void Swap(CancelOrderRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelOrderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CancelOrderRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CancelOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CancelOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CancelOrderRequest& from) { CancelOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CancelOrderRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.CancelOrderRequest"; }

 protected:
  explicit CancelOrderRequest(::google::protobuf::Arena* arena);
  CancelOrderRequest(::google::protobuf::Arena* arena, const CancelOrderRequest& from);
  CancelOrderRequest(::google::protobuf::Arena* arena, CancelOrderRequest&& from) noexcept
      : CancelOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kOrderIdFieldNumber = 2,
    kOrderIdTypeFieldNumber = 3,
  };
  // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_order_id() ;
  const std::string& order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_id();
  PROTOBUF_NODISCARD std::string* release_order_id();
  void set_allocated_order_id(std::string* value);

  private:
  const std::string& _internal_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_id(
      const std::string& value);
  std::string* _internal_mutable_order_id();

  public:
  // optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 3;
  bool has_order_id_type() const;
  void clear_order_id_type() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderIdType order_id_type() const;
  void set_order_id_type(::tinkoff::public_::invest::api::contract::v1::OrderIdType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderIdType _internal_order_id_type() const;
  void _internal_set_order_id_type(::tinkoff::public_::invest::api::contract::v1::OrderIdType value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      83, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CancelOrderRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr order_id_;
    int order_id_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class SubscriptionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.SubscriptionResponse) */ {
 public:
  inline SubscriptionResponse() : SubscriptionResponse(nullptr) {}
  ~SubscriptionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscriptionResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscriptionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscriptionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscriptionResponse(const SubscriptionResponse& from) : SubscriptionResponse(nullptr, from) {}
  inline SubscriptionResponse(SubscriptionResponse&& from) noexcept
      : SubscriptionResponse(nullptr, std::move(from)) {}
  inline SubscriptionResponse& operator=(const SubscriptionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscriptionResponse& operator=(SubscriptionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscriptionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscriptionResponse* internal_default_instance() {
    return reinterpret_cast<const SubscriptionResponse*>(
        &_SubscriptionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(SubscriptionResponse& a, SubscriptionResponse& b) { a.Swap(&b); }
  inline void Swap(SubscriptionResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscriptionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscriptionResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscriptionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscriptionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscriptionResponse& from) { SubscriptionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscriptionResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.SubscriptionResponse"; }

 protected:
  explicit SubscriptionResponse(::google::protobuf::Arena* arena);
  SubscriptionResponse(::google::protobuf::Arena* arena, const SubscriptionResponse& from);
  SubscriptionResponse(::google::protobuf::Arena* arena, SubscriptionResponse&& from) noexcept
      : SubscriptionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountsFieldNumber = 5,
    kTrackingIdFieldNumber = 1,
    kStreamIdFieldNumber = 4,
    kErrorFieldNumber = 7,
    kStatusFieldNumber = 2,
  };
  // repeated string accounts = 5;
  int accounts_size() const;
  private:
  int _internal_accounts_size() const;

  public:
  void clear_accounts() ;
  const std::string& accounts(int index) const;
  std::string* mutable_accounts(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accounts(int index, Arg_&& value, Args_... args);
  std::string* add_accounts();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_accounts(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& accounts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_accounts();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_accounts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_accounts();

  public:
  // string tracking_id = 1;
  void clear_tracking_id() ;
  const std::string& tracking_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tracking_id(Arg_&& arg, Args_... args);
  std::string* mutable_tracking_id();
  PROTOBUF_NODISCARD std::string* release_tracking_id();
  void set_allocated_tracking_id(std::string* value);

  private:
  const std::string& _internal_tracking_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tracking_id(
      const std::string& value);
  std::string* _internal_mutable_tracking_id();

  public:
  // string stream_id = 4;
  void clear_stream_id() ;
  const std::string& stream_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stream_id(Arg_&& arg, Args_... args);
  std::string* mutable_stream_id();
  PROTOBUF_NODISCARD std::string* release_stream_id();
  void set_allocated_stream_id(std::string* value);

  private:
  const std::string& _internal_stream_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stream_id(
      const std::string& value);
  std::string* _internal_mutable_stream_id();

  public:
  // optional .tinkoff.public.invest.api.contract.v1.ErrorDetail error = 7;
  bool has_error() const;
  void clear_error() ;
  const ::tinkoff::public_::invest::api::contract::v1::ErrorDetail& error() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* release_error();
  ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* mutable_error();
  void set_allocated_error(::tinkoff::public_::invest::api::contract::v1::ErrorDetail* value);
  void unsafe_arena_set_allocated_error(::tinkoff::public_::invest::api::contract::v1::ErrorDetail* value);
  ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* unsafe_arena_release_error();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::ErrorDetail& _internal_error() const;
  ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* _internal_mutable_error();

  public:
  // .tinkoff.public.invest.api.contract.v1.ResultSubscriptionStatus status = 2;
  void clear_status() ;
  ::tinkoff::public_::invest::api::contract::v1::ResultSubscriptionStatus status() const;
  void set_status(::tinkoff::public_::invest::api::contract::v1::ResultSubscriptionStatus value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::ResultSubscriptionStatus _internal_status() const;
  void _internal_set_status(::tinkoff::public_::invest::api::contract::v1::ResultSubscriptionStatus value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.SubscriptionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      95, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscriptionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> accounts_;
    ::google::protobuf::internal::ArenaStringPtr tracking_id_;
    ::google::protobuf::internal::ArenaStringPtr stream_id_;
    ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* error_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class ReplaceOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest) */ {
 public:
  inline ReplaceOrderRequest() : ReplaceOrderRequest(nullptr) {}
  ~ReplaceOrderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReplaceOrderRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReplaceOrderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReplaceOrderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReplaceOrderRequest(const ReplaceOrderRequest& from) : ReplaceOrderRequest(nullptr, from) {}
  inline ReplaceOrderRequest(ReplaceOrderRequest&& from) noexcept
      : ReplaceOrderRequest(nullptr, std::move(from)) {}
  inline ReplaceOrderRequest& operator=(const ReplaceOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplaceOrderRequest& operator=(ReplaceOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplaceOrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplaceOrderRequest* internal_default_instance() {
    return reinterpret_cast<const ReplaceOrderRequest*>(
        &_ReplaceOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(ReplaceOrderRequest& a, ReplaceOrderRequest& b) { a.Swap(&b); }
  inline void Swap(ReplaceOrderRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplaceOrderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplaceOrderRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReplaceOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplaceOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReplaceOrderRequest& from) { ReplaceOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReplaceOrderRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest"; }

 protected:
  explicit ReplaceOrderRequest(::google::protobuf::Arena* arena);
  ReplaceOrderRequest(::google::protobuf::Arena* arena, const ReplaceOrderRequest& from);
  ReplaceOrderRequest(::google::protobuf::Arena* arena, ReplaceOrderRequest&& from) noexcept
      : ReplaceOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kOrderIdFieldNumber = 6,
    kIdempotencyKeyFieldNumber = 7,
    kPriceFieldNumber = 12,
    kQuantityFieldNumber = 11,
    kPriceTypeFieldNumber = 13,
    kConfirmMarginTradeFieldNumber = 14,
  };
  // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // string order_id = 6 [(.google.api.field_behavior) = REQUIRED];
  void clear_order_id() ;
  const std::string& order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_id();
  PROTOBUF_NODISCARD std::string* release_order_id();
  void set_allocated_order_id(std::string* value);

  private:
  const std::string& _internal_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_id(
      const std::string& value);
  std::string* _internal_mutable_order_id();

  public:
  // string idempotency_key = 7 [(.google.api.field_behavior) = REQUIRED];
  void clear_idempotency_key() ;
  const std::string& idempotency_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_idempotency_key(Arg_&& arg, Args_... args);
  std::string* mutable_idempotency_key();
  PROTOBUF_NODISCARD std::string* release_idempotency_key();
  void set_allocated_idempotency_key(std::string* value);

  private:
  const std::string& _internal_idempotency_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_idempotency_key(
      const std::string& value);
  std::string* _internal_mutable_idempotency_key();

  public:
  // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 12;
  bool has_price() const;
  void clear_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Quotation* release_price();
  ::tinkoff::public_::invest::api::contract::v1::Quotation* mutable_price();
  void set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  void unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  ::tinkoff::public_::invest::api::contract::v1::Quotation* unsafe_arena_release_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& _internal_price() const;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _internal_mutable_price();

  public:
  // int64 quantity = 11 [(.google.api.field_behavior) = REQUIRED];
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 13;
  bool has_price_type() const;
  void clear_price_type() ;
  ::tinkoff::public_::invest::api::contract::v1::PriceType price_type() const;
  void set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::PriceType _internal_price_type() const;
  void _internal_set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value);

  public:
  // bool confirm_margin_trade = 14;
  void clear_confirm_margin_trade() ;
  bool confirm_margin_trade() const;
  void set_confirm_margin_trade(bool value);

  private:
  bool _internal_confirm_margin_trade() const;
  void _internal_set_confirm_margin_trade(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      99, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReplaceOrderRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr order_id_;
    ::google::protobuf::internal::ArenaStringPtr idempotency_key_;
    ::tinkoff::public_::invest::api::contract::v1::Quotation* price_;
    ::int64_t quantity_;
    int price_type_;
    bool confirm_margin_trade_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class PostOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.PostOrderRequest) */ {
 public:
  inline PostOrderRequest() : PostOrderRequest(nullptr) {}
  ~PostOrderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PostOrderRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PostOrderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PostOrderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PostOrderRequest(const PostOrderRequest& from) : PostOrderRequest(nullptr, from) {}
  inline PostOrderRequest(PostOrderRequest&& from) noexcept
      : PostOrderRequest(nullptr, std::move(from)) {}
  inline PostOrderRequest& operator=(const PostOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostOrderRequest& operator=(PostOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PostOrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PostOrderRequest* internal_default_instance() {
    return reinterpret_cast<const PostOrderRequest*>(
        &_PostOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(PostOrderRequest& a, PostOrderRequest& b) { a.Swap(&b); }
  inline void Swap(PostOrderRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PostOrderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PostOrderRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PostOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PostOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PostOrderRequest& from) { PostOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PostOrderRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.PostOrderRequest"; }

 protected:
  explicit PostOrderRequest(::google::protobuf::Arena* arena);
  PostOrderRequest(::google::protobuf::Arena* arena, const PostOrderRequest& from);
  PostOrderRequest(::google::protobuf::Arena* arena, PostOrderRequest&& from) noexcept
      : PostOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFigiFieldNumber = 1,
    kAccountIdFieldNumber = 5,
    kOrderIdFieldNumber = 7,
    kInstrumentIdFieldNumber = 8,
    kPriceFieldNumber = 3,
    kQuantityFieldNumber = 2,
    kDirectionFieldNumber = 4,
    kOrderTypeFieldNumber = 6,
    kTimeInForceFieldNumber = 9,
    kPriceTypeFieldNumber = 10,
    kConfirmMarginTradeFieldNumber = 11,
  };
  // optional string figi = 1 [deprecated = true];
  [[deprecated]]  bool has_figi() const;
  [[deprecated]]  void clear_figi() ;
  [[deprecated]] const std::string& figi() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_figi(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_figi();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_figi();
  [[deprecated]] void set_allocated_figi(std::string* value);

  private:
  const std::string& _internal_figi() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_figi(
      const std::string& value);
  std::string* _internal_mutable_figi();

  public:
  // string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
  void clear_order_id() ;
  const std::string& order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_id();
  PROTOBUF_NODISCARD std::string* release_order_id();
  void set_allocated_order_id(std::string* value);

  private:
  const std::string& _internal_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_id(
      const std::string& value);
  std::string* _internal_mutable_order_id();

  public:
  // string instrument_id = 8;
  void clear_instrument_id() ;
  const std::string& instrument_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instrument_id(Arg_&& arg, Args_... args);
  std::string* mutable_instrument_id();
  PROTOBUF_NODISCARD std::string* release_instrument_id();
  void set_allocated_instrument_id(std::string* value);

  private:
  const std::string& _internal_instrument_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instrument_id(
      const std::string& value);
  std::string* _internal_mutable_instrument_id();

  public:
  // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
  bool has_price() const;
  void clear_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Quotation* release_price();
  ::tinkoff::public_::invest::api::contract::v1::Quotation* mutable_price();
  void set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  void unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  ::tinkoff::public_::invest::api::contract::v1::Quotation* unsafe_arena_release_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& _internal_price() const;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _internal_mutable_price();

  public:
  // int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
  void clear_direction() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection direction() const;
  void set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection _internal_direction() const;
  void _internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
  void clear_order_type() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderType order_type() const;
  void set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderType _internal_order_type() const;
  void _internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value);

  public:
  // .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 9;
  void clear_time_in_force() ;
  ::tinkoff::public_::invest::api::contract::v1::TimeInForceType time_in_force() const;
  void set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::TimeInForceType _internal_time_in_force() const;
  void _internal_set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value);

  public:
  // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 10;
  void clear_price_type() ;
  ::tinkoff::public_::invest::api::contract::v1::PriceType price_type() const;
  void set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::PriceType _internal_price_type() const;
  void _internal_set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value);

  public:
  // bool confirm_margin_trade = 11;
  void clear_confirm_margin_trade() ;
  bool confirm_margin_trade() const;
  void set_confirm_margin_trade(bool value);

  private:
  bool _internal_confirm_margin_trade() const;
  void _internal_set_confirm_margin_trade(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 1,
      106, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PostOrderRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr figi_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr order_id_;
    ::google::protobuf::internal::ArenaStringPtr instrument_id_;
    ::tinkoff::public_::invest::api::contract::v1::Quotation* price_;
    ::int64_t quantity_;
    int direction_;
    int order_type_;
    int time_in_force_;
    int price_type_;
    bool confirm_margin_trade_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class PostOrderAsyncRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest) */ {
 public:
  inline PostOrderAsyncRequest() : PostOrderAsyncRequest(nullptr) {}
  ~PostOrderAsyncRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PostOrderAsyncRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PostOrderAsyncRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PostOrderAsyncRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PostOrderAsyncRequest(const PostOrderAsyncRequest& from) : PostOrderAsyncRequest(nullptr, from) {}
  inline PostOrderAsyncRequest(PostOrderAsyncRequest&& from) noexcept
      : PostOrderAsyncRequest(nullptr, std::move(from)) {}
  inline PostOrderAsyncRequest& operator=(const PostOrderAsyncRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostOrderAsyncRequest& operator=(PostOrderAsyncRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PostOrderAsyncRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PostOrderAsyncRequest* internal_default_instance() {
    return reinterpret_cast<const PostOrderAsyncRequest*>(
        &_PostOrderAsyncRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(PostOrderAsyncRequest& a, PostOrderAsyncRequest& b) { a.Swap(&b); }
  inline void Swap(PostOrderAsyncRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PostOrderAsyncRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PostOrderAsyncRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PostOrderAsyncRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PostOrderAsyncRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PostOrderAsyncRequest& from) { PostOrderAsyncRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PostOrderAsyncRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest"; }

 protected:
  explicit PostOrderAsyncRequest(::google::protobuf::Arena* arena);
  PostOrderAsyncRequest(::google::protobuf::Arena* arena, const PostOrderAsyncRequest& from);
  PostOrderAsyncRequest(::google::protobuf::Arena* arena, PostOrderAsyncRequest&& from) noexcept
      : PostOrderAsyncRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInstrumentIdFieldNumber = 1,
    kAccountIdFieldNumber = 5,
    kOrderIdFieldNumber = 7,
    kPriceFieldNumber = 3,
    kQuantityFieldNumber = 2,
    kDirectionFieldNumber = 4,
    kOrderTypeFieldNumber = 6,
    kTimeInForceFieldNumber = 8,
    kPriceTypeFieldNumber = 9,
    kConfirmMarginTradeFieldNumber = 10,
  };
  // string instrument_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_instrument_id() ;
  const std::string& instrument_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instrument_id(Arg_&& arg, Args_... args);
  std::string* mutable_instrument_id();
  PROTOBUF_NODISCARD std::string* release_instrument_id();
  void set_allocated_instrument_id(std::string* value);

  private:
  const std::string& _internal_instrument_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instrument_id(
      const std::string& value);
  std::string* _internal_mutable_instrument_id();

  public:
  // string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
  void clear_order_id() ;
  const std::string& order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_id();
  PROTOBUF_NODISCARD std::string* release_order_id();
  void set_allocated_order_id(std::string* value);

  private:
  const std::string& _internal_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_id(
      const std::string& value);
  std::string* _internal_mutable_order_id();

  public:
  // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
  bool has_price() const;
  void clear_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Quotation* release_price();
  ::tinkoff::public_::invest::api::contract::v1::Quotation* mutable_price();
  void set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  void unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  ::tinkoff::public_::invest::api::contract::v1::Quotation* unsafe_arena_release_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& _internal_price() const;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _internal_mutable_price();

  public:
  // int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
  void clear_direction() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection direction() const;
  void set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection _internal_direction() const;
  void _internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
  void clear_order_type() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderType order_type() const;
  void set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderType _internal_order_type() const;
  void _internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value);

  public:
  // optional .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 8;
  bool has_time_in_force() const;
  void clear_time_in_force() ;
  ::tinkoff::public_::invest::api::contract::v1::TimeInForceType time_in_force() const;
  void set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::TimeInForceType _internal_time_in_force() const;
  void _internal_set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value);

  public:
  // optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 9;
  bool has_price_type() const;
  void clear_price_type() ;
  ::tinkoff::public_::invest::api::contract::v1::PriceType price_type() const;
  void set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::PriceType _internal_price_type() const;
  void _internal_set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value);

  public:
  // bool confirm_margin_trade = 10;
  void clear_confirm_margin_trade() ;
  bool confirm_margin_trade() const;
  void set_confirm_margin_trade(bool value);

  private:
  bool _internal_confirm_margin_trade() const;
  void _internal_set_confirm_margin_trade(bool value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 1,
      107, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PostOrderAsyncRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr instrument_id_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr order_id_;
    ::tinkoff::public_::invest::api::contract::v1::Quotation* price_;
    ::int64_t quantity_;
    int direction_;
    int order_type_;
    int time_in_force_;
    int price_type_;
    bool confirm_margin_trade_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class OrderTrade final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.OrderTrade) */ {
 public:
  inline OrderTrade() : OrderTrade(nullptr) {}
  ~OrderTrade() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderTrade* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderTrade));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderTrade(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderTrade(const OrderTrade& from) : OrderTrade(nullptr, from) {}
  inline OrderTrade(OrderTrade&& from) noexcept
      : OrderTrade(nullptr, std::move(from)) {}
  inline OrderTrade& operator=(const OrderTrade& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderTrade& operator=(OrderTrade&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderTrade& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderTrade* internal_default_instance() {
    return reinterpret_cast<const OrderTrade*>(
        &_OrderTrade_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(OrderTrade& a, OrderTrade& b) { a.Swap(&b); }
  inline void Swap(OrderTrade* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderTrade* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderTrade* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderTrade>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderTrade& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderTrade& from) { OrderTrade::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderTrade* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.OrderTrade"; }

 protected:
  explicit OrderTrade(::google::protobuf::Arena* arena);
  OrderTrade(::google::protobuf::Arena* arena, const OrderTrade& from);
  OrderTrade(::google::protobuf::Arena* arena, OrderTrade&& from) noexcept
      : OrderTrade(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTradeIdFieldNumber = 4,
    kDateTimeFieldNumber = 1,
    kPriceFieldNumber = 2,
    kQuantityFieldNumber = 3,
  };
  // string trade_id = 4;
  void clear_trade_id() ;
  const std::string& trade_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trade_id(Arg_&& arg, Args_... args);
  std::string* mutable_trade_id();
  PROTOBUF_NODISCARD std::string* release_trade_id();
  void set_allocated_trade_id(std::string* value);

  private:
  const std::string& _internal_trade_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_trade_id(
      const std::string& value);
  std::string* _internal_mutable_trade_id();

  public:
  // .google.protobuf.Timestamp date_time = 1;
  bool has_date_time() const;
  void clear_date_time() ;
  const ::google::protobuf::Timestamp& date_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_date_time();
  ::google::protobuf::Timestamp* mutable_date_time();
  void set_allocated_date_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_date_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_date_time();

  private:
  const ::google::protobuf::Timestamp& _internal_date_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_date_time();

  public:
  // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
  bool has_price() const;
  void clear_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Quotation* release_price();
  ::tinkoff::public_::invest::api::contract::v1::Quotation* mutable_price();
  void set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  void unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  ::tinkoff::public_::invest::api::contract::v1::Quotation* unsafe_arena_release_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& _internal_price() const;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _internal_mutable_price();

  public:
  // int64 quantity = 3;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.OrderTrade)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderTrade& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr trade_id_;
    ::google::protobuf::Timestamp* date_time_;
    ::tinkoff::public_::invest::api::contract::v1::Quotation* price_;
    ::int64_t quantity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class OrderStage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.OrderStage) */ {
 public:
  inline OrderStage() : OrderStage(nullptr) {}
  ~OrderStage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderStage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderStage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderStage(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderStage(const OrderStage& from) : OrderStage(nullptr, from) {}
  inline OrderStage(OrderStage&& from) noexcept
      : OrderStage(nullptr, std::move(from)) {}
  inline OrderStage& operator=(const OrderStage& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderStage& operator=(OrderStage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderStage& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderStage* internal_default_instance() {
    return reinterpret_cast<const OrderStage*>(
        &_OrderStage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(OrderStage& a, OrderStage& b) { a.Swap(&b); }
  inline void Swap(OrderStage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderStage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderStage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderStage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderStage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderStage& from) { OrderStage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderStage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.OrderStage"; }

 protected:
  explicit OrderStage(::google::protobuf::Arena* arena);
  OrderStage(::google::protobuf::Arena* arena, const OrderStage& from);
  OrderStage(::google::protobuf::Arena* arena, OrderStage&& from) noexcept
      : OrderStage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTradeIdFieldNumber = 3,
    kPriceFieldNumber = 1,
    kExecutionTimeFieldNumber = 5,
    kQuantityFieldNumber = 2,
  };
  // string trade_id = 3;
  void clear_trade_id() ;
  const std::string& trade_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trade_id(Arg_&& arg, Args_... args);
  std::string* mutable_trade_id();
  PROTOBUF_NODISCARD std::string* release_trade_id();
  void set_allocated_trade_id(std::string* value);

  private:
  const std::string& _internal_trade_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_trade_id(
      const std::string& value);
  std::string* _internal_mutable_trade_id();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 1;
  bool has_price() const;
  void clear_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_price();
  void set_allocated_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_price();

  public:
  // .google.protobuf.Timestamp execution_time = 5;
  bool has_execution_time() const;
  void clear_execution_time() ;
  const ::google::protobuf::Timestamp& execution_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_execution_time();
  ::google::protobuf::Timestamp* mutable_execution_time();
  void set_allocated_execution_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_execution_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_execution_time();

  private:
  const ::google::protobuf::Timestamp& _internal_execution_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_execution_time();

  public:
  // int64 quantity = 2;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.OrderStage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 2,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderStage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr trade_id_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* price_;
    ::google::protobuf::Timestamp* execution_time_;
    ::int64_t quantity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class GetOrderPriceResponse_ExtraFuture final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture) */ {
 public:
  inline GetOrderPriceResponse_ExtraFuture() : GetOrderPriceResponse_ExtraFuture(nullptr) {}
  ~GetOrderPriceResponse_ExtraFuture() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOrderPriceResponse_ExtraFuture* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOrderPriceResponse_ExtraFuture));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrderPriceResponse_ExtraFuture(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetOrderPriceResponse_ExtraFuture(const GetOrderPriceResponse_ExtraFuture& from) : GetOrderPriceResponse_ExtraFuture(nullptr, from) {}
  inline GetOrderPriceResponse_ExtraFuture(GetOrderPriceResponse_ExtraFuture&& from) noexcept
      : GetOrderPriceResponse_ExtraFuture(nullptr, std::move(from)) {}
  inline GetOrderPriceResponse_ExtraFuture& operator=(const GetOrderPriceResponse_ExtraFuture& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrderPriceResponse_ExtraFuture& operator=(GetOrderPriceResponse_ExtraFuture&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrderPriceResponse_ExtraFuture& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrderPriceResponse_ExtraFuture* internal_default_instance() {
    return reinterpret_cast<const GetOrderPriceResponse_ExtraFuture*>(
        &_GetOrderPriceResponse_ExtraFuture_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(GetOrderPriceResponse_ExtraFuture& a, GetOrderPriceResponse_ExtraFuture& b) { a.Swap(&b); }
  inline void Swap(GetOrderPriceResponse_ExtraFuture* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrderPriceResponse_ExtraFuture* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrderPriceResponse_ExtraFuture* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOrderPriceResponse_ExtraFuture>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrderPriceResponse_ExtraFuture& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOrderPriceResponse_ExtraFuture& from) { GetOrderPriceResponse_ExtraFuture::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOrderPriceResponse_ExtraFuture* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture"; }

 protected:
  explicit GetOrderPriceResponse_ExtraFuture(::google::protobuf::Arena* arena);
  GetOrderPriceResponse_ExtraFuture(::google::protobuf::Arena* arena, const GetOrderPriceResponse_ExtraFuture& from);
  GetOrderPriceResponse_ExtraFuture(::google::protobuf::Arena* arena, GetOrderPriceResponse_ExtraFuture&& from) noexcept
      : GetOrderPriceResponse_ExtraFuture(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInitialMarginFieldNumber = 2,
  };
  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_margin = 2;
  bool has_initial_margin() const;
  void clear_initial_margin() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& initial_margin() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_initial_margin();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_initial_margin();
  void set_allocated_initial_margin(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_initial_margin(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_initial_margin();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_initial_margin() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_initial_margin();

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetOrderPriceResponse_ExtraFuture& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* initial_margin_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class GetOrderPriceResponse_ExtraBond final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond) */ {
 public:
  inline GetOrderPriceResponse_ExtraBond() : GetOrderPriceResponse_ExtraBond(nullptr) {}
  ~GetOrderPriceResponse_ExtraBond() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOrderPriceResponse_ExtraBond* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOrderPriceResponse_ExtraBond));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrderPriceResponse_ExtraBond(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetOrderPriceResponse_ExtraBond(const GetOrderPriceResponse_ExtraBond& from) : GetOrderPriceResponse_ExtraBond(nullptr, from) {}
  inline GetOrderPriceResponse_ExtraBond(GetOrderPriceResponse_ExtraBond&& from) noexcept
      : GetOrderPriceResponse_ExtraBond(nullptr, std::move(from)) {}
  inline GetOrderPriceResponse_ExtraBond& operator=(const GetOrderPriceResponse_ExtraBond& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrderPriceResponse_ExtraBond& operator=(GetOrderPriceResponse_ExtraBond&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrderPriceResponse_ExtraBond& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrderPriceResponse_ExtraBond* internal_default_instance() {
    return reinterpret_cast<const GetOrderPriceResponse_ExtraBond*>(
        &_GetOrderPriceResponse_ExtraBond_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(GetOrderPriceResponse_ExtraBond& a, GetOrderPriceResponse_ExtraBond& b) { a.Swap(&b); }
  inline void Swap(GetOrderPriceResponse_ExtraBond* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrderPriceResponse_ExtraBond* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrderPriceResponse_ExtraBond* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOrderPriceResponse_ExtraBond>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrderPriceResponse_ExtraBond& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOrderPriceResponse_ExtraBond& from) { GetOrderPriceResponse_ExtraBond::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOrderPriceResponse_ExtraBond* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond"; }

 protected:
  explicit GetOrderPriceResponse_ExtraBond(::google::protobuf::Arena* arena);
  GetOrderPriceResponse_ExtraBond(::google::protobuf::Arena* arena, const GetOrderPriceResponse_ExtraBond& from);
  GetOrderPriceResponse_ExtraBond(::google::protobuf::Arena* arena, GetOrderPriceResponse_ExtraBond&& from) noexcept
      : GetOrderPriceResponse_ExtraBond(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAciValueFieldNumber = 2,
    kNominalConversionRateFieldNumber = 3,
  };
  // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 2;
  bool has_aci_value() const;
  void clear_aci_value() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& aci_value() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_aci_value();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_aci_value();
  void set_allocated_aci_value(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_aci_value(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_aci_value();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_aci_value() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_aci_value();

  public:
  // .tinkoff.public.invest.api.contract.v1.Quotation nominal_conversion_rate = 3;
  bool has_nominal_conversion_rate() const;
  void clear_nominal_conversion_rate() ;
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& nominal_conversion_rate() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Quotation* release_nominal_conversion_rate();
  ::tinkoff::public_::invest::api::contract::v1::Quotation* mutable_nominal_conversion_rate();
  void set_allocated_nominal_conversion_rate(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  void unsafe_arena_set_allocated_nominal_conversion_rate(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  ::tinkoff::public_::invest::api::contract::v1::Quotation* unsafe_arena_release_nominal_conversion_rate();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& _internal_nominal_conversion_rate() const;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _internal_mutable_nominal_conversion_rate();

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetOrderPriceResponse_ExtraBond& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* aci_value_;
    ::tinkoff::public_::invest::api::contract::v1::Quotation* nominal_conversion_rate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class GetOrderPriceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest) */ {
 public:
  inline GetOrderPriceRequest() : GetOrderPriceRequest(nullptr) {}
  ~GetOrderPriceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOrderPriceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOrderPriceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrderPriceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetOrderPriceRequest(const GetOrderPriceRequest& from) : GetOrderPriceRequest(nullptr, from) {}
  inline GetOrderPriceRequest(GetOrderPriceRequest&& from) noexcept
      : GetOrderPriceRequest(nullptr, std::move(from)) {}
  inline GetOrderPriceRequest& operator=(const GetOrderPriceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrderPriceRequest& operator=(GetOrderPriceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrderPriceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrderPriceRequest* internal_default_instance() {
    return reinterpret_cast<const GetOrderPriceRequest*>(
        &_GetOrderPriceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(GetOrderPriceRequest& a, GetOrderPriceRequest& b) { a.Swap(&b); }
  inline void Swap(GetOrderPriceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrderPriceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrderPriceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOrderPriceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrderPriceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOrderPriceRequest& from) { GetOrderPriceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOrderPriceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest"; }

 protected:
  explicit GetOrderPriceRequest(::google::protobuf::Arena* arena);
  GetOrderPriceRequest(::google::protobuf::Arena* arena, const GetOrderPriceRequest& from);
  GetOrderPriceRequest(::google::protobuf::Arena* arena, GetOrderPriceRequest&& from) noexcept
      : GetOrderPriceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kInstrumentIdFieldNumber = 2,
    kPriceFieldNumber = 3,
    kQuantityFieldNumber = 13,
    kDirectionFieldNumber = 12,
  };
  // string account_id = 1;
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // string instrument_id = 2;
  void clear_instrument_id() ;
  const std::string& instrument_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instrument_id(Arg_&& arg, Args_... args);
  std::string* mutable_instrument_id();
  PROTOBUF_NODISCARD std::string* release_instrument_id();
  void set_allocated_instrument_id(std::string* value);

  private:
  const std::string& _internal_instrument_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instrument_id(
      const std::string& value);
  std::string* _internal_mutable_instrument_id();

  public:
  // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
  bool has_price() const;
  void clear_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Quotation* release_price();
  ::tinkoff::public_::invest::api::contract::v1::Quotation* mutable_price();
  void set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  void unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  ::tinkoff::public_::invest::api::contract::v1::Quotation* unsafe_arena_release_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& _internal_price() const;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _internal_mutable_price();

  public:
  // int64 quantity = 13;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
  void clear_direction() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection direction() const;
  void set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection _internal_direction() const;
  void _internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      90, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetOrderPriceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr instrument_id_;
    ::tinkoff::public_::invest::api::contract::v1::Quotation* price_;
    ::int64_t quantity_;
    int direction_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class GetMaxLotsResponse_BuyLimitsView final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView) */ {
 public:
  inline GetMaxLotsResponse_BuyLimitsView() : GetMaxLotsResponse_BuyLimitsView(nullptr) {}
  ~GetMaxLotsResponse_BuyLimitsView() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMaxLotsResponse_BuyLimitsView* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMaxLotsResponse_BuyLimitsView));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMaxLotsResponse_BuyLimitsView(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMaxLotsResponse_BuyLimitsView(const GetMaxLotsResponse_BuyLimitsView& from) : GetMaxLotsResponse_BuyLimitsView(nullptr, from) {}
  inline GetMaxLotsResponse_BuyLimitsView(GetMaxLotsResponse_BuyLimitsView&& from) noexcept
      : GetMaxLotsResponse_BuyLimitsView(nullptr, std::move(from)) {}
  inline GetMaxLotsResponse_BuyLimitsView& operator=(const GetMaxLotsResponse_BuyLimitsView& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMaxLotsResponse_BuyLimitsView& operator=(GetMaxLotsResponse_BuyLimitsView&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMaxLotsResponse_BuyLimitsView& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMaxLotsResponse_BuyLimitsView* internal_default_instance() {
    return reinterpret_cast<const GetMaxLotsResponse_BuyLimitsView*>(
        &_GetMaxLotsResponse_BuyLimitsView_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(GetMaxLotsResponse_BuyLimitsView& a, GetMaxLotsResponse_BuyLimitsView& b) { a.Swap(&b); }
  inline void Swap(GetMaxLotsResponse_BuyLimitsView* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMaxLotsResponse_BuyLimitsView* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMaxLotsResponse_BuyLimitsView* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMaxLotsResponse_BuyLimitsView>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMaxLotsResponse_BuyLimitsView& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMaxLotsResponse_BuyLimitsView& from) { GetMaxLotsResponse_BuyLimitsView::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMaxLotsResponse_BuyLimitsView* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView"; }

 protected:
  explicit GetMaxLotsResponse_BuyLimitsView(::google::protobuf::Arena* arena);
  GetMaxLotsResponse_BuyLimitsView(::google::protobuf::Arena* arena, const GetMaxLotsResponse_BuyLimitsView& from);
  GetMaxLotsResponse_BuyLimitsView(::google::protobuf::Arena* arena, GetMaxLotsResponse_BuyLimitsView&& from) noexcept
      : GetMaxLotsResponse_BuyLimitsView(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBuyMoneyAmountFieldNumber = 1,
    kBuyMaxLotsFieldNumber = 2,
    kBuyMaxMarketLotsFieldNumber = 3,
  };
  // .tinkoff.public.invest.api.contract.v1.Quotation buy_money_amount = 1;
  bool has_buy_money_amount() const;
  void clear_buy_money_amount() ;
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& buy_money_amount() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Quotation* release_buy_money_amount();
  ::tinkoff::public_::invest::api::contract::v1::Quotation* mutable_buy_money_amount();
  void set_allocated_buy_money_amount(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  void unsafe_arena_set_allocated_buy_money_amount(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  ::tinkoff::public_::invest::api::contract::v1::Quotation* unsafe_arena_release_buy_money_amount();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& _internal_buy_money_amount() const;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _internal_mutable_buy_money_amount();

  public:
  // int64 buy_max_lots = 2;
  void clear_buy_max_lots() ;
  ::int64_t buy_max_lots() const;
  void set_buy_max_lots(::int64_t value);

  private:
  ::int64_t _internal_buy_max_lots() const;
  void _internal_set_buy_max_lots(::int64_t value);

  public:
  // int64 buy_max_market_lots = 3;
  void clear_buy_max_market_lots() ;
  ::int64_t buy_max_market_lots() const;
  void set_buy_max_market_lots(::int64_t value);

  private:
  ::int64_t _internal_buy_max_market_lots() const;
  void _internal_set_buy_max_market_lots(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMaxLotsResponse_BuyLimitsView& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tinkoff::public_::invest::api::contract::v1::Quotation* buy_money_amount_;
    ::int64_t buy_max_lots_;
    ::int64_t buy_max_market_lots_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class GetMaxLotsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest) */ {
 public:
  inline GetMaxLotsRequest() : GetMaxLotsRequest(nullptr) {}
  ~GetMaxLotsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMaxLotsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMaxLotsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMaxLotsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMaxLotsRequest(const GetMaxLotsRequest& from) : GetMaxLotsRequest(nullptr, from) {}
  inline GetMaxLotsRequest(GetMaxLotsRequest&& from) noexcept
      : GetMaxLotsRequest(nullptr, std::move(from)) {}
  inline GetMaxLotsRequest& operator=(const GetMaxLotsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMaxLotsRequest& operator=(GetMaxLotsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMaxLotsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMaxLotsRequest* internal_default_instance() {
    return reinterpret_cast<const GetMaxLotsRequest*>(
        &_GetMaxLotsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(GetMaxLotsRequest& a, GetMaxLotsRequest& b) { a.Swap(&b); }
  inline void Swap(GetMaxLotsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMaxLotsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMaxLotsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMaxLotsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMaxLotsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMaxLotsRequest& from) { GetMaxLotsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMaxLotsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest"; }

 protected:
  explicit GetMaxLotsRequest(::google::protobuf::Arena* arena);
  GetMaxLotsRequest(::google::protobuf::Arena* arena, const GetMaxLotsRequest& from);
  GetMaxLotsRequest(::google::protobuf::Arena* arena, GetMaxLotsRequest&& from) noexcept
      : GetMaxLotsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kInstrumentIdFieldNumber = 2,
    kPriceFieldNumber = 3,
  };
  // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // string instrument_id = 2 [(.google.api.field_behavior) = REQUIRED];
  void clear_instrument_id() ;
  const std::string& instrument_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instrument_id(Arg_&& arg, Args_... args);
  std::string* mutable_instrument_id();
  PROTOBUF_NODISCARD std::string* release_instrument_id();
  void set_allocated_instrument_id(std::string* value);

  private:
  const std::string& _internal_instrument_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instrument_id(
      const std::string& value);
  std::string* _internal_mutable_instrument_id();

  public:
  // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
  bool has_price() const;
  void clear_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Quotation* release_price();
  ::tinkoff::public_::invest::api::contract::v1::Quotation* mutable_price();
  void set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  void unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  ::tinkoff::public_::invest::api::contract::v1::Quotation* unsafe_arena_release_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& _internal_price() const;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _internal_mutable_price();

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      87, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMaxLotsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr instrument_id_;
    ::tinkoff::public_::invest::api::contract::v1::Quotation* price_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class PostOrderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.PostOrderResponse) */ {
 public:
  inline PostOrderResponse() : PostOrderResponse(nullptr) {}
  ~PostOrderResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PostOrderResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PostOrderResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PostOrderResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PostOrderResponse(const PostOrderResponse& from) : PostOrderResponse(nullptr, from) {}
  inline PostOrderResponse(PostOrderResponse&& from) noexcept
      : PostOrderResponse(nullptr, std::move(from)) {}
  inline PostOrderResponse& operator=(const PostOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostOrderResponse& operator=(PostOrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PostOrderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PostOrderResponse* internal_default_instance() {
    return reinterpret_cast<const PostOrderResponse*>(
        &_PostOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(PostOrderResponse& a, PostOrderResponse& b) { a.Swap(&b); }
  inline void Swap(PostOrderResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PostOrderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PostOrderResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PostOrderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PostOrderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PostOrderResponse& from) { PostOrderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PostOrderResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.PostOrderResponse"; }

 protected:
  explicit PostOrderResponse(::google::protobuf::Arena* arena);
  PostOrderResponse(::google::protobuf::Arena* arena, const PostOrderResponse& from);
  PostOrderResponse(::google::protobuf::Arena* arena, PostOrderResponse&& from) noexcept
      : PostOrderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderIdFieldNumber = 1,
    kFigiFieldNumber = 11,
    kMessageFieldNumber = 15,
    kInstrumentUidFieldNumber = 17,
    kOrderRequestIdFieldNumber = 20,
    kInitialOrderPriceFieldNumber = 5,
    kExecutedOrderPriceFieldNumber = 6,
    kTotalOrderAmountFieldNumber = 7,
    kInitialCommissionFieldNumber = 8,
    kExecutedCommissionFieldNumber = 9,
    kAciValueFieldNumber = 10,
    kInitialSecurityPriceFieldNumber = 13,
    kInitialOrderPricePtFieldNumber = 16,
    kResponseMetadataFieldNumber = 254,
    kLotsRequestedFieldNumber = 3,
    kLotsExecutedFieldNumber = 4,
    kExecutionReportStatusFieldNumber = 2,
    kDirectionFieldNumber = 12,
    kOrderTypeFieldNumber = 14,
  };
  // string order_id = 1;
  void clear_order_id() ;
  const std::string& order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_id();
  PROTOBUF_NODISCARD std::string* release_order_id();
  void set_allocated_order_id(std::string* value);

  private:
  const std::string& _internal_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_id(
      const std::string& value);
  std::string* _internal_mutable_order_id();

  public:
  // string figi = 11;
  void clear_figi() ;
  const std::string& figi() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_figi(Arg_&& arg, Args_... args);
  std::string* mutable_figi();
  PROTOBUF_NODISCARD std::string* release_figi();
  void set_allocated_figi(std::string* value);

  private:
  const std::string& _internal_figi() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_figi(
      const std::string& value);
  std::string* _internal_mutable_figi();

  public:
  // string message = 15;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // string instrument_uid = 17;
  void clear_instrument_uid() ;
  const std::string& instrument_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instrument_uid(Arg_&& arg, Args_... args);
  std::string* mutable_instrument_uid();
  PROTOBUF_NODISCARD std::string* release_instrument_uid();
  void set_allocated_instrument_uid(std::string* value);

  private:
  const std::string& _internal_instrument_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instrument_uid(
      const std::string& value);
  std::string* _internal_mutable_instrument_uid();

  public:
  // string order_request_id = 20;
  void clear_order_request_id() ;
  const std::string& order_request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_request_id();
  PROTOBUF_NODISCARD std::string* release_order_request_id();
  void set_allocated_order_request_id(std::string* value);

  private:
  const std::string& _internal_order_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_request_id(
      const std::string& value);
  std::string* _internal_mutable_order_request_id();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
  bool has_initial_order_price() const;
  void clear_initial_order_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& initial_order_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_initial_order_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_initial_order_price();
  void set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_initial_order_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_initial_order_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_initial_order_price();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
  bool has_executed_order_price() const;
  void clear_executed_order_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& executed_order_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_executed_order_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_executed_order_price();
  void set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_executed_order_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_executed_order_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_executed_order_price();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
  bool has_total_order_amount() const;
  void clear_total_order_amount() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& total_order_amount() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_total_order_amount();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_total_order_amount();
  void set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_total_order_amount();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_total_order_amount() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_total_order_amount();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;
  bool has_initial_commission() const;
  void clear_initial_commission() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& initial_commission() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_initial_commission();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_initial_commission();
  void set_allocated_initial_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_initial_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_initial_commission();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_initial_commission() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_initial_commission();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;
  bool has_executed_commission() const;
  void clear_executed_commission() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& executed_commission() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_executed_commission();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_executed_commission();
  void set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_executed_commission();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_executed_commission() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_executed_commission();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;
  bool has_aci_value() const;
  void clear_aci_value() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& aci_value() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_aci_value();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_aci_value();
  void set_allocated_aci_value(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_aci_value(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_aci_value();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_aci_value() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_aci_value();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
  bool has_initial_security_price() const;
  void clear_initial_security_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& initial_security_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_initial_security_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_initial_security_price();
  void set_allocated_initial_security_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_initial_security_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_initial_security_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_initial_security_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_initial_security_price();

  public:
  // .tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;
  bool has_initial_order_price_pt() const;
  void clear_initial_order_price_pt() ;
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& initial_order_price_pt() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Quotation* release_initial_order_price_pt();
  ::tinkoff::public_::invest::api::contract::v1::Quotation* mutable_initial_order_price_pt();
  void set_allocated_initial_order_price_pt(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  void unsafe_arena_set_allocated_initial_order_price_pt(::tinkoff::public_::invest::api::contract::v1::Quotation* value);
  ::tinkoff::public_::invest::api::contract::v1::Quotation* unsafe_arena_release_initial_order_price_pt();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Quotation& _internal_initial_order_price_pt() const;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _internal_mutable_initial_order_price_pt();

  public:
  // .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
  bool has_response_metadata() const;
  void clear_response_metadata() ;
  const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata& response_metadata() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* release_response_metadata();
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* mutable_response_metadata();
  void set_allocated_response_metadata(::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* value);
  void unsafe_arena_set_allocated_response_metadata(::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* value);
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* unsafe_arena_release_response_metadata();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata& _internal_response_metadata() const;
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* _internal_mutable_response_metadata();

  public:
  // int64 lots_requested = 3;
  void clear_lots_requested() ;
  ::int64_t lots_requested() const;
  void set_lots_requested(::int64_t value);

  private:
  ::int64_t _internal_lots_requested() const;
  void _internal_set_lots_requested(::int64_t value);

  public:
  // int64 lots_executed = 4;
  void clear_lots_executed() ;
  ::int64_t lots_executed() const;
  void set_lots_executed(::int64_t value);

  private:
  ::int64_t _internal_lots_executed() const;
  void _internal_set_lots_executed(::int64_t value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
  void clear_execution_report_status() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus execution_report_status() const;
  void set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus _internal_execution_report_status() const;
  void _internal_set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
  void clear_direction() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection direction() const;
  void set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection _internal_direction() const;
  void _internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;
  void clear_order_type() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderType order_type() const;
  void set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderType _internal_order_type() const;
  void _internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 19, 9,
      129, 7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PostOrderResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr order_id_;
    ::google::protobuf::internal::ArenaStringPtr figi_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::internal::ArenaStringPtr instrument_uid_;
    ::google::protobuf::internal::ArenaStringPtr order_request_id_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* initial_order_price_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* executed_order_price_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* total_order_amount_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* initial_commission_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* executed_commission_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* aci_value_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* initial_security_price_;
    ::tinkoff::public_::invest::api::contract::v1::Quotation* initial_order_price_pt_;
    ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* response_metadata_;
    ::int64_t lots_requested_;
    ::int64_t lots_executed_;
    int execution_report_status_;
    int direction_;
    int order_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class OrderTrades final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.OrderTrades) */ {
 public:
  inline OrderTrades() : OrderTrades(nullptr) {}
  ~OrderTrades() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderTrades* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderTrades));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderTrades(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderTrades(const OrderTrades& from) : OrderTrades(nullptr, from) {}
  inline OrderTrades(OrderTrades&& from) noexcept
      : OrderTrades(nullptr, std::move(from)) {}
  inline OrderTrades& operator=(const OrderTrades& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderTrades& operator=(OrderTrades&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderTrades& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderTrades* internal_default_instance() {
    return reinterpret_cast<const OrderTrades*>(
        &_OrderTrades_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(OrderTrades& a, OrderTrades& b) { a.Swap(&b); }
  inline void Swap(OrderTrades* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderTrades* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderTrades* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderTrades>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderTrades& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderTrades& from) { OrderTrades::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderTrades* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.OrderTrades"; }

 protected:
  explicit OrderTrades(::google::protobuf::Arena* arena);
  OrderTrades(::google::protobuf::Arena* arena, const OrderTrades& from);
  OrderTrades(::google::protobuf::Arena* arena, OrderTrades&& from) noexcept
      : OrderTrades(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTradesFieldNumber = 5,
    kOrderIdFieldNumber = 1,
    kFigiFieldNumber = 4,
    kAccountIdFieldNumber = 6,
    kInstrumentUidFieldNumber = 7,
    kCreatedAtFieldNumber = 2,
    kDirectionFieldNumber = 3,
  };
  // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 5;
  int trades_size() const;
  private:
  int _internal_trades_size() const;

  public:
  void clear_trades() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderTrade* mutable_trades(int index);
  ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>* mutable_trades();

  private:
  const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>& _internal_trades() const;
  ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>* _internal_mutable_trades();
  public:
  const ::tinkoff::public_::invest::api::contract::v1::OrderTrade& trades(int index) const;
  ::tinkoff::public_::invest::api::contract::v1::OrderTrade* add_trades();
  const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>& trades() const;
  // string order_id = 1;
  void clear_order_id() ;
  const std::string& order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_id();
  PROTOBUF_NODISCARD std::string* release_order_id();
  void set_allocated_order_id(std::string* value);

  private:
  const std::string& _internal_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_id(
      const std::string& value);
  std::string* _internal_mutable_order_id();

  public:
  // string figi = 4;
  void clear_figi() ;
  const std::string& figi() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_figi(Arg_&& arg, Args_... args);
  std::string* mutable_figi();
  PROTOBUF_NODISCARD std::string* release_figi();
  void set_allocated_figi(std::string* value);

  private:
  const std::string& _internal_figi() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_figi(
      const std::string& value);
  std::string* _internal_mutable_figi();

  public:
  // string account_id = 6;
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // string instrument_uid = 7;
  void clear_instrument_uid() ;
  const std::string& instrument_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instrument_uid(Arg_&& arg, Args_... args);
  std::string* mutable_instrument_uid();
  PROTOBUF_NODISCARD std::string* release_instrument_uid();
  void set_allocated_instrument_uid(std::string* value);

  private:
  const std::string& _internal_instrument_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instrument_uid(
      const std::string& value);
  std::string* _internal_mutable_instrument_uid();

  public:
  // .google.protobuf.Timestamp created_at = 2;
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 3;
  void clear_direction() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection direction() const;
  void set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection _internal_direction() const;
  void _internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.OrderTrades)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      94, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderTrades& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tinkoff::public_::invest::api::contract::v1::OrderTrade > trades_;
    ::google::protobuf::internal::ArenaStringPtr order_id_;
    ::google::protobuf::internal::ArenaStringPtr figi_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr instrument_uid_;
    ::google::protobuf::Timestamp* created_at_;
    int direction_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class OrderStateStreamResponse_OrderState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState) */ {
 public:
  inline OrderStateStreamResponse_OrderState() : OrderStateStreamResponse_OrderState(nullptr) {}
  ~OrderStateStreamResponse_OrderState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderStateStreamResponse_OrderState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderStateStreamResponse_OrderState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderStateStreamResponse_OrderState(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderStateStreamResponse_OrderState(const OrderStateStreamResponse_OrderState& from) : OrderStateStreamResponse_OrderState(nullptr, from) {}
  inline OrderStateStreamResponse_OrderState(OrderStateStreamResponse_OrderState&& from) noexcept
      : OrderStateStreamResponse_OrderState(nullptr, std::move(from)) {}
  inline OrderStateStreamResponse_OrderState& operator=(const OrderStateStreamResponse_OrderState& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderStateStreamResponse_OrderState& operator=(OrderStateStreamResponse_OrderState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderStateStreamResponse_OrderState& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderStateStreamResponse_OrderState* internal_default_instance() {
    return reinterpret_cast<const OrderStateStreamResponse_OrderState*>(
        &_OrderStateStreamResponse_OrderState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(OrderStateStreamResponse_OrderState& a, OrderStateStreamResponse_OrderState& b) { a.Swap(&b); }
  inline void Swap(OrderStateStreamResponse_OrderState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderStateStreamResponse_OrderState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderStateStreamResponse_OrderState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderStateStreamResponse_OrderState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderStateStreamResponse_OrderState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderStateStreamResponse_OrderState& from) { OrderStateStreamResponse_OrderState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderStateStreamResponse_OrderState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState"; }

 protected:
  explicit OrderStateStreamResponse_OrderState(::google::protobuf::Arena* arena);
  OrderStateStreamResponse_OrderState(::google::protobuf::Arena* arena, const OrderStateStreamResponse_OrderState& from);
  OrderStateStreamResponse_OrderState(::google::protobuf::Arena* arena, OrderStateStreamResponse_OrderState&& from) noexcept
      : OrderStateStreamResponse_OrderState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTradesFieldNumber = 33,
    kOrderIdFieldNumber = 1,
    kOrderRequestIdFieldNumber = 2,
    kClientCodeFieldNumber = 3,
    kTickerFieldNumber = 7,
    kClassCodeFieldNumber = 8,
    kAccountIdFieldNumber = 13,
    kCurrencyFieldNumber = 26,
    kExchangeFieldNumber = 36,
    kInstrumentUidFieldNumber = 41,
    kCreatedAtFieldNumber = 4,
    kInitialOrderPriceFieldNumber = 22,
    kOrderPriceFieldNumber = 23,
    kAmountFieldNumber = 24,
    kExecutedOrderPriceFieldNumber = 25,
    kCompletionTimeFieldNumber = 35,
    kExecutionReportStatusFieldNumber = 5,
    kStatusInfoFieldNumber = 6,
    kLotSizeFieldNumber = 9,
    kDirectionFieldNumber = 10,
    kTimeInForceFieldNumber = 11,
    kOrderTypeFieldNumber = 12,
    kLotsRequestedFieldNumber = 27,
    kLotsExecutedFieldNumber = 28,
    kLotsLeftFieldNumber = 29,
    kLotsCancelledFieldNumber = 30,
    kMarkerFieldNumber = 31,
  };
  // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 33;
  int trades_size() const;
  private:
  int _internal_trades_size() const;

  public:
  void clear_trades() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderTrade* mutable_trades(int index);
  ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>* mutable_trades();

  private:
  const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>& _internal_trades() const;
  ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>* _internal_mutable_trades();
  public:
  const ::tinkoff::public_::invest::api::contract::v1::OrderTrade& trades(int index) const;
  ::tinkoff::public_::invest::api::contract::v1::OrderTrade* add_trades();
  const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>& trades() const;
  // string order_id = 1;
  void clear_order_id() ;
  const std::string& order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_id();
  PROTOBUF_NODISCARD std::string* release_order_id();
  void set_allocated_order_id(std::string* value);

  private:
  const std::string& _internal_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_id(
      const std::string& value);
  std::string* _internal_mutable_order_id();

  public:
  // optional string order_request_id = 2;
  bool has_order_request_id() const;
  void clear_order_request_id() ;
  const std::string& order_request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_request_id();
  PROTOBUF_NODISCARD std::string* release_order_request_id();
  void set_allocated_order_request_id(std::string* value);

  private:
  const std::string& _internal_order_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_request_id(
      const std::string& value);
  std::string* _internal_mutable_order_request_id();

  public:
  // string client_code = 3;
  void clear_client_code() ;
  const std::string& client_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_code(Arg_&& arg, Args_... args);
  std::string* mutable_client_code();
  PROTOBUF_NODISCARD std::string* release_client_code();
  void set_allocated_client_code(std::string* value);

  private:
  const std::string& _internal_client_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_code(
      const std::string& value);
  std::string* _internal_mutable_client_code();

  public:
  // string ticker = 7;
  void clear_ticker() ;
  const std::string& ticker() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ticker(Arg_&& arg, Args_... args);
  std::string* mutable_ticker();
  PROTOBUF_NODISCARD std::string* release_ticker();
  void set_allocated_ticker(std::string* value);

  private:
  const std::string& _internal_ticker() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ticker(
      const std::string& value);
  std::string* _internal_mutable_ticker();

  public:
  // string class_code = 8;
  void clear_class_code() ;
  const std::string& class_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_class_code(Arg_&& arg, Args_... args);
  std::string* mutable_class_code();
  PROTOBUF_NODISCARD std::string* release_class_code();
  void set_allocated_class_code(std::string* value);

  private:
  const std::string& _internal_class_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_class_code(
      const std::string& value);
  std::string* _internal_mutable_class_code();

  public:
  // string account_id = 13;
  void clear_account_id() ;
  const std::string& account_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  std::string* mutable_account_id();
  PROTOBUF_NODISCARD std::string* release_account_id();
  void set_allocated_account_id(std::string* value);

  private:
  const std::string& _internal_account_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(
      const std::string& value);
  std::string* _internal_mutable_account_id();

  public:
  // string currency = 26;
  void clear_currency() ;
  const std::string& currency() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currency(Arg_&& arg, Args_... args);
  std::string* mutable_currency();
  PROTOBUF_NODISCARD std::string* release_currency();
  void set_allocated_currency(std::string* value);

  private:
  const std::string& _internal_currency() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currency(
      const std::string& value);
  std::string* _internal_mutable_currency();

  public:
  // string exchange = 36;
  void clear_exchange() ;
  const std::string& exchange() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_exchange(Arg_&& arg, Args_... args);
  std::string* mutable_exchange();
  PROTOBUF_NODISCARD std::string* release_exchange();
  void set_allocated_exchange(std::string* value);

  private:
  const std::string& _internal_exchange() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_exchange(
      const std::string& value);
  std::string* _internal_mutable_exchange();

  public:
  // string instrument_uid = 41;
  void clear_instrument_uid() ;
  const std::string& instrument_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instrument_uid(Arg_&& arg, Args_... args);
  std::string* mutable_instrument_uid();
  PROTOBUF_NODISCARD std::string* release_instrument_uid();
  void set_allocated_instrument_uid(std::string* value);

  private:
  const std::string& _internal_instrument_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instrument_uid(
      const std::string& value);
  std::string* _internal_mutable_instrument_uid();

  public:
  // .google.protobuf.Timestamp created_at = 4;
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 22;
  bool has_initial_order_price() const;
  void clear_initial_order_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& initial_order_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_initial_order_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_initial_order_price();
  void set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_initial_order_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_initial_order_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_initial_order_price();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue order_price = 23;
  bool has_order_price() const;
  void clear_order_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& order_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_order_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_order_price();
  void set_allocated_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_order_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_order_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_order_price();

  public:
  // optional .tinkoff.public.invest.api.contract.v1.MoneyValue amount = 24;
  bool has_amount() const;
  void clear_amount() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& amount() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_amount();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_amount();
  void set_allocated_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_amount();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_amount() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_amount();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 25;
  bool has_executed_order_price() const;
  void clear_executed_order_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& executed_order_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_executed_order_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_executed_order_price();
  void set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_executed_order_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_executed_order_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_executed_order_price();

  public:
  // .google.protobuf.Timestamp completion_time = 35;
  bool has_completion_time() const;
  void clear_completion_time() ;
  const ::google::protobuf::Timestamp& completion_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_completion_time();
  ::google::protobuf::Timestamp* mutable_completion_time();
  void set_allocated_completion_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_completion_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_completion_time();

  private:
  const ::google::protobuf::Timestamp& _internal_completion_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_completion_time();

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 5;
  void clear_execution_report_status() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus execution_report_status() const;
  void set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus _internal_execution_report_status() const;
  void _internal_set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value);

  public:
  // optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.StatusCauseInfo status_info = 6;
  bool has_status_info() const;
  void clear_status_info() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo status_info() const;
  void set_status_info(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo _internal_status_info() const;
  void _internal_set_status_info(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo value);

  public:
  // int32 lot_size = 9;
  void clear_lot_size() ;
  ::int32_t lot_size() const;
  void set_lot_size(::int32_t value);

  private:
  ::int32_t _internal_lot_size() const;
  void _internal_set_lot_size(::int32_t value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 10;
  void clear_direction() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection direction() const;
  void set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection _internal_direction() const;
  void _internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  public:
  // .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 11;
  void clear_time_in_force() ;
  ::tinkoff::public_::invest::api::contract::v1::TimeInForceType time_in_force() const;
  void set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::TimeInForceType _internal_time_in_force() const;
  void _internal_set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 12;
  void clear_order_type() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderType order_type() const;
  void set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderType _internal_order_type() const;
  void _internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value);

  public:
  // int64 lots_requested = 27;
  void clear_lots_requested() ;
  ::int64_t lots_requested() const;
  void set_lots_requested(::int64_t value);

  private:
  ::int64_t _internal_lots_requested() const;
  void _internal_set_lots_requested(::int64_t value);

  public:
  // int64 lots_executed = 28;
  void clear_lots_executed() ;
  ::int64_t lots_executed() const;
  void set_lots_executed(::int64_t value);

  private:
  ::int64_t _internal_lots_executed() const;
  void _internal_set_lots_executed(::int64_t value);

  public:
  // int64 lots_left = 29;
  void clear_lots_left() ;
  ::int64_t lots_left() const;
  void set_lots_left(::int64_t value);

  private:
  ::int64_t _internal_lots_left() const;
  void _internal_set_lots_left(::int64_t value);

  public:
  // int64 lots_cancelled = 30;
  void clear_lots_cancelled() ;
  ::int64_t lots_cancelled() const;
  void set_lots_cancelled(::int64_t value);

  private:
  ::int64_t _internal_lots_cancelled() const;
  void _internal_set_lots_cancelled(::int64_t value);

  public:
  // optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.MarkerType marker = 31;
  bool has_marker() const;
  void clear_marker() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType marker() const;
  void set_marker(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType _internal_marker() const;
  void _internal_set_marker(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 27, 7,
      197, 7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderStateStreamResponse_OrderState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tinkoff::public_::invest::api::contract::v1::OrderTrade > trades_;
    ::google::protobuf::internal::ArenaStringPtr order_id_;
    ::google::protobuf::internal::ArenaStringPtr order_request_id_;
    ::google::protobuf::internal::ArenaStringPtr client_code_;
    ::google::protobuf::internal::ArenaStringPtr ticker_;
    ::google::protobuf::internal::ArenaStringPtr class_code_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr currency_;
    ::google::protobuf::internal::ArenaStringPtr exchange_;
    ::google::protobuf::internal::ArenaStringPtr instrument_uid_;
    ::google::protobuf::Timestamp* created_at_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* initial_order_price_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* order_price_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* amount_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* executed_order_price_;
    ::google::protobuf::Timestamp* completion_time_;
    int execution_report_status_;
    int status_info_;
    ::int32_t lot_size_;
    int direction_;
    int time_in_force_;
    int order_type_;
    ::int64_t lots_requested_;
    ::int64_t lots_executed_;
    ::int64_t lots_left_;
    ::int64_t lots_cancelled_;
    int marker_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class OrderState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.OrderState) */ {
 public:
  inline OrderState() : OrderState(nullptr) {}
  ~OrderState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderState(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderState(const OrderState& from) : OrderState(nullptr, from) {}
  inline OrderState(OrderState&& from) noexcept
      : OrderState(nullptr, std::move(from)) {}
  inline OrderState& operator=(const OrderState& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderState& operator=(OrderState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderState& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderState* internal_default_instance() {
    return reinterpret_cast<const OrderState*>(
        &_OrderState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(OrderState& a, OrderState& b) { a.Swap(&b); }
  inline void Swap(OrderState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderState& from) { OrderState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.OrderState"; }

 protected:
  explicit OrderState(::google::protobuf::Arena* arena);
  OrderState(::google::protobuf::Arena* arena, const OrderState& from);
  OrderState(::google::protobuf::Arena* arena, OrderState&& from) noexcept
      : OrderState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStagesFieldNumber = 14,
    kOrderIdFieldNumber = 1,
    kFigiFieldNumber = 11,
    kCurrencyFieldNumber = 16,
    kInstrumentUidFieldNumber = 19,
    kOrderRequestIdFieldNumber = 20,
    kInitialOrderPriceFieldNumber = 5,
    kExecutedOrderPriceFieldNumber = 6,
    kTotalOrderAmountFieldNumber = 7,
    kAveragePositionPriceFieldNumber = 8,
    kInitialCommissionFieldNumber = 9,
    kExecutedCommissionFieldNumber = 10,
    kInitialSecurityPriceFieldNumber = 13,
    kServiceCommissionFieldNumber = 15,
    kOrderDateFieldNumber = 18,
    kLotsRequestedFieldNumber = 3,
    kLotsExecutedFieldNumber = 4,
    kExecutionReportStatusFieldNumber = 2,
    kDirectionFieldNumber = 12,
    kOrderTypeFieldNumber = 17,
  };
  // repeated .tinkoff.public.invest.api.contract.v1.OrderStage stages = 14;
  int stages_size() const;
  private:
  int _internal_stages_size() const;

  public:
  void clear_stages() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderStage* mutable_stages(int index);
  ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderStage>* mutable_stages();

  private:
  const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderStage>& _internal_stages() const;
  ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderStage>* _internal_mutable_stages();
  public:
  const ::tinkoff::public_::invest::api::contract::v1::OrderStage& stages(int index) const;
  ::tinkoff::public_::invest::api::contract::v1::OrderStage* add_stages();
  const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderStage>& stages() const;
  // string order_id = 1;
  void clear_order_id() ;
  const std::string& order_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_id();
  PROTOBUF_NODISCARD std::string* release_order_id();
  void set_allocated_order_id(std::string* value);

  private:
  const std::string& _internal_order_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_id(
      const std::string& value);
  std::string* _internal_mutable_order_id();

  public:
  // string figi = 11;
  void clear_figi() ;
  const std::string& figi() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_figi(Arg_&& arg, Args_... args);
  std::string* mutable_figi();
  PROTOBUF_NODISCARD std::string* release_figi();
  void set_allocated_figi(std::string* value);

  private:
  const std::string& _internal_figi() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_figi(
      const std::string& value);
  std::string* _internal_mutable_figi();

  public:
  // string currency = 16;
  void clear_currency() ;
  const std::string& currency() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currency(Arg_&& arg, Args_... args);
  std::string* mutable_currency();
  PROTOBUF_NODISCARD std::string* release_currency();
  void set_allocated_currency(std::string* value);

  private:
  const std::string& _internal_currency() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currency(
      const std::string& value);
  std::string* _internal_mutable_currency();

  public:
  // string instrument_uid = 19;
  void clear_instrument_uid() ;
  const std::string& instrument_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_instrument_uid(Arg_&& arg, Args_... args);
  std::string* mutable_instrument_uid();
  PROTOBUF_NODISCARD std::string* release_instrument_uid();
  void set_allocated_instrument_uid(std::string* value);

  private:
  const std::string& _internal_instrument_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instrument_uid(
      const std::string& value);
  std::string* _internal_mutable_instrument_uid();

  public:
  // string order_request_id = 20;
  void clear_order_request_id() ;
  const std::string& order_request_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_request_id(Arg_&& arg, Args_... args);
  std::string* mutable_order_request_id();
  PROTOBUF_NODISCARD std::string* release_order_request_id();
  void set_allocated_order_request_id(std::string* value);

  private:
  const std::string& _internal_order_request_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_order_request_id(
      const std::string& value);
  std::string* _internal_mutable_order_request_id();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
  bool has_initial_order_price() const;
  void clear_initial_order_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& initial_order_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_initial_order_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_initial_order_price();
  void set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_initial_order_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_initial_order_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_initial_order_price();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
  bool has_executed_order_price() const;
  void clear_executed_order_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& executed_order_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_executed_order_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_executed_order_price();
  void set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_executed_order_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_executed_order_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_executed_order_price();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
  bool has_total_order_amount() const;
  void clear_total_order_amount() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& total_order_amount() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_total_order_amount();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_total_order_amount();
  void set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_total_order_amount();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_total_order_amount() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_total_order_amount();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 8;
  bool has_average_position_price() const;
  void clear_average_position_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& average_position_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_average_position_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_average_position_price();
  void set_allocated_average_position_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_average_position_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_average_position_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_average_position_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_average_position_price();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 9;
  bool has_initial_commission() const;
  void clear_initial_commission() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& initial_commission() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_initial_commission();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_initial_commission();
  void set_allocated_initial_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_initial_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_initial_commission();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_initial_commission() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_initial_commission();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 10;
  bool has_executed_commission() const;
  void clear_executed_commission() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& executed_commission() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_executed_commission();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_executed_commission();
  void set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_executed_commission();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_executed_commission() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_executed_commission();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
  bool has_initial_security_price() const;
  void clear_initial_security_price() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& initial_security_price() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_initial_security_price();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_initial_security_price();
  void set_allocated_initial_security_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_initial_security_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_initial_security_price();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_initial_security_price() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_initial_security_price();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 15;
  bool has_service_commission() const;
  void clear_service_commission() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& service_commission() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_service_commission();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_service_commission();
  void set_allocated_service_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_service_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_service_commission();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_service_commission() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_service_commission();

  public:
  // .google.protobuf.Timestamp order_date = 18;
  bool has_order_date() const;
  void clear_order_date() ;
  const ::google::protobuf::Timestamp& order_date() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_order_date();
  ::google::protobuf::Timestamp* mutable_order_date();
  void set_allocated_order_date(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_order_date(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_order_date();

  private:
  const ::google::protobuf::Timestamp& _internal_order_date() const;
  ::google::protobuf::Timestamp* _internal_mutable_order_date();

  public:
  // int64 lots_requested = 3;
  void clear_lots_requested() ;
  ::int64_t lots_requested() const;
  void set_lots_requested(::int64_t value);

  private:
  ::int64_t _internal_lots_requested() const;
  void _internal_set_lots_requested(::int64_t value);

  public:
  // int64 lots_executed = 4;
  void clear_lots_executed() ;
  ::int64_t lots_executed() const;
  void set_lots_executed(::int64_t value);

  private:
  ::int64_t _internal_lots_executed() const;
  void _internal_set_lots_executed(::int64_t value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
  void clear_execution_report_status() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus execution_report_status() const;
  void set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus _internal_execution_report_status() const;
  void _internal_set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
  void clear_direction() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection direction() const;
  void set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderDirection _internal_direction() const;
  void _internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value);

  public:
  // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 17;
  void clear_order_type() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderType order_type() const;
  void set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value);

  private:
  ::tinkoff::public_::invest::api::contract::v1::OrderType _internal_order_type() const;
  void _internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value);

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.OrderState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 20, 10,
      123, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::tinkoff::public_::invest::api::contract::v1::OrderStage > stages_;
    ::google::protobuf::internal::ArenaStringPtr order_id_;
    ::google::protobuf::internal::ArenaStringPtr figi_;
    ::google::protobuf::internal::ArenaStringPtr currency_;
    ::google::protobuf::internal::ArenaStringPtr instrument_uid_;
    ::google::protobuf::internal::ArenaStringPtr order_request_id_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* initial_order_price_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* executed_order_price_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* total_order_amount_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* average_position_price_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* initial_commission_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* executed_commission_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* initial_security_price_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* service_commission_;
    ::google::protobuf::Timestamp* order_date_;
    ::int64_t lots_requested_;
    ::int64_t lots_executed_;
    int execution_report_status_;
    int direction_;
    int order_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class GetOrderPriceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse) */ {
 public:
  inline GetOrderPriceResponse() : GetOrderPriceResponse(nullptr) {}
  ~GetOrderPriceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOrderPriceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOrderPriceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrderPriceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetOrderPriceResponse(const GetOrderPriceResponse& from) : GetOrderPriceResponse(nullptr, from) {}
  inline GetOrderPriceResponse(GetOrderPriceResponse&& from) noexcept
      : GetOrderPriceResponse(nullptr, std::move(from)) {}
  inline GetOrderPriceResponse& operator=(const GetOrderPriceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrderPriceResponse& operator=(GetOrderPriceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrderPriceResponse& default_instance() {
    return *internal_default_instance();
  }
  enum InstrumentExtraCase {
    kExtraBond = 12,
    kExtraFuture = 13,
    INSTRUMENT_EXTRA_NOT_SET = 0,
  };
  static inline const GetOrderPriceResponse* internal_default_instance() {
    return reinterpret_cast<const GetOrderPriceResponse*>(
        &_GetOrderPriceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(GetOrderPriceResponse& a, GetOrderPriceResponse& b) { a.Swap(&b); }
  inline void Swap(GetOrderPriceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrderPriceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrderPriceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOrderPriceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrderPriceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOrderPriceResponse& from) { GetOrderPriceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOrderPriceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse"; }

 protected:
  explicit GetOrderPriceResponse(::google::protobuf::Arena* arena);
  GetOrderPriceResponse(::google::protobuf::Arena* arena, const GetOrderPriceResponse& from);
  GetOrderPriceResponse(::google::protobuf::Arena* arena, GetOrderPriceResponse&& from) noexcept
      : GetOrderPriceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ExtraBond = GetOrderPriceResponse_ExtraBond;
  using ExtraFuture = GetOrderPriceResponse_ExtraFuture;

  // accessors -------------------------------------------------------
  enum : int {
    kTotalOrderAmountFieldNumber = 1,
    kInitialOrderAmountFieldNumber = 5,
    kExecutedCommissionFieldNumber = 7,
    kExecutedCommissionRubFieldNumber = 8,
    kServiceCommissionFieldNumber = 9,
    kDealCommissionFieldNumber = 10,
    kLotsRequestedFieldNumber = 3,
    kExtraBondFieldNumber = 12,
    kExtraFutureFieldNumber = 13,
  };
  // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 1;
  bool has_total_order_amount() const;
  void clear_total_order_amount() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& total_order_amount() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_total_order_amount();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_total_order_amount();
  void set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_total_order_amount();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_total_order_amount() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_total_order_amount();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_amount = 5;
  bool has_initial_order_amount() const;
  void clear_initial_order_amount() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& initial_order_amount() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_initial_order_amount();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_initial_order_amount();
  void set_allocated_initial_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_initial_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_initial_order_amount();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_initial_order_amount() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_initial_order_amount();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 7;
  bool has_executed_commission() const;
  void clear_executed_commission() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& executed_commission() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_executed_commission();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_executed_commission();
  void set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_executed_commission();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_executed_commission() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_executed_commission();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission_rub = 8;
  bool has_executed_commission_rub() const;
  void clear_executed_commission_rub() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& executed_commission_rub() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_executed_commission_rub();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_executed_commission_rub();
  void set_allocated_executed_commission_rub(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_executed_commission_rub(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_executed_commission_rub();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_executed_commission_rub() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_executed_commission_rub();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 9;
  bool has_service_commission() const;
  void clear_service_commission() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& service_commission() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_service_commission();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_service_commission();
  void set_allocated_service_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_service_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_service_commission();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_service_commission() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_service_commission();

  public:
  // .tinkoff.public.invest.api.contract.v1.MoneyValue deal_commission = 10;
  bool has_deal_commission() const;
  void clear_deal_commission() ;
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& deal_commission() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::MoneyValue* release_deal_commission();
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* mutable_deal_commission();
  void set_allocated_deal_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  void unsafe_arena_set_allocated_deal_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value);
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* unsafe_arena_release_deal_commission();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& _internal_deal_commission() const;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _internal_mutable_deal_commission();

  public:
  // int64 lots_requested = 3;
  void clear_lots_requested() ;
  ::int64_t lots_requested() const;
  void set_lots_requested(::int64_t value);

  private:
  ::int64_t _internal_lots_requested() const;
  void _internal_set_lots_requested(::int64_t value);

  public:
  // .tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond extra_bond = 12;
  bool has_extra_bond() const;
  private:
  bool _internal_has_extra_bond() const;

  public:
  void clear_extra_bond() ;
  const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond& extra_bond() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* release_extra_bond();
  ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* mutable_extra_bond();
  void set_allocated_extra_bond(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* value);
  void unsafe_arena_set_allocated_extra_bond(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* value);
  ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* unsafe_arena_release_extra_bond();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond& _internal_extra_bond() const;
  ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* _internal_mutable_extra_bond();

  public:
  // .tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture extra_future = 13;
  bool has_extra_future() const;
  private:
  bool _internal_has_extra_future() const;

  public:
  void clear_extra_future() ;
  const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture& extra_future() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* release_extra_future();
  ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* mutable_extra_future();
  void set_allocated_extra_future(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* value);
  void unsafe_arena_set_allocated_extra_future(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* value);
  ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* unsafe_arena_release_extra_future();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture& _internal_extra_future() const;
  ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* _internal_mutable_extra_future();

  public:
  void clear_instrument_extra();
  InstrumentExtraCase instrument_extra_case() const;
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse)
 private:
  class _Internal;
  void set_has_extra_bond();
  void set_has_extra_future();
  inline bool has_instrument_extra() const;
  inline void clear_has_instrument_extra();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 8,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetOrderPriceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* total_order_amount_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* initial_order_amount_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* executed_commission_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* executed_commission_rub_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* service_commission_;
    ::tinkoff::public_::invest::api::contract::v1::MoneyValue* deal_commission_;
    ::int64_t lots_requested_;
    union InstrumentExtraUnion {
      constexpr InstrumentExtraUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* extra_bond_;
      ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* extra_future_;
    } instrument_extra_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class GetMaxLotsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse) */ {
 public:
  inline GetMaxLotsResponse() : GetMaxLotsResponse(nullptr) {}
  ~GetMaxLotsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMaxLotsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMaxLotsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMaxLotsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetMaxLotsResponse(const GetMaxLotsResponse& from) : GetMaxLotsResponse(nullptr, from) {}
  inline GetMaxLotsResponse(GetMaxLotsResponse&& from) noexcept
      : GetMaxLotsResponse(nullptr, std::move(from)) {}
  inline GetMaxLotsResponse& operator=(const GetMaxLotsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMaxLotsResponse& operator=(GetMaxLotsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMaxLotsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMaxLotsResponse* internal_default_instance() {
    return reinterpret_cast<const GetMaxLotsResponse*>(
        &_GetMaxLotsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(GetMaxLotsResponse& a, GetMaxLotsResponse& b) { a.Swap(&b); }
  inline void Swap(GetMaxLotsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMaxLotsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMaxLotsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMaxLotsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMaxLotsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMaxLotsResponse& from) { GetMaxLotsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMaxLotsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse"; }

 protected:
  explicit GetMaxLotsResponse(::google::protobuf::Arena* arena);
  GetMaxLotsResponse(::google::protobuf::Arena* arena, const GetMaxLotsResponse& from);
  GetMaxLotsResponse(::google::protobuf::Arena* arena, GetMaxLotsResponse&& from) noexcept
      : GetMaxLotsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using BuyLimitsView = GetMaxLotsResponse_BuyLimitsView;
  using SellLimitsView = GetMaxLotsResponse_SellLimitsView;

  // accessors -------------------------------------------------------
  enum : int {
    kCurrencyFieldNumber = 1,
    kBuyLimitsFieldNumber = 2,
    kBuyMarginLimitsFieldNumber = 3,
    kSellLimitsFieldNumber = 4,
    kSellMarginLimitsFieldNumber = 5,
  };
  // string currency = 1;
  void clear_currency() ;
  const std::string& currency() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currency(Arg_&& arg, Args_... args);
  std::string* mutable_currency();
  PROTOBUF_NODISCARD std::string* release_currency();
  void set_allocated_currency(std::string* value);

  private:
  const std::string& _internal_currency() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currency(
      const std::string& value);
  std::string* _internal_mutable_currency();

  public:
  // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_limits = 2;
  bool has_buy_limits() const;
  void clear_buy_limits() ;
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView& buy_limits() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* release_buy_limits();
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* mutable_buy_limits();
  void set_allocated_buy_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* value);
  void unsafe_arena_set_allocated_buy_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* value);
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* unsafe_arena_release_buy_limits();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView& _internal_buy_limits() const;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* _internal_mutable_buy_limits();

  public:
  // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_margin_limits = 3;
  bool has_buy_margin_limits() const;
  void clear_buy_margin_limits() ;
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView& buy_margin_limits() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* release_buy_margin_limits();
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* mutable_buy_margin_limits();
  void set_allocated_buy_margin_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* value);
  void unsafe_arena_set_allocated_buy_margin_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* value);
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* unsafe_arena_release_buy_margin_limits();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView& _internal_buy_margin_limits() const;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* _internal_mutable_buy_margin_limits();

  public:
  // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_limits = 4;
  bool has_sell_limits() const;
  void clear_sell_limits() ;
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView& sell_limits() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* release_sell_limits();
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* mutable_sell_limits();
  void set_allocated_sell_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* value);
  void unsafe_arena_set_allocated_sell_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* value);
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* unsafe_arena_release_sell_limits();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView& _internal_sell_limits() const;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* _internal_mutable_sell_limits();

  public:
  // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_margin_limits = 5;
  bool has_sell_margin_limits() const;
  void clear_sell_margin_limits() ;
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView& sell_margin_limits() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* release_sell_margin_limits();
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* mutable_sell_margin_limits();
  void set_allocated_sell_margin_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* value);
  void unsafe_arena_set_allocated_sell_margin_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* value);
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* unsafe_arena_release_sell_margin_limits();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView& _internal_sell_margin_limits() const;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* _internal_mutable_sell_margin_limits();

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 4,
      73, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetMaxLotsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr currency_;
    ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* buy_limits_;
    ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* buy_margin_limits_;
    ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* sell_limits_;
    ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* sell_margin_limits_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class CancelOrderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.CancelOrderResponse) */ {
 public:
  inline CancelOrderResponse() : CancelOrderResponse(nullptr) {}
  ~CancelOrderResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CancelOrderResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CancelOrderResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CancelOrderResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CancelOrderResponse(const CancelOrderResponse& from) : CancelOrderResponse(nullptr, from) {}
  inline CancelOrderResponse(CancelOrderResponse&& from) noexcept
      : CancelOrderResponse(nullptr, std::move(from)) {}
  inline CancelOrderResponse& operator=(const CancelOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelOrderResponse& operator=(CancelOrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CancelOrderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CancelOrderResponse* internal_default_instance() {
    return reinterpret_cast<const CancelOrderResponse*>(
        &_CancelOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CancelOrderResponse& a, CancelOrderResponse& b) { a.Swap(&b); }
  inline void Swap(CancelOrderResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelOrderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CancelOrderResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CancelOrderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CancelOrderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CancelOrderResponse& from) { CancelOrderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CancelOrderResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.CancelOrderResponse"; }

 protected:
  explicit CancelOrderResponse(::google::protobuf::Arena* arena);
  CancelOrderResponse(::google::protobuf::Arena* arena, const CancelOrderResponse& from);
  CancelOrderResponse(::google::protobuf::Arena* arena, CancelOrderResponse&& from) noexcept
      : CancelOrderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeFieldNumber = 1,
    kResponseMetadataFieldNumber = 254,
  };
  // .google.protobuf.Timestamp time = 1;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_time();
  ::google::protobuf::Timestamp* mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_time();

  public:
  // .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
  bool has_response_metadata() const;
  void clear_response_metadata() ;
  const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata& response_metadata() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* release_response_metadata();
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* mutable_response_metadata();
  void set_allocated_response_metadata(::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* value);
  void unsafe_arena_set_allocated_response_metadata(::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* value);
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* unsafe_arena_release_response_metadata();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata& _internal_response_metadata() const;
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* _internal_mutable_response_metadata();

  public:
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CancelOrderResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* time_;
    ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* response_metadata_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class TradesStreamResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.TradesStreamResponse) */ {
 public:
  inline TradesStreamResponse() : TradesStreamResponse(nullptr) {}
  ~TradesStreamResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TradesStreamResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TradesStreamResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TradesStreamResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TradesStreamResponse(const TradesStreamResponse& from) : TradesStreamResponse(nullptr, from) {}
  inline TradesStreamResponse(TradesStreamResponse&& from) noexcept
      : TradesStreamResponse(nullptr, std::move(from)) {}
  inline TradesStreamResponse& operator=(const TradesStreamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TradesStreamResponse& operator=(TradesStreamResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TradesStreamResponse& default_instance() {
    return *internal_default_instance();
  }
  enum PayloadCase {
    kOrderTrades = 1,
    kPing = 2,
    kSubscription = 3,
    PAYLOAD_NOT_SET = 0,
  };
  static inline const TradesStreamResponse* internal_default_instance() {
    return reinterpret_cast<const TradesStreamResponse*>(
        &_TradesStreamResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TradesStreamResponse& a, TradesStreamResponse& b) { a.Swap(&b); }
  inline void Swap(TradesStreamResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TradesStreamResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TradesStreamResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TradesStreamResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TradesStreamResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TradesStreamResponse& from) { TradesStreamResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TradesStreamResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.TradesStreamResponse"; }

 protected:
  explicit TradesStreamResponse(::google::protobuf::Arena* arena);
  TradesStreamResponse(::google::protobuf::Arena* arena, const TradesStreamResponse& from);
  TradesStreamResponse(::google::protobuf::Arena* arena, TradesStreamResponse&& from) noexcept
      : TradesStreamResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderTradesFieldNumber = 1,
    kPingFieldNumber = 2,
    kSubscriptionFieldNumber = 3,
  };
  // .tinkoff.public.invest.api.contract.v1.OrderTrades order_trades = 1;
  bool has_order_trades() const;
  private:
  bool _internal_has_order_trades() const;

  public:
  void clear_order_trades() ;
  const ::tinkoff::public_::invest::api::contract::v1::OrderTrades& order_trades() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::OrderTrades* release_order_trades();
  ::tinkoff::public_::invest::api::contract::v1::OrderTrades* mutable_order_trades();
  void set_allocated_order_trades(::tinkoff::public_::invest::api::contract::v1::OrderTrades* value);
  void unsafe_arena_set_allocated_order_trades(::tinkoff::public_::invest::api::contract::v1::OrderTrades* value);
  ::tinkoff::public_::invest::api::contract::v1::OrderTrades* unsafe_arena_release_order_trades();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::OrderTrades& _internal_order_trades() const;
  ::tinkoff::public_::invest::api::contract::v1::OrderTrades* _internal_mutable_order_trades();

  public:
  // .tinkoff.public.invest.api.contract.v1.Ping ping = 2;
  bool has_ping() const;
  private:
  bool _internal_has_ping() const;

  public:
  void clear_ping() ;
  const ::tinkoff::public_::invest::api::contract::v1::Ping& ping() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Ping* release_ping();
  ::tinkoff::public_::invest::api::contract::v1::Ping* mutable_ping();
  void set_allocated_ping(::tinkoff::public_::invest::api::contract::v1::Ping* value);
  void unsafe_arena_set_allocated_ping(::tinkoff::public_::invest::api::contract::v1::Ping* value);
  ::tinkoff::public_::invest::api::contract::v1::Ping* unsafe_arena_release_ping();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Ping& _internal_ping() const;
  ::tinkoff::public_::invest::api::contract::v1::Ping* _internal_mutable_ping();

  public:
  // .tinkoff.public.invest.api.contract.v1.SubscriptionResponse subscription = 3;
  bool has_subscription() const;
  private:
  bool _internal_has_subscription() const;

  public:
  void clear_subscription() ;
  const ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse& subscription() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* release_subscription();
  ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* mutable_subscription();
  void set_allocated_subscription(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* value);
  void unsafe_arena_set_allocated_subscription(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* value);
  ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* unsafe_arena_release_subscription();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse& _internal_subscription() const;
  ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* _internal_mutable_subscription();

  public:
  void clear_payload();
  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
 private:
  class _Internal;
  void set_has_order_trades();
  void set_has_ping();
  void set_has_subscription();
  inline bool has_payload() const;
  inline void clear_has_payload();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TradesStreamResponse& from_msg);
    union PayloadUnion {
      constexpr PayloadUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::tinkoff::public_::invest::api::contract::v1::OrderTrades* order_trades_;
      ::tinkoff::public_::invest::api::contract::v1::Ping* ping_;
      ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* subscription_;
    } payload_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class OrderStateStreamResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse) */ {
 public:
  inline OrderStateStreamResponse() : OrderStateStreamResponse(nullptr) {}
  ~OrderStateStreamResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderStateStreamResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderStateStreamResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderStateStreamResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderStateStreamResponse(const OrderStateStreamResponse& from) : OrderStateStreamResponse(nullptr, from) {}
  inline OrderStateStreamResponse(OrderStateStreamResponse&& from) noexcept
      : OrderStateStreamResponse(nullptr, std::move(from)) {}
  inline OrderStateStreamResponse& operator=(const OrderStateStreamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderStateStreamResponse& operator=(OrderStateStreamResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderStateStreamResponse& default_instance() {
    return *internal_default_instance();
  }
  enum PayloadCase {
    kOrderState = 1,
    kPing = 2,
    kSubscription = 3,
    PAYLOAD_NOT_SET = 0,
  };
  static inline const OrderStateStreamResponse* internal_default_instance() {
    return reinterpret_cast<const OrderStateStreamResponse*>(
        &_OrderStateStreamResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(OrderStateStreamResponse& a, OrderStateStreamResponse& b) { a.Swap(&b); }
  inline void Swap(OrderStateStreamResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderStateStreamResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderStateStreamResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderStateStreamResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderStateStreamResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderStateStreamResponse& from) { OrderStateStreamResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderStateStreamResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse"; }

 protected:
  explicit OrderStateStreamResponse(::google::protobuf::Arena* arena);
  OrderStateStreamResponse(::google::protobuf::Arena* arena, const OrderStateStreamResponse& from);
  OrderStateStreamResponse(::google::protobuf::Arena* arena, OrderStateStreamResponse&& from) noexcept
      : OrderStateStreamResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using OrderState = OrderStateStreamResponse_OrderState;
  using MarkerType = OrderStateStreamResponse_MarkerType;
  static constexpr MarkerType MARKER_UNKNOWN = OrderStateStreamResponse_MarkerType_MARKER_UNKNOWN;
  static constexpr MarkerType MARKER_BROKER = OrderStateStreamResponse_MarkerType_MARKER_BROKER;
  static constexpr MarkerType MARKER_CHAT = OrderStateStreamResponse_MarkerType_MARKER_CHAT;
  static constexpr MarkerType MARKER_PAPER = OrderStateStreamResponse_MarkerType_MARKER_PAPER;
  static constexpr MarkerType MARKER_MARGIN = OrderStateStreamResponse_MarkerType_MARKER_MARGIN;
  static constexpr MarkerType MARKER_TKBNM = OrderStateStreamResponse_MarkerType_MARKER_TKBNM;
  static constexpr MarkerType MARKER_SHORT = OrderStateStreamResponse_MarkerType_MARKER_SHORT;
  static constexpr MarkerType MARKER_SPECMM = OrderStateStreamResponse_MarkerType_MARKER_SPECMM;
  static constexpr MarkerType MARKER_PO = OrderStateStreamResponse_MarkerType_MARKER_PO;
  static inline bool MarkerType_IsValid(int value) {
    return OrderStateStreamResponse_MarkerType_IsValid(value);
  }
  static constexpr MarkerType MarkerType_MIN = OrderStateStreamResponse_MarkerType_MarkerType_MIN;
  static constexpr MarkerType MarkerType_MAX = OrderStateStreamResponse_MarkerType_MarkerType_MAX;
  static constexpr int MarkerType_ARRAYSIZE = OrderStateStreamResponse_MarkerType_MarkerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* MarkerType_descriptor() {
    return OrderStateStreamResponse_MarkerType_descriptor();
  }
  template <typename T>
  static inline const std::string& MarkerType_Name(T value) {
    return OrderStateStreamResponse_MarkerType_Name(value);
  }
  static inline bool MarkerType_Parse(absl::string_view name, MarkerType* value) {
    return OrderStateStreamResponse_MarkerType_Parse(name, value);
  }
  using StatusCauseInfo = OrderStateStreamResponse_StatusCauseInfo;
  static constexpr StatusCauseInfo CAUSE_UNSPECIFIED = OrderStateStreamResponse_StatusCauseInfo_CAUSE_UNSPECIFIED;
  static constexpr StatusCauseInfo CAUSE_CANCELLED_BY_CLIENT = OrderStateStreamResponse_StatusCauseInfo_CAUSE_CANCELLED_BY_CLIENT;
  static constexpr StatusCauseInfo CAUSE_CANCELLED_BY_EXCHANGE = OrderStateStreamResponse_StatusCauseInfo_CAUSE_CANCELLED_BY_EXCHANGE;
  static constexpr StatusCauseInfo CAUSE_CANCELLED_NOT_ENOUGH_POSITION = OrderStateStreamResponse_StatusCauseInfo_CAUSE_CANCELLED_NOT_ENOUGH_POSITION;
  static constexpr StatusCauseInfo CAUSE_CANCELLED_BY_CLIENT_BLOCK = OrderStateStreamResponse_StatusCauseInfo_CAUSE_CANCELLED_BY_CLIENT_BLOCK;
  static constexpr StatusCauseInfo CAUSE_REJECTED_BY_BROKER = OrderStateStreamResponse_StatusCauseInfo_CAUSE_REJECTED_BY_BROKER;
  static constexpr StatusCauseInfo CAUSE_REJECTED_BY_EXCHANGE = OrderStateStreamResponse_StatusCauseInfo_CAUSE_REJECTED_BY_EXCHANGE;
  static constexpr StatusCauseInfo CAUSE_CANCELLED_BY_BROKER = OrderStateStreamResponse_StatusCauseInfo_CAUSE_CANCELLED_BY_BROKER;
  static inline bool StatusCauseInfo_IsValid(int value) {
    return OrderStateStreamResponse_StatusCauseInfo_IsValid(value);
  }
  static constexpr StatusCauseInfo StatusCauseInfo_MIN = OrderStateStreamResponse_StatusCauseInfo_StatusCauseInfo_MIN;
  static constexpr StatusCauseInfo StatusCauseInfo_MAX = OrderStateStreamResponse_StatusCauseInfo_StatusCauseInfo_MAX;
  static constexpr int StatusCauseInfo_ARRAYSIZE = OrderStateStreamResponse_StatusCauseInfo_StatusCauseInfo_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* StatusCauseInfo_descriptor() {
    return OrderStateStreamResponse_StatusCauseInfo_descriptor();
  }
  template <typename T>
  static inline const std::string& StatusCauseInfo_Name(T value) {
    return OrderStateStreamResponse_StatusCauseInfo_Name(value);
  }
  static inline bool StatusCauseInfo_Parse(absl::string_view name, StatusCauseInfo* value) {
    return OrderStateStreamResponse_StatusCauseInfo_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kOrderStateFieldNumber = 1,
    kPingFieldNumber = 2,
    kSubscriptionFieldNumber = 3,
  };
  // .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState order_state = 1;
  bool has_order_state() const;
  private:
  bool _internal_has_order_state() const;

  public:
  void clear_order_state() ;
  const ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState& order_state() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* release_order_state();
  ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* mutable_order_state();
  void set_allocated_order_state(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* value);
  void unsafe_arena_set_allocated_order_state(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* value);
  ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* unsafe_arena_release_order_state();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState& _internal_order_state() const;
  ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* _internal_mutable_order_state();

  public:
  // .tinkoff.public.invest.api.contract.v1.Ping ping = 2;
  bool has_ping() const;
  private:
  bool _internal_has_ping() const;

  public:
  void clear_ping() ;
  const ::tinkoff::public_::invest::api::contract::v1::Ping& ping() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::Ping* release_ping();
  ::tinkoff::public_::invest::api::contract::v1::Ping* mutable_ping();
  void set_allocated_ping(::tinkoff::public_::invest::api::contract::v1::Ping* value);
  void unsafe_arena_set_allocated_ping(::tinkoff::public_::invest::api::contract::v1::Ping* value);
  ::tinkoff::public_::invest::api::contract::v1::Ping* unsafe_arena_release_ping();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::Ping& _internal_ping() const;
  ::tinkoff::public_::invest::api::contract::v1::Ping* _internal_mutable_ping();

  public:
  // .tinkoff.public.invest.api.contract.v1.SubscriptionResponse subscription = 3;
  bool has_subscription() const;
  private:
  bool _internal_has_subscription() const;

  public:
  void clear_subscription() ;
  const ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse& subscription() const;
  PROTOBUF_NODISCARD ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* release_subscription();
  ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* mutable_subscription();
  void set_allocated_subscription(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* value);
  void unsafe_arena_set_allocated_subscription(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* value);
  ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* unsafe_arena_release_subscription();

  private:
  const ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse& _internal_subscription() const;
  ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* _internal_mutable_subscription();

  public:
  void clear_payload();
  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse)
 private:
  class _Internal;
  void set_has_order_state();
  void set_has_ping();
  void set_has_subscription();
  inline bool has_payload() const;
  inline void clear_has_payload();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderStateStreamResponse& from_msg);
    union PayloadUnion {
      constexpr PayloadUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* order_state_;
      ::tinkoff::public_::invest::api::contract::v1::Ping* ping_;
      ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* subscription_;
    } payload_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};
// -------------------------------------------------------------------

class GetOrdersResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tinkoff.public.invest.api.contract.v1.GetOrdersResponse) */ {
 public:
  inline GetOrdersResponse() : GetOrdersResponse(nullptr) {}
  ~GetOrdersResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOrdersResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOrdersResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrdersResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetOrdersResponse(const GetOrdersResponse& from) : GetOrdersResponse(nullptr, from) {}
  inline GetOrdersResponse(GetOrdersResponse&& from) noexcept
      : GetOrdersResponse(nullptr, std::move(from)) {}
  inline GetOrdersResponse& operator=(const GetOrdersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrdersResponse& operator=(GetOrdersResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrdersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOrdersResponse* internal_default_instance() {
    return reinterpret_cast<const GetOrdersResponse*>(
        &_GetOrdersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(GetOrdersResponse& a, GetOrdersResponse& b) { a.Swap(&b); }
  inline void Swap(GetOrdersResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrdersResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrdersResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOrdersResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrdersResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOrdersResponse& from) { GetOrdersResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOrdersResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tinkoff.public.invest.api.contract.v1.GetOrdersResponse"; }

 protected:
  explicit GetOrdersResponse(::google::protobuf::Arena* arena);
  GetOrdersResponse(::google::protobuf::Arena* arena, const GetOrdersResponse& from);
  GetOrdersResponse(::google::protobuf::Arena* arena, GetOrdersResponse&& from) noexcept
      : GetOrdersResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrdersFieldNumber = 1,
  };
  // repeated .tinkoff.public.invest.api.contract.v1.OrderState orders = 1;
  int orders_size() const;
  private:
  int _internal_orders_size() const;

  public:
  void clear_orders() ;
  ::tinkoff::public_::invest::api::contract::v1::OrderState* mutable_orders(int index);
  ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderState>* mutable_orders();

  private:
  const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderState>& _internal_orders() const;
  ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderState>* _internal_mutable_orders();
  public:
  const ::tinkoff::public_::invest::api::contract::v1::OrderState& orders(int index) const;
  ::tinkoff::public_::invest::api::contract::v1::OrderState* add_orders();
  const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderState>& orders() const;
  // @@protoc_insertion_point(class_scope:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetOrdersResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::tinkoff::public_::invest::api::contract::v1::OrderState > orders_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_orders_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TradesStreamRequest

// repeated string accounts = 1;
inline int TradesStreamRequest::_internal_accounts_size() const {
  return _internal_accounts().size();
}
inline int TradesStreamRequest::accounts_size() const {
  return _internal_accounts_size();
}
inline void TradesStreamRequest::clear_accounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accounts_.Clear();
}
inline std::string* TradesStreamRequest::add_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_accounts()->Add();
  // @@protoc_insertion_point(field_add_mutable:tinkoff.public.invest.api.contract.v1.TradesStreamRequest.accounts)
  return _s;
}
inline const std::string& TradesStreamRequest::accounts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.TradesStreamRequest.accounts)
  return _internal_accounts().Get(index);
}
inline std::string* TradesStreamRequest::mutable_accounts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.TradesStreamRequest.accounts)
  return _internal_mutable_accounts()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void TradesStreamRequest::set_accounts(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_accounts()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.TradesStreamRequest.accounts)
}
template <typename Arg_, typename... Args_>
inline void TradesStreamRequest::add_accounts(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_accounts(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tinkoff.public.invest.api.contract.v1.TradesStreamRequest.accounts)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TradesStreamRequest::accounts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tinkoff.public.invest.api.contract.v1.TradesStreamRequest.accounts)
  return _internal_accounts();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TradesStreamRequest::mutable_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tinkoff.public.invest.api.contract.v1.TradesStreamRequest.accounts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accounts();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
TradesStreamRequest::_internal_accounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accounts_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
TradesStreamRequest::_internal_mutable_accounts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accounts_;
}

// optional int32 ping_delay_ms = 15;
inline bool TradesStreamRequest::has_ping_delay_ms() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void TradesStreamRequest::clear_ping_delay_ms() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_delay_ms_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t TradesStreamRequest::ping_delay_ms() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.TradesStreamRequest.ping_delay_ms)
  return _internal_ping_delay_ms();
}
inline void TradesStreamRequest::set_ping_delay_ms(::int32_t value) {
  _internal_set_ping_delay_ms(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.TradesStreamRequest.ping_delay_ms)
}
inline ::int32_t TradesStreamRequest::_internal_ping_delay_ms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ping_delay_ms_;
}
inline void TradesStreamRequest::_internal_set_ping_delay_ms(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_delay_ms_ = value;
}

// -------------------------------------------------------------------

// TradesStreamResponse

// .tinkoff.public.invest.api.contract.v1.OrderTrades order_trades = 1;
inline bool TradesStreamResponse::has_order_trades() const {
  return payload_case() == kOrderTrades;
}
inline bool TradesStreamResponse::_internal_has_order_trades() const {
  return payload_case() == kOrderTrades;
}
inline void TradesStreamResponse::set_has_order_trades() {
  _impl_._oneof_case_[0] = kOrderTrades;
}
inline void TradesStreamResponse::clear_order_trades() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kOrderTrades) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.order_trades_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_trades_);
    }
    clear_has_payload();
  }
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderTrades* TradesStreamResponse::release_order_trades() {
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.order_trades)
  if (payload_case() == kOrderTrades) {
    clear_has_payload();
    auto* temp = _impl_.payload_.order_trades_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.order_trades_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tinkoff::public_::invest::api::contract::v1::OrderTrades& TradesStreamResponse::_internal_order_trades() const {
  return payload_case() == kOrderTrades ? *_impl_.payload_.order_trades_ : reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::OrderTrades&>(::tinkoff::public_::invest::api::contract::v1::_OrderTrades_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::OrderTrades& TradesStreamResponse::order_trades() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.order_trades)
  return _internal_order_trades();
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderTrades* TradesStreamResponse::unsafe_arena_release_order_trades() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.order_trades)
  if (payload_case() == kOrderTrades) {
    clear_has_payload();
    auto* temp = _impl_.payload_.order_trades_;
    _impl_.payload_.order_trades_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TradesStreamResponse::unsafe_arena_set_allocated_order_trades(::tinkoff::public_::invest::api::contract::v1::OrderTrades* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_order_trades();
    _impl_.payload_.order_trades_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.order_trades)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderTrades* TradesStreamResponse::_internal_mutable_order_trades() {
  if (payload_case() != kOrderTrades) {
    clear_payload();
    set_has_order_trades();
    _impl_.payload_.order_trades_ =
        ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::OrderTrades>(GetArena());
  }
  return _impl_.payload_.order_trades_;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderTrades* TradesStreamResponse::mutable_order_trades() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tinkoff::public_::invest::api::contract::v1::OrderTrades* _msg = _internal_mutable_order_trades();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.order_trades)
  return _msg;
}

// .tinkoff.public.invest.api.contract.v1.Ping ping = 2;
inline bool TradesStreamResponse::has_ping() const {
  return payload_case() == kPing;
}
inline bool TradesStreamResponse::_internal_has_ping() const {
  return payload_case() == kPing;
}
inline void TradesStreamResponse::set_has_ping() {
  _impl_._oneof_case_[0] = kPing;
}
inline ::tinkoff::public_::invest::api::contract::v1::Ping* TradesStreamResponse::release_ping() {
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.ping)
  if (payload_case() == kPing) {
    clear_has_payload();
    auto* temp = _impl_.payload_.ping_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.ping_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tinkoff::public_::invest::api::contract::v1::Ping& TradesStreamResponse::_internal_ping() const {
  return payload_case() == kPing ? *_impl_.payload_.ping_ : reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Ping&>(::tinkoff::public_::invest::api::contract::v1::_Ping_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Ping& TradesStreamResponse::ping() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.ping)
  return _internal_ping();
}
inline ::tinkoff::public_::invest::api::contract::v1::Ping* TradesStreamResponse::unsafe_arena_release_ping() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.ping)
  if (payload_case() == kPing) {
    clear_has_payload();
    auto* temp = _impl_.payload_.ping_;
    _impl_.payload_.ping_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TradesStreamResponse::unsafe_arena_set_allocated_ping(::tinkoff::public_::invest::api::contract::v1::Ping* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_ping();
    _impl_.payload_.ping_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.ping)
}
inline ::tinkoff::public_::invest::api::contract::v1::Ping* TradesStreamResponse::_internal_mutable_ping() {
  if (payload_case() != kPing) {
    clear_payload();
    set_has_ping();
    _impl_.payload_.ping_ =
        ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Ping>(GetArena());
  }
  return _impl_.payload_.ping_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Ping* TradesStreamResponse::mutable_ping() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tinkoff::public_::invest::api::contract::v1::Ping* _msg = _internal_mutable_ping();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.ping)
  return _msg;
}

// .tinkoff.public.invest.api.contract.v1.SubscriptionResponse subscription = 3;
inline bool TradesStreamResponse::has_subscription() const {
  return payload_case() == kSubscription;
}
inline bool TradesStreamResponse::_internal_has_subscription() const {
  return payload_case() == kSubscription;
}
inline void TradesStreamResponse::set_has_subscription() {
  _impl_._oneof_case_[0] = kSubscription;
}
inline void TradesStreamResponse::clear_subscription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kSubscription) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.subscription_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscription_);
    }
    clear_has_payload();
  }
}
inline ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* TradesStreamResponse::release_subscription() {
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.subscription)
  if (payload_case() == kSubscription) {
    clear_has_payload();
    auto* temp = _impl_.payload_.subscription_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.subscription_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse& TradesStreamResponse::_internal_subscription() const {
  return payload_case() == kSubscription ? *_impl_.payload_.subscription_ : reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse&>(::tinkoff::public_::invest::api::contract::v1::_SubscriptionResponse_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse& TradesStreamResponse::subscription() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.subscription)
  return _internal_subscription();
}
inline ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* TradesStreamResponse::unsafe_arena_release_subscription() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.subscription)
  if (payload_case() == kSubscription) {
    clear_has_payload();
    auto* temp = _impl_.payload_.subscription_;
    _impl_.payload_.subscription_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TradesStreamResponse::unsafe_arena_set_allocated_subscription(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_subscription();
    _impl_.payload_.subscription_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.subscription)
}
inline ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* TradesStreamResponse::_internal_mutable_subscription() {
  if (payload_case() != kSubscription) {
    clear_payload();
    set_has_subscription();
    _impl_.payload_.subscription_ =
        ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse>(GetArena());
  }
  return _impl_.payload_.subscription_;
}
inline ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* TradesStreamResponse::mutable_subscription() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* _msg = _internal_mutable_subscription();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.subscription)
  return _msg;
}

inline bool TradesStreamResponse::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void TradesStreamResponse::clear_has_payload() {
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline TradesStreamResponse::PayloadCase TradesStreamResponse::payload_case() const {
  return TradesStreamResponse::PayloadCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// OrderTrades

// string order_id = 1;
inline void OrderTrades::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.ClearToEmpty();
}
inline const std::string& OrderTrades::order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderTrades.order_id)
  return _internal_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderTrades::set_order_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderTrades.order_id)
}
inline std::string* OrderTrades::mutable_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderTrades.order_id)
  return _s;
}
inline const std::string& OrderTrades::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_.Get();
}
inline void OrderTrades::_internal_set_order_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(value, GetArena());
}
inline std::string* OrderTrades::_internal_mutable_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_id_.Mutable( GetArena());
}
inline std::string* OrderTrades::release_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderTrades.order_id)
  return _impl_.order_id_.Release();
}
inline void OrderTrades::set_allocated_order_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_id_.IsDefault()) {
    _impl_.order_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderTrades.order_id)
}

// .google.protobuf.Timestamp created_at = 2;
inline bool OrderTrades::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& OrderTrades::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& OrderTrades::created_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderTrades.created_at)
  return _internal_created_at();
}
inline void OrderTrades::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderTrades.created_at)
}
inline ::google::protobuf::Timestamp* OrderTrades::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* OrderTrades::unsafe_arena_release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderTrades.created_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* OrderTrades::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* OrderTrades::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderTrades.created_at)
  return _msg;
}
inline void OrderTrades::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderTrades.created_at)
}

// .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 3;
inline void OrderTrades::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection OrderTrades::direction() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderTrades.direction)
  return _internal_direction();
}
inline void OrderTrades::set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderTrades.direction)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection OrderTrades::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderDirection>(_impl_.direction_);
}
inline void OrderTrades::_internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// string figi = 4;
inline void OrderTrades::clear_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.ClearToEmpty();
}
inline const std::string& OrderTrades::figi() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderTrades.figi)
  return _internal_figi();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderTrades::set_figi(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderTrades.figi)
}
inline std::string* OrderTrades::mutable_figi() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_figi();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderTrades.figi)
  return _s;
}
inline const std::string& OrderTrades::_internal_figi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.figi_.Get();
}
inline void OrderTrades::_internal_set_figi(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.Set(value, GetArena());
}
inline std::string* OrderTrades::_internal_mutable_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.figi_.Mutable( GetArena());
}
inline std::string* OrderTrades::release_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderTrades.figi)
  return _impl_.figi_.Release();
}
inline void OrderTrades::set_allocated_figi(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.figi_.IsDefault()) {
    _impl_.figi_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderTrades.figi)
}

// repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 5;
inline int OrderTrades::_internal_trades_size() const {
  return _internal_trades().size();
}
inline int OrderTrades::trades_size() const {
  return _internal_trades_size();
}
inline void OrderTrades::clear_trades() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trades_.Clear();
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderTrade* OrderTrades::mutable_trades(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderTrades.trades)
  return _internal_mutable_trades()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>* OrderTrades::mutable_trades()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tinkoff.public.invest.api.contract.v1.OrderTrades.trades)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_trades();
}
inline const ::tinkoff::public_::invest::api::contract::v1::OrderTrade& OrderTrades::trades(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderTrades.trades)
  return _internal_trades().Get(index);
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderTrade* OrderTrades::add_trades() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tinkoff::public_::invest::api::contract::v1::OrderTrade* _add = _internal_mutable_trades()->Add();
  // @@protoc_insertion_point(field_add:tinkoff.public.invest.api.contract.v1.OrderTrades.trades)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>& OrderTrades::trades() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tinkoff.public.invest.api.contract.v1.OrderTrades.trades)
  return _internal_trades();
}
inline const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>&
OrderTrades::_internal_trades() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trades_;
}
inline ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>*
OrderTrades::_internal_mutable_trades() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.trades_;
}

// string account_id = 6;
inline void OrderTrades::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& OrderTrades::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderTrades.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderTrades::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderTrades.account_id)
}
inline std::string* OrderTrades::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderTrades.account_id)
  return _s;
}
inline const std::string& OrderTrades::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void OrderTrades::_internal_set_account_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* OrderTrades::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* OrderTrades::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderTrades.account_id)
  return _impl_.account_id_.Release();
}
inline void OrderTrades::set_allocated_account_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderTrades.account_id)
}

// string instrument_uid = 7;
inline void OrderTrades::clear_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.ClearToEmpty();
}
inline const std::string& OrderTrades::instrument_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderTrades.instrument_uid)
  return _internal_instrument_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderTrades::set_instrument_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderTrades.instrument_uid)
}
inline std::string* OrderTrades::mutable_instrument_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instrument_uid();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderTrades.instrument_uid)
  return _s;
}
inline const std::string& OrderTrades::_internal_instrument_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instrument_uid_.Get();
}
inline void OrderTrades::_internal_set_instrument_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.Set(value, GetArena());
}
inline std::string* OrderTrades::_internal_mutable_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.instrument_uid_.Mutable( GetArena());
}
inline std::string* OrderTrades::release_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderTrades.instrument_uid)
  return _impl_.instrument_uid_.Release();
}
inline void OrderTrades::set_allocated_instrument_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.instrument_uid_.IsDefault()) {
    _impl_.instrument_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderTrades.instrument_uid)
}

// -------------------------------------------------------------------

// OrderTrade

// .google.protobuf.Timestamp date_time = 1;
inline bool OrderTrade::has_date_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.date_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& OrderTrade::_internal_date_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.date_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& OrderTrade::date_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderTrade.date_time)
  return _internal_date_time();
}
inline void OrderTrade::unsafe_arena_set_allocated_date_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.date_time_);
  }
  _impl_.date_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderTrade.date_time)
}
inline ::google::protobuf::Timestamp* OrderTrade::release_date_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.date_time_;
  _impl_.date_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* OrderTrade::unsafe_arena_release_date_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderTrade.date_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.date_time_;
  _impl_.date_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* OrderTrade::_internal_mutable_date_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.date_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.date_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.date_time_;
}
inline ::google::protobuf::Timestamp* OrderTrade::mutable_date_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_date_time();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderTrade.date_time)
  return _msg;
}
inline void OrderTrade::set_allocated_date_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.date_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.date_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderTrade.date_time)
}

// .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
inline bool OrderTrade::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& OrderTrade::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::Quotation* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::Quotation&>(::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& OrderTrade::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderTrade.price)
  return _internal_price();
}
inline void OrderTrade::unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderTrade.price)
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* OrderTrade::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* OrderTrade::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderTrade.price)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* OrderTrade::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(GetArena());
    _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(p);
  }
  return _impl_.price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* OrderTrade::mutable_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderTrade.price)
  return _msg;
}
inline void OrderTrade::set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderTrade.price)
}

// int64 quantity = 3;
inline void OrderTrade::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t OrderTrade::quantity() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderTrade.quantity)
  return _internal_quantity();
}
inline void OrderTrade::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderTrade.quantity)
}
inline ::int64_t OrderTrade::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void OrderTrade::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// string trade_id = 4;
inline void OrderTrade::clear_trade_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_id_.ClearToEmpty();
}
inline const std::string& OrderTrade::trade_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderTrade.trade_id)
  return _internal_trade_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderTrade::set_trade_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderTrade.trade_id)
}
inline std::string* OrderTrade::mutable_trade_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_trade_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderTrade.trade_id)
  return _s;
}
inline const std::string& OrderTrade::_internal_trade_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trade_id_.Get();
}
inline void OrderTrade::_internal_set_trade_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_id_.Set(value, GetArena());
}
inline std::string* OrderTrade::_internal_mutable_trade_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.trade_id_.Mutable( GetArena());
}
inline std::string* OrderTrade::release_trade_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderTrade.trade_id)
  return _impl_.trade_id_.Release();
}
inline void OrderTrade::set_allocated_trade_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.trade_id_.IsDefault()) {
    _impl_.trade_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderTrade.trade_id)
}

// -------------------------------------------------------------------

// PostOrderRequest

// optional string figi = 1 [deprecated = true];
inline bool PostOrderRequest::has_figi() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PostOrderRequest::clear_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PostOrderRequest::figi() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderRequest.figi)
  return _internal_figi();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderRequest::set_figi(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.figi_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderRequest.figi)
}
inline std::string* PostOrderRequest::mutable_figi() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_figi();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderRequest.figi)
  return _s;
}
inline const std::string& PostOrderRequest::_internal_figi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.figi_.Get();
}
inline void PostOrderRequest::_internal_set_figi(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.figi_.Set(value, GetArena());
}
inline std::string* PostOrderRequest::_internal_mutable_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.figi_.Mutable( GetArena());
}
inline std::string* PostOrderRequest::release_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderRequest.figi)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.figi_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.figi_.Set("", GetArena());
  }
  return released;
}
inline void PostOrderRequest::set_allocated_figi(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.figi_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.figi_.IsDefault()) {
    _impl_.figi_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderRequest.figi)
}

// int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderRequest::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t PostOrderRequest::quantity() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderRequest.quantity)
  return _internal_quantity();
}
inline void PostOrderRequest::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderRequest.quantity)
}
inline ::int64_t PostOrderRequest::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void PostOrderRequest::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
inline bool PostOrderRequest::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& PostOrderRequest::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::Quotation* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::Quotation&>(::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& PostOrderRequest::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderRequest.price)
  return _internal_price();
}
inline void PostOrderRequest::unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderRequest.price)
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderRequest::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderRequest::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderRequest.price)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderRequest::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(GetArena());
    _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(p);
  }
  return _impl_.price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderRequest::mutable_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderRequest.price)
  return _msg;
}
inline void PostOrderRequest::set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderRequest.price)
}

// .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderRequest::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection PostOrderRequest::direction() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderRequest.direction)
  return _internal_direction();
}
inline void PostOrderRequest::set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderRequest.direction)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection PostOrderRequest::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderDirection>(_impl_.direction_);
}
inline void PostOrderRequest::_internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderRequest::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& PostOrderRequest::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderRequest.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderRequest::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderRequest.account_id)
}
inline std::string* PostOrderRequest::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderRequest.account_id)
  return _s;
}
inline const std::string& PostOrderRequest::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void PostOrderRequest::_internal_set_account_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* PostOrderRequest::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* PostOrderRequest::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderRequest.account_id)
  return _impl_.account_id_.Release();
}
inline void PostOrderRequest::set_allocated_account_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderRequest.account_id)
}

// .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderRequest::clear_order_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderType PostOrderRequest::order_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderRequest.order_type)
  return _internal_order_type();
}
inline void PostOrderRequest::set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value) {
  _internal_set_order_type(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderRequest.order_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderType PostOrderRequest::_internal_order_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderType>(_impl_.order_type_);
}
inline void PostOrderRequest::_internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = value;
}

// string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderRequest::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.ClearToEmpty();
}
inline const std::string& PostOrderRequest::order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderRequest.order_id)
  return _internal_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderRequest::set_order_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderRequest.order_id)
}
inline std::string* PostOrderRequest::mutable_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderRequest.order_id)
  return _s;
}
inline const std::string& PostOrderRequest::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_.Get();
}
inline void PostOrderRequest::_internal_set_order_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(value, GetArena());
}
inline std::string* PostOrderRequest::_internal_mutable_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_id_.Mutable( GetArena());
}
inline std::string* PostOrderRequest::release_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderRequest.order_id)
  return _impl_.order_id_.Release();
}
inline void PostOrderRequest::set_allocated_order_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_id_.IsDefault()) {
    _impl_.order_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderRequest.order_id)
}

// string instrument_id = 8;
inline void PostOrderRequest::clear_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.ClearToEmpty();
}
inline const std::string& PostOrderRequest::instrument_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderRequest.instrument_id)
  return _internal_instrument_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderRequest::set_instrument_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderRequest.instrument_id)
}
inline std::string* PostOrderRequest::mutable_instrument_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instrument_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderRequest.instrument_id)
  return _s;
}
inline const std::string& PostOrderRequest::_internal_instrument_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instrument_id_.Get();
}
inline void PostOrderRequest::_internal_set_instrument_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.Set(value, GetArena());
}
inline std::string* PostOrderRequest::_internal_mutable_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.instrument_id_.Mutable( GetArena());
}
inline std::string* PostOrderRequest::release_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderRequest.instrument_id)
  return _impl_.instrument_id_.Release();
}
inline void PostOrderRequest::set_allocated_instrument_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.instrument_id_.IsDefault()) {
    _impl_.instrument_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderRequest.instrument_id)
}

// .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 9;
inline void PostOrderRequest::clear_time_in_force() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_in_force_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::TimeInForceType PostOrderRequest::time_in_force() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderRequest.time_in_force)
  return _internal_time_in_force();
}
inline void PostOrderRequest::set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value) {
  _internal_set_time_in_force(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderRequest.time_in_force)
}
inline ::tinkoff::public_::invest::api::contract::v1::TimeInForceType PostOrderRequest::_internal_time_in_force() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::TimeInForceType>(_impl_.time_in_force_);
}
inline void PostOrderRequest::_internal_set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_in_force_ = value;
}

// .tinkoff.public.invest.api.contract.v1.PriceType price_type = 10;
inline void PostOrderRequest::clear_price_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_type_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::PriceType PostOrderRequest::price_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderRequest.price_type)
  return _internal_price_type();
}
inline void PostOrderRequest::set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value) {
  _internal_set_price_type(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderRequest.price_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::PriceType PostOrderRequest::_internal_price_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::PriceType>(_impl_.price_type_);
}
inline void PostOrderRequest::_internal_set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_type_ = value;
}

// bool confirm_margin_trade = 11;
inline void PostOrderRequest::clear_confirm_margin_trade() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirm_margin_trade_ = false;
}
inline bool PostOrderRequest::confirm_margin_trade() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderRequest.confirm_margin_trade)
  return _internal_confirm_margin_trade();
}
inline void PostOrderRequest::set_confirm_margin_trade(bool value) {
  _internal_set_confirm_margin_trade(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderRequest.confirm_margin_trade)
}
inline bool PostOrderRequest::_internal_confirm_margin_trade() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.confirm_margin_trade_;
}
inline void PostOrderRequest::_internal_set_confirm_margin_trade(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirm_margin_trade_ = value;
}

// -------------------------------------------------------------------

// PostOrderResponse

// string order_id = 1;
inline void PostOrderResponse::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.ClearToEmpty();
}
inline const std::string& PostOrderResponse::order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_id)
  return _internal_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderResponse::set_order_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_id)
}
inline std::string* PostOrderResponse::mutable_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_id)
  return _s;
}
inline const std::string& PostOrderResponse::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_.Get();
}
inline void PostOrderResponse::_internal_set_order_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(value, GetArena());
}
inline std::string* PostOrderResponse::_internal_mutable_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_id_.Mutable( GetArena());
}
inline std::string* PostOrderResponse::release_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_id)
  return _impl_.order_id_.Release();
}
inline void PostOrderResponse::set_allocated_order_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_id_.IsDefault()) {
    _impl_.order_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_id)
}

// .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
inline void PostOrderResponse::clear_execution_report_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_report_status_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus PostOrderResponse::execution_report_status() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.execution_report_status)
  return _internal_execution_report_status();
}
inline void PostOrderResponse::set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value) {
  _internal_set_execution_report_status(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderResponse.execution_report_status)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus PostOrderResponse::_internal_execution_report_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus>(_impl_.execution_report_status_);
}
inline void PostOrderResponse::_internal_set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_report_status_ = value;
}

// int64 lots_requested = 3;
inline void PostOrderResponse::clear_lots_requested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_requested_ = ::int64_t{0};
}
inline ::int64_t PostOrderResponse::lots_requested() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.lots_requested)
  return _internal_lots_requested();
}
inline void PostOrderResponse::set_lots_requested(::int64_t value) {
  _internal_set_lots_requested(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderResponse.lots_requested)
}
inline ::int64_t PostOrderResponse::_internal_lots_requested() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lots_requested_;
}
inline void PostOrderResponse::_internal_set_lots_requested(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_requested_ = value;
}

// int64 lots_executed = 4;
inline void PostOrderResponse::clear_lots_executed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_executed_ = ::int64_t{0};
}
inline ::int64_t PostOrderResponse::lots_executed() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.lots_executed)
  return _internal_lots_executed();
}
inline void PostOrderResponse::set_lots_executed(::int64_t value) {
  _internal_set_lots_executed(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderResponse.lots_executed)
}
inline ::int64_t PostOrderResponse::_internal_lots_executed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lots_executed_;
}
inline void PostOrderResponse::_internal_set_lots_executed(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_executed_ = value;
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
inline bool PostOrderResponse::has_initial_order_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_order_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::_internal_initial_order_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.initial_order_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::initial_order_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_order_price)
  return _internal_initial_order_price();
}
inline void PostOrderResponse::unsafe_arena_set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_order_price_);
  }
  _impl_.initial_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_order_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::release_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.initial_order_price_;
  _impl_.initial_order_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::unsafe_arena_release_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_order_price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.initial_order_price_;
  _impl_.initial_order_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::_internal_mutable_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_order_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.initial_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.initial_order_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::mutable_initial_order_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_initial_order_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_order_price)
  return _msg;
}
inline void PostOrderResponse::set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_order_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.initial_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_order_price)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
inline bool PostOrderResponse::has_executed_order_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.executed_order_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::_internal_executed_order_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.executed_order_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::executed_order_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.executed_order_price)
  return _internal_executed_order_price();
}
inline void PostOrderResponse::unsafe_arena_set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_order_price_);
  }
  _impl_.executed_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.executed_order_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::release_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.executed_order_price_;
  _impl_.executed_order_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::unsafe_arena_release_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.executed_order_price)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.executed_order_price_;
  _impl_.executed_order_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::_internal_mutable_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_order_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.executed_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.executed_order_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::mutable_executed_order_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_executed_order_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.executed_order_price)
  return _msg;
}
inline void PostOrderResponse::set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_order_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.executed_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.executed_order_price)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
inline bool PostOrderResponse::has_total_order_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.total_order_amount_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::_internal_total_order_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.total_order_amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::total_order_amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.total_order_amount)
  return _internal_total_order_amount();
}
inline void PostOrderResponse::unsafe_arena_set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_order_amount_);
  }
  _impl_.total_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.total_order_amount)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::release_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.total_order_amount_;
  _impl_.total_order_amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::unsafe_arena_release_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.total_order_amount)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.total_order_amount_;
  _impl_.total_order_amount_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::_internal_mutable_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_order_amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.total_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.total_order_amount_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::mutable_total_order_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_total_order_amount();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.total_order_amount)
  return _msg;
}
inline void PostOrderResponse::set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_order_amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.total_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.total_order_amount)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;
inline bool PostOrderResponse::has_initial_commission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_commission_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::_internal_initial_commission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.initial_commission_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::initial_commission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_commission)
  return _internal_initial_commission();
}
inline void PostOrderResponse::unsafe_arena_set_allocated_initial_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_commission_);
  }
  _impl_.initial_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_commission)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::release_initial_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.initial_commission_;
  _impl_.initial_commission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::unsafe_arena_release_initial_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_commission)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.initial_commission_;
  _impl_.initial_commission_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::_internal_mutable_initial_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_commission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.initial_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.initial_commission_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::mutable_initial_commission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_initial_commission();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_commission)
  return _msg;
}
inline void PostOrderResponse::set_allocated_initial_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_commission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.initial_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_commission)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;
inline bool PostOrderResponse::has_executed_commission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.executed_commission_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::_internal_executed_commission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.executed_commission_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::executed_commission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.executed_commission)
  return _internal_executed_commission();
}
inline void PostOrderResponse::unsafe_arena_set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_commission_);
  }
  _impl_.executed_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.executed_commission)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::release_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.executed_commission_;
  _impl_.executed_commission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::unsafe_arena_release_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.executed_commission)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.executed_commission_;
  _impl_.executed_commission_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::_internal_mutable_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_commission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.executed_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.executed_commission_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::mutable_executed_commission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_executed_commission();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.executed_commission)
  return _msg;
}
inline void PostOrderResponse::set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_commission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.executed_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.executed_commission)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;
inline bool PostOrderResponse::has_aci_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.aci_value_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::_internal_aci_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.aci_value_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::aci_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.aci_value)
  return _internal_aci_value();
}
inline void PostOrderResponse::unsafe_arena_set_allocated_aci_value(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.aci_value_);
  }
  _impl_.aci_value_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.aci_value)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::release_aci_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.aci_value_;
  _impl_.aci_value_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::unsafe_arena_release_aci_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.aci_value)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.aci_value_;
  _impl_.aci_value_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::_internal_mutable_aci_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.aci_value_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.aci_value_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.aci_value_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::mutable_aci_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_aci_value();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.aci_value)
  return _msg;
}
inline void PostOrderResponse::set_allocated_aci_value(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.aci_value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.aci_value_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.aci_value)
}

// string figi = 11;
inline void PostOrderResponse::clear_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.ClearToEmpty();
}
inline const std::string& PostOrderResponse::figi() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.figi)
  return _internal_figi();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderResponse::set_figi(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderResponse.figi)
}
inline std::string* PostOrderResponse::mutable_figi() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_figi();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.figi)
  return _s;
}
inline const std::string& PostOrderResponse::_internal_figi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.figi_.Get();
}
inline void PostOrderResponse::_internal_set_figi(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.Set(value, GetArena());
}
inline std::string* PostOrderResponse::_internal_mutable_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.figi_.Mutable( GetArena());
}
inline std::string* PostOrderResponse::release_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.figi)
  return _impl_.figi_.Release();
}
inline void PostOrderResponse::set_allocated_figi(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.figi_.IsDefault()) {
    _impl_.figi_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.figi)
}

// .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
inline void PostOrderResponse::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection PostOrderResponse::direction() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.direction)
  return _internal_direction();
}
inline void PostOrderResponse::set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderResponse.direction)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection PostOrderResponse::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderDirection>(_impl_.direction_);
}
inline void PostOrderResponse::_internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
inline bool PostOrderResponse::has_initial_security_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_security_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::_internal_initial_security_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.initial_security_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& PostOrderResponse::initial_security_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_security_price)
  return _internal_initial_security_price();
}
inline void PostOrderResponse::unsafe_arena_set_allocated_initial_security_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_security_price_);
  }
  _impl_.initial_security_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_security_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::release_initial_security_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.initial_security_price_;
  _impl_.initial_security_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::unsafe_arena_release_initial_security_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_security_price)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.initial_security_price_;
  _impl_.initial_security_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::_internal_mutable_initial_security_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_security_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.initial_security_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.initial_security_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* PostOrderResponse::mutable_initial_security_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_initial_security_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_security_price)
  return _msg;
}
inline void PostOrderResponse::set_allocated_initial_security_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_security_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.initial_security_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_security_price)
}

// .tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;
inline void PostOrderResponse::clear_order_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderType PostOrderResponse::order_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_type)
  return _internal_order_type();
}
inline void PostOrderResponse::set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value) {
  _internal_set_order_type(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderType PostOrderResponse::_internal_order_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderType>(_impl_.order_type_);
}
inline void PostOrderResponse::_internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = value;
}

// string message = 15;
inline void PostOrderResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& PostOrderResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderResponse.message)
}
inline std::string* PostOrderResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.message)
  return _s;
}
inline const std::string& PostOrderResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void PostOrderResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* PostOrderResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* PostOrderResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.message)
  return _impl_.message_.Release();
}
inline void PostOrderResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.message)
}

// .tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;
inline bool PostOrderResponse::has_initial_order_price_pt() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_order_price_pt_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& PostOrderResponse::_internal_initial_order_price_pt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::Quotation* p = _impl_.initial_order_price_pt_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::Quotation&>(::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& PostOrderResponse::initial_order_price_pt() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_order_price_pt)
  return _internal_initial_order_price_pt();
}
inline void PostOrderResponse::unsafe_arena_set_allocated_initial_order_price_pt(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_order_price_pt_);
  }
  _impl_.initial_order_price_pt_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_order_price_pt)
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderResponse::release_initial_order_price_pt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* released = _impl_.initial_order_price_pt_;
  _impl_.initial_order_price_pt_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderResponse::unsafe_arena_release_initial_order_price_pt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_order_price_pt)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* temp = _impl_.initial_order_price_pt_;
  _impl_.initial_order_price_pt_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderResponse::_internal_mutable_initial_order_price_pt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_order_price_pt_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(GetArena());
    _impl_.initial_order_price_pt_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(p);
  }
  return _impl_.initial_order_price_pt_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderResponse::mutable_initial_order_price_pt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _msg = _internal_mutable_initial_order_price_pt();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_order_price_pt)
  return _msg;
}
inline void PostOrderResponse::set_allocated_initial_order_price_pt(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_order_price_pt_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.initial_order_price_pt_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.initial_order_price_pt)
}

// string instrument_uid = 17;
inline void PostOrderResponse::clear_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.ClearToEmpty();
}
inline const std::string& PostOrderResponse::instrument_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.instrument_uid)
  return _internal_instrument_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderResponse::set_instrument_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderResponse.instrument_uid)
}
inline std::string* PostOrderResponse::mutable_instrument_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instrument_uid();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.instrument_uid)
  return _s;
}
inline const std::string& PostOrderResponse::_internal_instrument_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instrument_uid_.Get();
}
inline void PostOrderResponse::_internal_set_instrument_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.Set(value, GetArena());
}
inline std::string* PostOrderResponse::_internal_mutable_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.instrument_uid_.Mutable( GetArena());
}
inline std::string* PostOrderResponse::release_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.instrument_uid)
  return _impl_.instrument_uid_.Release();
}
inline void PostOrderResponse::set_allocated_instrument_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.instrument_uid_.IsDefault()) {
    _impl_.instrument_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.instrument_uid)
}

// string order_request_id = 20;
inline void PostOrderResponse::clear_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.ClearToEmpty();
}
inline const std::string& PostOrderResponse::order_request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_request_id)
  return _internal_order_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderResponse::set_order_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_request_id)
}
inline std::string* PostOrderResponse::mutable_order_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_request_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_request_id)
  return _s;
}
inline const std::string& PostOrderResponse::_internal_order_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_request_id_.Get();
}
inline void PostOrderResponse::_internal_set_order_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.Set(value, GetArena());
}
inline std::string* PostOrderResponse::_internal_mutable_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_request_id_.Mutable( GetArena());
}
inline std::string* PostOrderResponse::release_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_request_id)
  return _impl_.order_request_id_.Release();
}
inline void PostOrderResponse::set_allocated_order_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_request_id_.IsDefault()) {
    _impl_.order_request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_request_id)
}

// .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
inline bool PostOrderResponse::has_response_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_metadata_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata& PostOrderResponse::_internal_response_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* p = _impl_.response_metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata&>(::tinkoff::public_::invest::api::contract::v1::_ResponseMetadata_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata& PostOrderResponse::response_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderResponse.response_metadata)
  return _internal_response_metadata();
}
inline void PostOrderResponse::unsafe_arena_set_allocated_response_metadata(::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_metadata_);
  }
  _impl_.response_metadata_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.response_metadata)
}
inline ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* PostOrderResponse::release_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* released = _impl_.response_metadata_;
  _impl_.response_metadata_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* PostOrderResponse::unsafe_arena_release_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderResponse.response_metadata)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* temp = _impl_.response_metadata_;
  _impl_.response_metadata_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* PostOrderResponse::_internal_mutable_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata>(GetArena());
    _impl_.response_metadata_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata*>(p);
  }
  return _impl_.response_metadata_;
}
inline ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* PostOrderResponse::mutable_response_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* _msg = _internal_mutable_response_metadata();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderResponse.response_metadata)
  return _msg;
}
inline void PostOrderResponse::set_allocated_response_metadata(::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.response_metadata_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderResponse.response_metadata)
}

// -------------------------------------------------------------------

// PostOrderAsyncRequest

// string instrument_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderAsyncRequest::clear_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.ClearToEmpty();
}
inline const std::string& PostOrderAsyncRequest::instrument_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.instrument_id)
  return _internal_instrument_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderAsyncRequest::set_instrument_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.instrument_id)
}
inline std::string* PostOrderAsyncRequest::mutable_instrument_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instrument_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.instrument_id)
  return _s;
}
inline const std::string& PostOrderAsyncRequest::_internal_instrument_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instrument_id_.Get();
}
inline void PostOrderAsyncRequest::_internal_set_instrument_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.Set(value, GetArena());
}
inline std::string* PostOrderAsyncRequest::_internal_mutable_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.instrument_id_.Mutable( GetArena());
}
inline std::string* PostOrderAsyncRequest::release_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.instrument_id)
  return _impl_.instrument_id_.Release();
}
inline void PostOrderAsyncRequest::set_allocated_instrument_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.instrument_id_.IsDefault()) {
    _impl_.instrument_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.instrument_id)
}

// int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderAsyncRequest::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t PostOrderAsyncRequest::quantity() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.quantity)
  return _internal_quantity();
}
inline void PostOrderAsyncRequest::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.quantity)
}
inline ::int64_t PostOrderAsyncRequest::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void PostOrderAsyncRequest::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
inline bool PostOrderAsyncRequest::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& PostOrderAsyncRequest::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::Quotation* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::Quotation&>(::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& PostOrderAsyncRequest::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.price)
  return _internal_price();
}
inline void PostOrderAsyncRequest::unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.price)
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderAsyncRequest::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderAsyncRequest::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderAsyncRequest::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(GetArena());
    _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(p);
  }
  return _impl_.price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* PostOrderAsyncRequest::mutable_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.price)
  return _msg;
}
inline void PostOrderAsyncRequest::set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.price)
}

// .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderAsyncRequest::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection PostOrderAsyncRequest::direction() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.direction)
  return _internal_direction();
}
inline void PostOrderAsyncRequest::set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.direction)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection PostOrderAsyncRequest::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderDirection>(_impl_.direction_);
}
inline void PostOrderAsyncRequest::_internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderAsyncRequest::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& PostOrderAsyncRequest::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderAsyncRequest::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.account_id)
}
inline std::string* PostOrderAsyncRequest::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.account_id)
  return _s;
}
inline const std::string& PostOrderAsyncRequest::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void PostOrderAsyncRequest::_internal_set_account_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* PostOrderAsyncRequest::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* PostOrderAsyncRequest::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.account_id)
  return _impl_.account_id_.Release();
}
inline void PostOrderAsyncRequest::set_allocated_account_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.account_id)
}

// .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderAsyncRequest::clear_order_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderType PostOrderAsyncRequest::order_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.order_type)
  return _internal_order_type();
}
inline void PostOrderAsyncRequest::set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value) {
  _internal_set_order_type(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.order_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderType PostOrderAsyncRequest::_internal_order_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderType>(_impl_.order_type_);
}
inline void PostOrderAsyncRequest::_internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = value;
}

// string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderAsyncRequest::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.ClearToEmpty();
}
inline const std::string& PostOrderAsyncRequest::order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.order_id)
  return _internal_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderAsyncRequest::set_order_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.order_id)
}
inline std::string* PostOrderAsyncRequest::mutable_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.order_id)
  return _s;
}
inline const std::string& PostOrderAsyncRequest::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_.Get();
}
inline void PostOrderAsyncRequest::_internal_set_order_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(value, GetArena());
}
inline std::string* PostOrderAsyncRequest::_internal_mutable_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_id_.Mutable( GetArena());
}
inline std::string* PostOrderAsyncRequest::release_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.order_id)
  return _impl_.order_id_.Release();
}
inline void PostOrderAsyncRequest::set_allocated_order_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_id_.IsDefault()) {
    _impl_.order_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.order_id)
}

// optional .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 8;
inline bool PostOrderAsyncRequest::has_time_in_force() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PostOrderAsyncRequest::clear_time_in_force() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_in_force_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::tinkoff::public_::invest::api::contract::v1::TimeInForceType PostOrderAsyncRequest::time_in_force() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.time_in_force)
  return _internal_time_in_force();
}
inline void PostOrderAsyncRequest::set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value) {
  _internal_set_time_in_force(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.time_in_force)
}
inline ::tinkoff::public_::invest::api::contract::v1::TimeInForceType PostOrderAsyncRequest::_internal_time_in_force() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::TimeInForceType>(_impl_.time_in_force_);
}
inline void PostOrderAsyncRequest::_internal_set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_in_force_ = value;
}

// optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 9;
inline bool PostOrderAsyncRequest::has_price_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void PostOrderAsyncRequest::clear_price_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::tinkoff::public_::invest::api::contract::v1::PriceType PostOrderAsyncRequest::price_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.price_type)
  return _internal_price_type();
}
inline void PostOrderAsyncRequest::set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value) {
  _internal_set_price_type(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.price_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::PriceType PostOrderAsyncRequest::_internal_price_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::PriceType>(_impl_.price_type_);
}
inline void PostOrderAsyncRequest::_internal_set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_type_ = value;
}

// bool confirm_margin_trade = 10;
inline void PostOrderAsyncRequest::clear_confirm_margin_trade() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirm_margin_trade_ = false;
}
inline bool PostOrderAsyncRequest::confirm_margin_trade() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.confirm_margin_trade)
  return _internal_confirm_margin_trade();
}
inline void PostOrderAsyncRequest::set_confirm_margin_trade(bool value) {
  _internal_set_confirm_margin_trade(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.confirm_margin_trade)
}
inline bool PostOrderAsyncRequest::_internal_confirm_margin_trade() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.confirm_margin_trade_;
}
inline void PostOrderAsyncRequest::_internal_set_confirm_margin_trade(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirm_margin_trade_ = value;
}

// -------------------------------------------------------------------

// PostOrderAsyncResponse

// string order_request_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderAsyncResponse::clear_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.ClearToEmpty();
}
inline const std::string& PostOrderAsyncResponse::order_request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.order_request_id)
  return _internal_order_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderAsyncResponse::set_order_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.order_request_id)
}
inline std::string* PostOrderAsyncResponse::mutable_order_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_request_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.order_request_id)
  return _s;
}
inline const std::string& PostOrderAsyncResponse::_internal_order_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_request_id_.Get();
}
inline void PostOrderAsyncResponse::_internal_set_order_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.Set(value, GetArena());
}
inline std::string* PostOrderAsyncResponse::_internal_mutable_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_request_id_.Mutable( GetArena());
}
inline std::string* PostOrderAsyncResponse::release_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.order_request_id)
  return _impl_.order_request_id_.Release();
}
inline void PostOrderAsyncResponse::set_allocated_order_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_request_id_.IsDefault()) {
    _impl_.order_request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.order_request_id)
}

// .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2 [(.google.api.field_behavior) = REQUIRED];
inline void PostOrderAsyncResponse::clear_execution_report_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_report_status_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus PostOrderAsyncResponse::execution_report_status() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.execution_report_status)
  return _internal_execution_report_status();
}
inline void PostOrderAsyncResponse::set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value) {
  _internal_set_execution_report_status(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.execution_report_status)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus PostOrderAsyncResponse::_internal_execution_report_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus>(_impl_.execution_report_status_);
}
inline void PostOrderAsyncResponse::_internal_set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_report_status_ = value;
}

// optional string trade_intent_id = 3;
inline bool PostOrderAsyncResponse::has_trade_intent_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PostOrderAsyncResponse::clear_trade_intent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_intent_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PostOrderAsyncResponse::trade_intent_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.trade_intent_id)
  return _internal_trade_intent_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PostOrderAsyncResponse::set_trade_intent_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.trade_intent_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.trade_intent_id)
}
inline std::string* PostOrderAsyncResponse::mutable_trade_intent_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_trade_intent_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.trade_intent_id)
  return _s;
}
inline const std::string& PostOrderAsyncResponse::_internal_trade_intent_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trade_intent_id_.Get();
}
inline void PostOrderAsyncResponse::_internal_set_trade_intent_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.trade_intent_id_.Set(value, GetArena());
}
inline std::string* PostOrderAsyncResponse::_internal_mutable_trade_intent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.trade_intent_id_.Mutable( GetArena());
}
inline std::string* PostOrderAsyncResponse::release_trade_intent_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.trade_intent_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.trade_intent_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.trade_intent_id_.Set("", GetArena());
  }
  return released;
}
inline void PostOrderAsyncResponse::set_allocated_trade_intent_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.trade_intent_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.trade_intent_id_.IsDefault()) {
    _impl_.trade_intent_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.trade_intent_id)
}

// -------------------------------------------------------------------

// CancelOrderRequest

// string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void CancelOrderRequest::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& CancelOrderRequest::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CancelOrderRequest::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.account_id)
}
inline std::string* CancelOrderRequest::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.account_id)
  return _s;
}
inline const std::string& CancelOrderRequest::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void CancelOrderRequest::_internal_set_account_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* CancelOrderRequest::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* CancelOrderRequest::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.account_id)
  return _impl_.account_id_.Release();
}
inline void CancelOrderRequest::set_allocated_account_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.account_id)
}

// string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
inline void CancelOrderRequest::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.ClearToEmpty();
}
inline const std::string& CancelOrderRequest::order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.order_id)
  return _internal_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CancelOrderRequest::set_order_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.order_id)
}
inline std::string* CancelOrderRequest::mutable_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.order_id)
  return _s;
}
inline const std::string& CancelOrderRequest::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_.Get();
}
inline void CancelOrderRequest::_internal_set_order_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(value, GetArena());
}
inline std::string* CancelOrderRequest::_internal_mutable_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_id_.Mutable( GetArena());
}
inline std::string* CancelOrderRequest::release_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.order_id)
  return _impl_.order_id_.Release();
}
inline void CancelOrderRequest::set_allocated_order_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_id_.IsDefault()) {
    _impl_.order_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.order_id)
}

// optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 3;
inline bool CancelOrderRequest::has_order_id_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CancelOrderRequest::clear_order_id_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderIdType CancelOrderRequest::order_id_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.order_id_type)
  return _internal_order_id_type();
}
inline void CancelOrderRequest::set_order_id_type(::tinkoff::public_::invest::api::contract::v1::OrderIdType value) {
  _internal_set_order_id_type(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.CancelOrderRequest.order_id_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderIdType CancelOrderRequest::_internal_order_id_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderIdType>(_impl_.order_id_type_);
}
inline void CancelOrderRequest::_internal_set_order_id_type(::tinkoff::public_::invest::api::contract::v1::OrderIdType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_type_ = value;
}

// -------------------------------------------------------------------

// CancelOrderResponse

// .google.protobuf.Timestamp time = 1;
inline bool CancelOrderResponse::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& CancelOrderResponse::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& CancelOrderResponse::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.CancelOrderResponse.time)
  return _internal_time();
}
inline void CancelOrderResponse::unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.CancelOrderResponse.time)
}
inline ::google::protobuf::Timestamp* CancelOrderResponse::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* CancelOrderResponse::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.CancelOrderResponse.time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* CancelOrderResponse::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* CancelOrderResponse::mutable_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.CancelOrderResponse.time)
  return _msg;
}
inline void CancelOrderResponse::set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.CancelOrderResponse.time)
}

// .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
inline bool CancelOrderResponse::has_response_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.response_metadata_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata& CancelOrderResponse::_internal_response_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* p = _impl_.response_metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata&>(::tinkoff::public_::invest::api::contract::v1::_ResponseMetadata_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata& CancelOrderResponse::response_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.CancelOrderResponse.response_metadata)
  return _internal_response_metadata();
}
inline void CancelOrderResponse::unsafe_arena_set_allocated_response_metadata(::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_metadata_);
  }
  _impl_.response_metadata_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.CancelOrderResponse.response_metadata)
}
inline ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* CancelOrderResponse::release_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* released = _impl_.response_metadata_;
  _impl_.response_metadata_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* CancelOrderResponse::unsafe_arena_release_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.CancelOrderResponse.response_metadata)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* temp = _impl_.response_metadata_;
  _impl_.response_metadata_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* CancelOrderResponse::_internal_mutable_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata>(GetArena());
    _impl_.response_metadata_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata*>(p);
  }
  return _impl_.response_metadata_;
}
inline ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* CancelOrderResponse::mutable_response_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* _msg = _internal_mutable_response_metadata();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.CancelOrderResponse.response_metadata)
  return _msg;
}
inline void CancelOrderResponse::set_allocated_response_metadata(::tinkoff::public_::invest::api::contract::v1::ResponseMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.response_metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.response_metadata_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.CancelOrderResponse.response_metadata)
}

// -------------------------------------------------------------------

// GetOrderStateRequest

// string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void GetOrderStateRequest::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& GetOrderStateRequest::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOrderStateRequest::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.account_id)
}
inline std::string* GetOrderStateRequest::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.account_id)
  return _s;
}
inline const std::string& GetOrderStateRequest::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void GetOrderStateRequest::_internal_set_account_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* GetOrderStateRequest::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* GetOrderStateRequest::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.account_id)
  return _impl_.account_id_.Release();
}
inline void GetOrderStateRequest::set_allocated_account_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.account_id)
}

// string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
inline void GetOrderStateRequest::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.ClearToEmpty();
}
inline const std::string& GetOrderStateRequest::order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.order_id)
  return _internal_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOrderStateRequest::set_order_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.order_id)
}
inline std::string* GetOrderStateRequest::mutable_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.order_id)
  return _s;
}
inline const std::string& GetOrderStateRequest::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_.Get();
}
inline void GetOrderStateRequest::_internal_set_order_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(value, GetArena());
}
inline std::string* GetOrderStateRequest::_internal_mutable_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_id_.Mutable( GetArena());
}
inline std::string* GetOrderStateRequest::release_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.order_id)
  return _impl_.order_id_.Release();
}
inline void GetOrderStateRequest::set_allocated_order_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_id_.IsDefault()) {
    _impl_.order_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.order_id)
}

// .tinkoff.public.invest.api.contract.v1.PriceType price_type = 3;
inline void GetOrderStateRequest::clear_price_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_type_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::PriceType GetOrderStateRequest::price_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.price_type)
  return _internal_price_type();
}
inline void GetOrderStateRequest::set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value) {
  _internal_set_price_type(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.price_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::PriceType GetOrderStateRequest::_internal_price_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::PriceType>(_impl_.price_type_);
}
inline void GetOrderStateRequest::_internal_set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_type_ = value;
}

// optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 4;
inline bool GetOrderStateRequest::has_order_id_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GetOrderStateRequest::clear_order_id_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderIdType GetOrderStateRequest::order_id_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.order_id_type)
  return _internal_order_id_type();
}
inline void GetOrderStateRequest::set_order_id_type(::tinkoff::public_::invest::api::contract::v1::OrderIdType value) {
  _internal_set_order_id_type(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.order_id_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderIdType GetOrderStateRequest::_internal_order_id_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderIdType>(_impl_.order_id_type_);
}
inline void GetOrderStateRequest::_internal_set_order_id_type(::tinkoff::public_::invest::api::contract::v1::OrderIdType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_type_ = value;
}

// -------------------------------------------------------------------

// GetOrdersRequest

// string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void GetOrdersRequest::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& GetOrdersRequest::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrdersRequest.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOrdersRequest::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetOrdersRequest.account_id)
}
inline std::string* GetOrdersRequest::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrdersRequest.account_id)
  return _s;
}
inline const std::string& GetOrdersRequest::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void GetOrdersRequest::_internal_set_account_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* GetOrdersRequest::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* GetOrdersRequest::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrdersRequest.account_id)
  return _impl_.account_id_.Release();
}
inline void GetOrdersRequest::set_allocated_account_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrdersRequest.account_id)
}

// -------------------------------------------------------------------

// GetOrdersResponse

// repeated .tinkoff.public.invest.api.contract.v1.OrderState orders = 1;
inline int GetOrdersResponse::_internal_orders_size() const {
  return _internal_orders().size();
}
inline int GetOrdersResponse::orders_size() const {
  return _internal_orders_size();
}
inline void GetOrdersResponse::clear_orders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orders_.Clear();
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderState* GetOrdersResponse::mutable_orders(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrdersResponse.orders)
  return _internal_mutable_orders()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderState>* GetOrdersResponse::mutable_orders()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tinkoff.public.invest.api.contract.v1.GetOrdersResponse.orders)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_orders();
}
inline const ::tinkoff::public_::invest::api::contract::v1::OrderState& GetOrdersResponse::orders(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrdersResponse.orders)
  return _internal_orders().Get(index);
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderState* GetOrdersResponse::add_orders() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tinkoff::public_::invest::api::contract::v1::OrderState* _add = _internal_mutable_orders()->Add();
  // @@protoc_insertion_point(field_add:tinkoff.public.invest.api.contract.v1.GetOrdersResponse.orders)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderState>& GetOrdersResponse::orders() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tinkoff.public.invest.api.contract.v1.GetOrdersResponse.orders)
  return _internal_orders();
}
inline const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderState>&
GetOrdersResponse::_internal_orders() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.orders_;
}
inline ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderState>*
GetOrdersResponse::_internal_mutable_orders() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.orders_;
}

// -------------------------------------------------------------------

// OrderState

// string order_id = 1;
inline void OrderState::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.ClearToEmpty();
}
inline const std::string& OrderState::order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.order_id)
  return _internal_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_order_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderState.order_id)
}
inline std::string* OrderState::mutable_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.order_id)
  return _s;
}
inline const std::string& OrderState::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_.Get();
}
inline void OrderState::_internal_set_order_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_id_.Mutable( GetArena());
}
inline std::string* OrderState::release_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.order_id)
  return _impl_.order_id_.Release();
}
inline void OrderState::set_allocated_order_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_id_.IsDefault()) {
    _impl_.order_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.order_id)
}

// .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
inline void OrderState::clear_execution_report_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_report_status_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus OrderState::execution_report_status() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.execution_report_status)
  return _internal_execution_report_status();
}
inline void OrderState::set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value) {
  _internal_set_execution_report_status(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderState.execution_report_status)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus OrderState::_internal_execution_report_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus>(_impl_.execution_report_status_);
}
inline void OrderState::_internal_set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_report_status_ = value;
}

// int64 lots_requested = 3;
inline void OrderState::clear_lots_requested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_requested_ = ::int64_t{0};
}
inline ::int64_t OrderState::lots_requested() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.lots_requested)
  return _internal_lots_requested();
}
inline void OrderState::set_lots_requested(::int64_t value) {
  _internal_set_lots_requested(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderState.lots_requested)
}
inline ::int64_t OrderState::_internal_lots_requested() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lots_requested_;
}
inline void OrderState::_internal_set_lots_requested(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_requested_ = value;
}

// int64 lots_executed = 4;
inline void OrderState::clear_lots_executed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_executed_ = ::int64_t{0};
}
inline ::int64_t OrderState::lots_executed() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.lots_executed)
  return _internal_lots_executed();
}
inline void OrderState::set_lots_executed(::int64_t value) {
  _internal_set_lots_executed(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderState.lots_executed)
}
inline ::int64_t OrderState::_internal_lots_executed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lots_executed_;
}
inline void OrderState::_internal_set_lots_executed(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_executed_ = value;
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
inline bool OrderState::has_initial_order_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_order_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::_internal_initial_order_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.initial_order_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::initial_order_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.initial_order_price)
  return _internal_initial_order_price();
}
inline void OrderState::unsafe_arena_set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_order_price_);
  }
  _impl_.initial_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.initial_order_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::release_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.initial_order_price_;
  _impl_.initial_order_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::unsafe_arena_release_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.initial_order_price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.initial_order_price_;
  _impl_.initial_order_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::_internal_mutable_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_order_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.initial_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.initial_order_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::mutable_initial_order_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_initial_order_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.initial_order_price)
  return _msg;
}
inline void OrderState::set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_order_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.initial_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.initial_order_price)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
inline bool OrderState::has_executed_order_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.executed_order_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::_internal_executed_order_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.executed_order_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::executed_order_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.executed_order_price)
  return _internal_executed_order_price();
}
inline void OrderState::unsafe_arena_set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_order_price_);
  }
  _impl_.executed_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.executed_order_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::release_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.executed_order_price_;
  _impl_.executed_order_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::unsafe_arena_release_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.executed_order_price)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.executed_order_price_;
  _impl_.executed_order_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::_internal_mutable_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_order_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.executed_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.executed_order_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::mutable_executed_order_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_executed_order_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.executed_order_price)
  return _msg;
}
inline void OrderState::set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_order_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.executed_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.executed_order_price)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
inline bool OrderState::has_total_order_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.total_order_amount_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::_internal_total_order_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.total_order_amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::total_order_amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.total_order_amount)
  return _internal_total_order_amount();
}
inline void OrderState::unsafe_arena_set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_order_amount_);
  }
  _impl_.total_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.total_order_amount)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::release_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.total_order_amount_;
  _impl_.total_order_amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::unsafe_arena_release_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.total_order_amount)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.total_order_amount_;
  _impl_.total_order_amount_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::_internal_mutable_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_order_amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.total_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.total_order_amount_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::mutable_total_order_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_total_order_amount();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.total_order_amount)
  return _msg;
}
inline void OrderState::set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_order_amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.total_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.total_order_amount)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 8;
inline bool OrderState::has_average_position_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.average_position_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::_internal_average_position_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.average_position_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::average_position_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.average_position_price)
  return _internal_average_position_price();
}
inline void OrderState::unsafe_arena_set_allocated_average_position_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.average_position_price_);
  }
  _impl_.average_position_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.average_position_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::release_average_position_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.average_position_price_;
  _impl_.average_position_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::unsafe_arena_release_average_position_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.average_position_price)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.average_position_price_;
  _impl_.average_position_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::_internal_mutable_average_position_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.average_position_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.average_position_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.average_position_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::mutable_average_position_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_average_position_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.average_position_price)
  return _msg;
}
inline void OrderState::set_allocated_average_position_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.average_position_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.average_position_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.average_position_price)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 9;
inline bool OrderState::has_initial_commission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_commission_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::_internal_initial_commission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.initial_commission_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::initial_commission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.initial_commission)
  return _internal_initial_commission();
}
inline void OrderState::unsafe_arena_set_allocated_initial_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_commission_);
  }
  _impl_.initial_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.initial_commission)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::release_initial_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.initial_commission_;
  _impl_.initial_commission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::unsafe_arena_release_initial_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.initial_commission)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.initial_commission_;
  _impl_.initial_commission_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::_internal_mutable_initial_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_commission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.initial_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.initial_commission_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::mutable_initial_commission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_initial_commission();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.initial_commission)
  return _msg;
}
inline void OrderState::set_allocated_initial_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_commission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.initial_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.initial_commission)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 10;
inline bool OrderState::has_executed_commission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.executed_commission_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::_internal_executed_commission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.executed_commission_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::executed_commission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.executed_commission)
  return _internal_executed_commission();
}
inline void OrderState::unsafe_arena_set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_commission_);
  }
  _impl_.executed_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.executed_commission)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::release_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.executed_commission_;
  _impl_.executed_commission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::unsafe_arena_release_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.executed_commission)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.executed_commission_;
  _impl_.executed_commission_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::_internal_mutable_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_commission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.executed_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.executed_commission_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::mutable_executed_commission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_executed_commission();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.executed_commission)
  return _msg;
}
inline void OrderState::set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_commission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.executed_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.executed_commission)
}

// string figi = 11;
inline void OrderState::clear_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.ClearToEmpty();
}
inline const std::string& OrderState::figi() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.figi)
  return _internal_figi();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_figi(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderState.figi)
}
inline std::string* OrderState::mutable_figi() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_figi();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.figi)
  return _s;
}
inline const std::string& OrderState::_internal_figi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.figi_.Get();
}
inline void OrderState::_internal_set_figi(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.figi_.Mutable( GetArena());
}
inline std::string* OrderState::release_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.figi)
  return _impl_.figi_.Release();
}
inline void OrderState::set_allocated_figi(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.figi_.IsDefault()) {
    _impl_.figi_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.figi)
}

// .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
inline void OrderState::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection OrderState::direction() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.direction)
  return _internal_direction();
}
inline void OrderState::set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderState.direction)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection OrderState::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderDirection>(_impl_.direction_);
}
inline void OrderState::_internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
inline bool OrderState::has_initial_security_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_security_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::_internal_initial_security_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.initial_security_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::initial_security_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.initial_security_price)
  return _internal_initial_security_price();
}
inline void OrderState::unsafe_arena_set_allocated_initial_security_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_security_price_);
  }
  _impl_.initial_security_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.initial_security_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::release_initial_security_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.initial_security_price_;
  _impl_.initial_security_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::unsafe_arena_release_initial_security_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.initial_security_price)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.initial_security_price_;
  _impl_.initial_security_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::_internal_mutable_initial_security_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_security_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.initial_security_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.initial_security_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::mutable_initial_security_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_initial_security_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.initial_security_price)
  return _msg;
}
inline void OrderState::set_allocated_initial_security_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_security_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.initial_security_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.initial_security_price)
}

// repeated .tinkoff.public.invest.api.contract.v1.OrderStage stages = 14;
inline int OrderState::_internal_stages_size() const {
  return _internal_stages().size();
}
inline int OrderState::stages_size() const {
  return _internal_stages_size();
}
inline void OrderState::clear_stages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stages_.Clear();
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderStage* OrderState::mutable_stages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.stages)
  return _internal_mutable_stages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderStage>* OrderState::mutable_stages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tinkoff.public.invest.api.contract.v1.OrderState.stages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_stages();
}
inline const ::tinkoff::public_::invest::api::contract::v1::OrderStage& OrderState::stages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.stages)
  return _internal_stages().Get(index);
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderStage* OrderState::add_stages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tinkoff::public_::invest::api::contract::v1::OrderStage* _add = _internal_mutable_stages()->Add();
  // @@protoc_insertion_point(field_add:tinkoff.public.invest.api.contract.v1.OrderState.stages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderStage>& OrderState::stages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tinkoff.public.invest.api.contract.v1.OrderState.stages)
  return _internal_stages();
}
inline const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderStage>&
OrderState::_internal_stages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stages_;
}
inline ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderStage>*
OrderState::_internal_mutable_stages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.stages_;
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 15;
inline bool OrderState::has_service_commission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.service_commission_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::_internal_service_commission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.service_commission_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderState::service_commission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.service_commission)
  return _internal_service_commission();
}
inline void OrderState::unsafe_arena_set_allocated_service_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.service_commission_);
  }
  _impl_.service_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.service_commission)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::release_service_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.service_commission_;
  _impl_.service_commission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::unsafe_arena_release_service_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.service_commission)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.service_commission_;
  _impl_.service_commission_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::_internal_mutable_service_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.service_commission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.service_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.service_commission_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderState::mutable_service_commission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_service_commission();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.service_commission)
  return _msg;
}
inline void OrderState::set_allocated_service_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.service_commission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.service_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.service_commission)
}

// string currency = 16;
inline void OrderState::clear_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.ClearToEmpty();
}
inline const std::string& OrderState::currency() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.currency)
  return _internal_currency();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_currency(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderState.currency)
}
inline std::string* OrderState::mutable_currency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currency();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.currency)
  return _s;
}
inline const std::string& OrderState::_internal_currency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currency_.Get();
}
inline void OrderState::_internal_set_currency(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currency_.Mutable( GetArena());
}
inline std::string* OrderState::release_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.currency)
  return _impl_.currency_.Release();
}
inline void OrderState::set_allocated_currency(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.currency_.IsDefault()) {
    _impl_.currency_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.currency)
}

// .tinkoff.public.invest.api.contract.v1.OrderType order_type = 17;
inline void OrderState::clear_order_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderType OrderState::order_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.order_type)
  return _internal_order_type();
}
inline void OrderState::set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value) {
  _internal_set_order_type(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderState.order_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderType OrderState::_internal_order_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderType>(_impl_.order_type_);
}
inline void OrderState::_internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = value;
}

// .google.protobuf.Timestamp order_date = 18;
inline bool OrderState::has_order_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.order_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& OrderState::_internal_order_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.order_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& OrderState::order_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.order_date)
  return _internal_order_date();
}
inline void OrderState::unsafe_arena_set_allocated_order_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.order_date_);
  }
  _impl_.order_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.order_date)
}
inline ::google::protobuf::Timestamp* OrderState::release_order_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::google::protobuf::Timestamp* released = _impl_.order_date_;
  _impl_.order_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* OrderState::unsafe_arena_release_order_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.order_date)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::google::protobuf::Timestamp* temp = _impl_.order_date_;
  _impl_.order_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* OrderState::_internal_mutable_order_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.order_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.order_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.order_date_;
}
inline ::google::protobuf::Timestamp* OrderState::mutable_order_date() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_order_date();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.order_date)
  return _msg;
}
inline void OrderState::set_allocated_order_date(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.order_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.order_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.order_date)
}

// string instrument_uid = 19;
inline void OrderState::clear_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.ClearToEmpty();
}
inline const std::string& OrderState::instrument_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.instrument_uid)
  return _internal_instrument_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_instrument_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderState.instrument_uid)
}
inline std::string* OrderState::mutable_instrument_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instrument_uid();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.instrument_uid)
  return _s;
}
inline const std::string& OrderState::_internal_instrument_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instrument_uid_.Get();
}
inline void OrderState::_internal_set_instrument_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.instrument_uid_.Mutable( GetArena());
}
inline std::string* OrderState::release_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.instrument_uid)
  return _impl_.instrument_uid_.Release();
}
inline void OrderState::set_allocated_instrument_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.instrument_uid_.IsDefault()) {
    _impl_.instrument_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.instrument_uid)
}

// string order_request_id = 20;
inline void OrderState::clear_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.ClearToEmpty();
}
inline const std::string& OrderState::order_request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderState.order_request_id)
  return _internal_order_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_order_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderState.order_request_id)
}
inline std::string* OrderState::mutable_order_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_request_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderState.order_request_id)
  return _s;
}
inline const std::string& OrderState::_internal_order_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_request_id_.Get();
}
inline void OrderState::_internal_set_order_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_request_id_.Mutable( GetArena());
}
inline std::string* OrderState::release_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderState.order_request_id)
  return _impl_.order_request_id_.Release();
}
inline void OrderState::set_allocated_order_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_request_id_.IsDefault()) {
    _impl_.order_request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderState.order_request_id)
}

// -------------------------------------------------------------------

// OrderStage

// .tinkoff.public.invest.api.contract.v1.MoneyValue price = 1;
inline bool OrderStage::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderStage::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderStage::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStage.price)
  return _internal_price();
}
inline void OrderStage::unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStage.price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStage::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStage::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStage.price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStage::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStage::mutable_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStage.price)
  return _msg;
}
inline void OrderStage::set_allocated_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStage.price)
}

// int64 quantity = 2;
inline void OrderStage::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t OrderStage::quantity() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStage.quantity)
  return _internal_quantity();
}
inline void OrderStage::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStage.quantity)
}
inline ::int64_t OrderStage::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void OrderStage::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// string trade_id = 3;
inline void OrderStage::clear_trade_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_id_.ClearToEmpty();
}
inline const std::string& OrderStage::trade_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStage.trade_id)
  return _internal_trade_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStage::set_trade_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStage.trade_id)
}
inline std::string* OrderStage::mutable_trade_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_trade_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStage.trade_id)
  return _s;
}
inline const std::string& OrderStage::_internal_trade_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trade_id_.Get();
}
inline void OrderStage::_internal_set_trade_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_id_.Set(value, GetArena());
}
inline std::string* OrderStage::_internal_mutable_trade_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.trade_id_.Mutable( GetArena());
}
inline std::string* OrderStage::release_trade_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStage.trade_id)
  return _impl_.trade_id_.Release();
}
inline void OrderStage::set_allocated_trade_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.trade_id_.IsDefault()) {
    _impl_.trade_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStage.trade_id)
}

// .google.protobuf.Timestamp execution_time = 5;
inline bool OrderStage::has_execution_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.execution_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& OrderStage::_internal_execution_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.execution_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& OrderStage::execution_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStage.execution_time)
  return _internal_execution_time();
}
inline void OrderStage::unsafe_arena_set_allocated_execution_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.execution_time_);
  }
  _impl_.execution_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStage.execution_time)
}
inline ::google::protobuf::Timestamp* OrderStage::release_execution_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.execution_time_;
  _impl_.execution_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* OrderStage::unsafe_arena_release_execution_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStage.execution_time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.execution_time_;
  _impl_.execution_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* OrderStage::_internal_mutable_execution_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.execution_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.execution_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.execution_time_;
}
inline ::google::protobuf::Timestamp* OrderStage::mutable_execution_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_execution_time();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStage.execution_time)
  return _msg;
}
inline void OrderStage::set_allocated_execution_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.execution_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.execution_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStage.execution_time)
}

// -------------------------------------------------------------------

// ReplaceOrderRequest

// string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void ReplaceOrderRequest::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& ReplaceOrderRequest::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplaceOrderRequest::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.account_id)
}
inline std::string* ReplaceOrderRequest::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.account_id)
  return _s;
}
inline const std::string& ReplaceOrderRequest::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void ReplaceOrderRequest::_internal_set_account_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* ReplaceOrderRequest::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* ReplaceOrderRequest::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.account_id)
  return _impl_.account_id_.Release();
}
inline void ReplaceOrderRequest::set_allocated_account_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.account_id)
}

// string order_id = 6 [(.google.api.field_behavior) = REQUIRED];
inline void ReplaceOrderRequest::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.ClearToEmpty();
}
inline const std::string& ReplaceOrderRequest::order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.order_id)
  return _internal_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplaceOrderRequest::set_order_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.order_id)
}
inline std::string* ReplaceOrderRequest::mutable_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.order_id)
  return _s;
}
inline const std::string& ReplaceOrderRequest::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_.Get();
}
inline void ReplaceOrderRequest::_internal_set_order_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(value, GetArena());
}
inline std::string* ReplaceOrderRequest::_internal_mutable_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_id_.Mutable( GetArena());
}
inline std::string* ReplaceOrderRequest::release_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.order_id)
  return _impl_.order_id_.Release();
}
inline void ReplaceOrderRequest::set_allocated_order_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_id_.IsDefault()) {
    _impl_.order_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.order_id)
}

// string idempotency_key = 7 [(.google.api.field_behavior) = REQUIRED];
inline void ReplaceOrderRequest::clear_idempotency_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.idempotency_key_.ClearToEmpty();
}
inline const std::string& ReplaceOrderRequest::idempotency_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.idempotency_key)
  return _internal_idempotency_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReplaceOrderRequest::set_idempotency_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.idempotency_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.idempotency_key)
}
inline std::string* ReplaceOrderRequest::mutable_idempotency_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_idempotency_key();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.idempotency_key)
  return _s;
}
inline const std::string& ReplaceOrderRequest::_internal_idempotency_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.idempotency_key_.Get();
}
inline void ReplaceOrderRequest::_internal_set_idempotency_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.idempotency_key_.Set(value, GetArena());
}
inline std::string* ReplaceOrderRequest::_internal_mutable_idempotency_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.idempotency_key_.Mutable( GetArena());
}
inline std::string* ReplaceOrderRequest::release_idempotency_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.idempotency_key)
  return _impl_.idempotency_key_.Release();
}
inline void ReplaceOrderRequest::set_allocated_idempotency_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.idempotency_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.idempotency_key_.IsDefault()) {
    _impl_.idempotency_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.idempotency_key)
}

// int64 quantity = 11 [(.google.api.field_behavior) = REQUIRED];
inline void ReplaceOrderRequest::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t ReplaceOrderRequest::quantity() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.quantity)
  return _internal_quantity();
}
inline void ReplaceOrderRequest::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.quantity)
}
inline ::int64_t ReplaceOrderRequest::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void ReplaceOrderRequest::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// optional .tinkoff.public.invest.api.contract.v1.Quotation price = 12;
inline bool ReplaceOrderRequest::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& ReplaceOrderRequest::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::Quotation* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::Quotation&>(::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& ReplaceOrderRequest::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.price)
  return _internal_price();
}
inline void ReplaceOrderRequest::unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.price)
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* ReplaceOrderRequest::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* ReplaceOrderRequest::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* ReplaceOrderRequest::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(GetArena());
    _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(p);
  }
  return _impl_.price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* ReplaceOrderRequest::mutable_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.price)
  return _msg;
}
inline void ReplaceOrderRequest::set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.price)
}

// optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 13;
inline bool ReplaceOrderRequest::has_price_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ReplaceOrderRequest::clear_price_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::tinkoff::public_::invest::api::contract::v1::PriceType ReplaceOrderRequest::price_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.price_type)
  return _internal_price_type();
}
inline void ReplaceOrderRequest::set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value) {
  _internal_set_price_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.price_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::PriceType ReplaceOrderRequest::_internal_price_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::PriceType>(_impl_.price_type_);
}
inline void ReplaceOrderRequest::_internal_set_price_type(::tinkoff::public_::invest::api::contract::v1::PriceType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_type_ = value;
}

// bool confirm_margin_trade = 14;
inline void ReplaceOrderRequest::clear_confirm_margin_trade() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirm_margin_trade_ = false;
}
inline bool ReplaceOrderRequest::confirm_margin_trade() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.confirm_margin_trade)
  return _internal_confirm_margin_trade();
}
inline void ReplaceOrderRequest::set_confirm_margin_trade(bool value) {
  _internal_set_confirm_margin_trade(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.confirm_margin_trade)
}
inline bool ReplaceOrderRequest::_internal_confirm_margin_trade() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.confirm_margin_trade_;
}
inline void ReplaceOrderRequest::_internal_set_confirm_margin_trade(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirm_margin_trade_ = value;
}

// -------------------------------------------------------------------

// GetMaxLotsRequest

// string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
inline void GetMaxLotsRequest::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& GetMaxLotsRequest::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMaxLotsRequest::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.account_id)
}
inline std::string* GetMaxLotsRequest::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.account_id)
  return _s;
}
inline const std::string& GetMaxLotsRequest::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void GetMaxLotsRequest::_internal_set_account_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* GetMaxLotsRequest::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* GetMaxLotsRequest::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.account_id)
  return _impl_.account_id_.Release();
}
inline void GetMaxLotsRequest::set_allocated_account_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.account_id)
}

// string instrument_id = 2 [(.google.api.field_behavior) = REQUIRED];
inline void GetMaxLotsRequest::clear_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.ClearToEmpty();
}
inline const std::string& GetMaxLotsRequest::instrument_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.instrument_id)
  return _internal_instrument_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMaxLotsRequest::set_instrument_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.instrument_id)
}
inline std::string* GetMaxLotsRequest::mutable_instrument_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instrument_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.instrument_id)
  return _s;
}
inline const std::string& GetMaxLotsRequest::_internal_instrument_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instrument_id_.Get();
}
inline void GetMaxLotsRequest::_internal_set_instrument_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.Set(value, GetArena());
}
inline std::string* GetMaxLotsRequest::_internal_mutable_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.instrument_id_.Mutable( GetArena());
}
inline std::string* GetMaxLotsRequest::release_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.instrument_id)
  return _impl_.instrument_id_.Release();
}
inline void GetMaxLotsRequest::set_allocated_instrument_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.instrument_id_.IsDefault()) {
    _impl_.instrument_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.instrument_id)
}

// optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
inline bool GetMaxLotsRequest::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& GetMaxLotsRequest::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::Quotation* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::Quotation&>(::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& GetMaxLotsRequest::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.price)
  return _internal_price();
}
inline void GetMaxLotsRequest::unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.price)
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetMaxLotsRequest::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetMaxLotsRequest::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetMaxLotsRequest::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(GetArena());
    _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(p);
  }
  return _impl_.price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetMaxLotsRequest::mutable_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.price)
  return _msg;
}
inline void GetMaxLotsRequest::set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.price)
}

// -------------------------------------------------------------------

// GetMaxLotsResponse_BuyLimitsView

// .tinkoff.public.invest.api.contract.v1.Quotation buy_money_amount = 1;
inline bool GetMaxLotsResponse_BuyLimitsView::has_buy_money_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.buy_money_amount_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& GetMaxLotsResponse_BuyLimitsView::_internal_buy_money_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::Quotation* p = _impl_.buy_money_amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::Quotation&>(::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& GetMaxLotsResponse_BuyLimitsView::buy_money_amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView.buy_money_amount)
  return _internal_buy_money_amount();
}
inline void GetMaxLotsResponse_BuyLimitsView::unsafe_arena_set_allocated_buy_money_amount(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.buy_money_amount_);
  }
  _impl_.buy_money_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView.buy_money_amount)
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetMaxLotsResponse_BuyLimitsView::release_buy_money_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* released = _impl_.buy_money_amount_;
  _impl_.buy_money_amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetMaxLotsResponse_BuyLimitsView::unsafe_arena_release_buy_money_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView.buy_money_amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* temp = _impl_.buy_money_amount_;
  _impl_.buy_money_amount_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetMaxLotsResponse_BuyLimitsView::_internal_mutable_buy_money_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.buy_money_amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(GetArena());
    _impl_.buy_money_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(p);
  }
  return _impl_.buy_money_amount_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetMaxLotsResponse_BuyLimitsView::mutable_buy_money_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _msg = _internal_mutable_buy_money_amount();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView.buy_money_amount)
  return _msg;
}
inline void GetMaxLotsResponse_BuyLimitsView::set_allocated_buy_money_amount(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.buy_money_amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.buy_money_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView.buy_money_amount)
}

// int64 buy_max_lots = 2;
inline void GetMaxLotsResponse_BuyLimitsView::clear_buy_max_lots() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buy_max_lots_ = ::int64_t{0};
}
inline ::int64_t GetMaxLotsResponse_BuyLimitsView::buy_max_lots() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView.buy_max_lots)
  return _internal_buy_max_lots();
}
inline void GetMaxLotsResponse_BuyLimitsView::set_buy_max_lots(::int64_t value) {
  _internal_set_buy_max_lots(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView.buy_max_lots)
}
inline ::int64_t GetMaxLotsResponse_BuyLimitsView::_internal_buy_max_lots() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.buy_max_lots_;
}
inline void GetMaxLotsResponse_BuyLimitsView::_internal_set_buy_max_lots(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buy_max_lots_ = value;
}

// int64 buy_max_market_lots = 3;
inline void GetMaxLotsResponse_BuyLimitsView::clear_buy_max_market_lots() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buy_max_market_lots_ = ::int64_t{0};
}
inline ::int64_t GetMaxLotsResponse_BuyLimitsView::buy_max_market_lots() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView.buy_max_market_lots)
  return _internal_buy_max_market_lots();
}
inline void GetMaxLotsResponse_BuyLimitsView::set_buy_max_market_lots(::int64_t value) {
  _internal_set_buy_max_market_lots(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView.buy_max_market_lots)
}
inline ::int64_t GetMaxLotsResponse_BuyLimitsView::_internal_buy_max_market_lots() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.buy_max_market_lots_;
}
inline void GetMaxLotsResponse_BuyLimitsView::_internal_set_buy_max_market_lots(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buy_max_market_lots_ = value;
}

// -------------------------------------------------------------------

// GetMaxLotsResponse_SellLimitsView

// int64 sell_max_lots = 1;
inline void GetMaxLotsResponse_SellLimitsView::clear_sell_max_lots() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sell_max_lots_ = ::int64_t{0};
}
inline ::int64_t GetMaxLotsResponse_SellLimitsView::sell_max_lots() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView.sell_max_lots)
  return _internal_sell_max_lots();
}
inline void GetMaxLotsResponse_SellLimitsView::set_sell_max_lots(::int64_t value) {
  _internal_set_sell_max_lots(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView.sell_max_lots)
}
inline ::int64_t GetMaxLotsResponse_SellLimitsView::_internal_sell_max_lots() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sell_max_lots_;
}
inline void GetMaxLotsResponse_SellLimitsView::_internal_set_sell_max_lots(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sell_max_lots_ = value;
}

// -------------------------------------------------------------------

// GetMaxLotsResponse

// string currency = 1;
inline void GetMaxLotsResponse::clear_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.ClearToEmpty();
}
inline const std::string& GetMaxLotsResponse::currency() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.currency)
  return _internal_currency();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetMaxLotsResponse::set_currency(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.currency)
}
inline std::string* GetMaxLotsResponse::mutable_currency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currency();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.currency)
  return _s;
}
inline const std::string& GetMaxLotsResponse::_internal_currency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currency_.Get();
}
inline void GetMaxLotsResponse::_internal_set_currency(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.Set(value, GetArena());
}
inline std::string* GetMaxLotsResponse::_internal_mutable_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currency_.Mutable( GetArena());
}
inline std::string* GetMaxLotsResponse::release_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.currency)
  return _impl_.currency_.Release();
}
inline void GetMaxLotsResponse::set_allocated_currency(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.currency_.IsDefault()) {
    _impl_.currency_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.currency)
}

// .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_limits = 2;
inline bool GetMaxLotsResponse::has_buy_limits() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.buy_limits_ != nullptr);
  return value;
}
inline void GetMaxLotsResponse::clear_buy_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.buy_limits_ != nullptr) _impl_.buy_limits_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView& GetMaxLotsResponse::_internal_buy_limits() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* p = _impl_.buy_limits_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView&>(::tinkoff::public_::invest::api::contract::v1::_GetMaxLotsResponse_BuyLimitsView_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView& GetMaxLotsResponse::buy_limits() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.buy_limits)
  return _internal_buy_limits();
}
inline void GetMaxLotsResponse::unsafe_arena_set_allocated_buy_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.buy_limits_);
  }
  _impl_.buy_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.buy_limits)
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* GetMaxLotsResponse::release_buy_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* released = _impl_.buy_limits_;
  _impl_.buy_limits_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* GetMaxLotsResponse::unsafe_arena_release_buy_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.buy_limits)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* temp = _impl_.buy_limits_;
  _impl_.buy_limits_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* GetMaxLotsResponse::_internal_mutable_buy_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.buy_limits_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView>(GetArena());
    _impl_.buy_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView*>(p);
  }
  return _impl_.buy_limits_;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* GetMaxLotsResponse::mutable_buy_limits() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* _msg = _internal_mutable_buy_limits();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.buy_limits)
  return _msg;
}
inline void GetMaxLotsResponse::set_allocated_buy_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.buy_limits_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.buy_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.buy_limits)
}

// .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_margin_limits = 3;
inline bool GetMaxLotsResponse::has_buy_margin_limits() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.buy_margin_limits_ != nullptr);
  return value;
}
inline void GetMaxLotsResponse::clear_buy_margin_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.buy_margin_limits_ != nullptr) _impl_.buy_margin_limits_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView& GetMaxLotsResponse::_internal_buy_margin_limits() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* p = _impl_.buy_margin_limits_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView&>(::tinkoff::public_::invest::api::contract::v1::_GetMaxLotsResponse_BuyLimitsView_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView& GetMaxLotsResponse::buy_margin_limits() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.buy_margin_limits)
  return _internal_buy_margin_limits();
}
inline void GetMaxLotsResponse::unsafe_arena_set_allocated_buy_margin_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.buy_margin_limits_);
  }
  _impl_.buy_margin_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.buy_margin_limits)
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* GetMaxLotsResponse::release_buy_margin_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* released = _impl_.buy_margin_limits_;
  _impl_.buy_margin_limits_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* GetMaxLotsResponse::unsafe_arena_release_buy_margin_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.buy_margin_limits)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* temp = _impl_.buy_margin_limits_;
  _impl_.buy_margin_limits_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* GetMaxLotsResponse::_internal_mutable_buy_margin_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.buy_margin_limits_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView>(GetArena());
    _impl_.buy_margin_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView*>(p);
  }
  return _impl_.buy_margin_limits_;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* GetMaxLotsResponse::mutable_buy_margin_limits() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* _msg = _internal_mutable_buy_margin_limits();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.buy_margin_limits)
  return _msg;
}
inline void GetMaxLotsResponse::set_allocated_buy_margin_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.buy_margin_limits_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.buy_margin_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.buy_margin_limits)
}

// .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_limits = 4;
inline bool GetMaxLotsResponse::has_sell_limits() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sell_limits_ != nullptr);
  return value;
}
inline void GetMaxLotsResponse::clear_sell_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sell_limits_ != nullptr) _impl_.sell_limits_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView& GetMaxLotsResponse::_internal_sell_limits() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* p = _impl_.sell_limits_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView&>(::tinkoff::public_::invest::api::contract::v1::_GetMaxLotsResponse_SellLimitsView_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView& GetMaxLotsResponse::sell_limits() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.sell_limits)
  return _internal_sell_limits();
}
inline void GetMaxLotsResponse::unsafe_arena_set_allocated_sell_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sell_limits_);
  }
  _impl_.sell_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.sell_limits)
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* GetMaxLotsResponse::release_sell_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* released = _impl_.sell_limits_;
  _impl_.sell_limits_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* GetMaxLotsResponse::unsafe_arena_release_sell_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.sell_limits)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* temp = _impl_.sell_limits_;
  _impl_.sell_limits_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* GetMaxLotsResponse::_internal_mutable_sell_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sell_limits_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView>(GetArena());
    _impl_.sell_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView*>(p);
  }
  return _impl_.sell_limits_;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* GetMaxLotsResponse::mutable_sell_limits() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* _msg = _internal_mutable_sell_limits();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.sell_limits)
  return _msg;
}
inline void GetMaxLotsResponse::set_allocated_sell_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sell_limits_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.sell_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.sell_limits)
}

// .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_margin_limits = 5;
inline bool GetMaxLotsResponse::has_sell_margin_limits() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sell_margin_limits_ != nullptr);
  return value;
}
inline void GetMaxLotsResponse::clear_sell_margin_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sell_margin_limits_ != nullptr) _impl_.sell_margin_limits_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView& GetMaxLotsResponse::_internal_sell_margin_limits() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* p = _impl_.sell_margin_limits_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView&>(::tinkoff::public_::invest::api::contract::v1::_GetMaxLotsResponse_SellLimitsView_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView& GetMaxLotsResponse::sell_margin_limits() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.sell_margin_limits)
  return _internal_sell_margin_limits();
}
inline void GetMaxLotsResponse::unsafe_arena_set_allocated_sell_margin_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sell_margin_limits_);
  }
  _impl_.sell_margin_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.sell_margin_limits)
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* GetMaxLotsResponse::release_sell_margin_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* released = _impl_.sell_margin_limits_;
  _impl_.sell_margin_limits_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* GetMaxLotsResponse::unsafe_arena_release_sell_margin_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.sell_margin_limits)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* temp = _impl_.sell_margin_limits_;
  _impl_.sell_margin_limits_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* GetMaxLotsResponse::_internal_mutable_sell_margin_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sell_margin_limits_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView>(GetArena());
    _impl_.sell_margin_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView*>(p);
  }
  return _impl_.sell_margin_limits_;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* GetMaxLotsResponse::mutable_sell_margin_limits() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* _msg = _internal_mutable_sell_margin_limits();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.sell_margin_limits)
  return _msg;
}
inline void GetMaxLotsResponse::set_allocated_sell_margin_limits(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.sell_margin_limits_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.sell_margin_limits_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.sell_margin_limits)
}

// -------------------------------------------------------------------

// GetOrderPriceRequest

// string account_id = 1;
inline void GetOrderPriceRequest::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& GetOrderPriceRequest::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOrderPriceRequest::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.account_id)
}
inline std::string* GetOrderPriceRequest::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.account_id)
  return _s;
}
inline const std::string& GetOrderPriceRequest::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void GetOrderPriceRequest::_internal_set_account_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* GetOrderPriceRequest::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* GetOrderPriceRequest::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.account_id)
  return _impl_.account_id_.Release();
}
inline void GetOrderPriceRequest::set_allocated_account_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.account_id)
}

// string instrument_id = 2;
inline void GetOrderPriceRequest::clear_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.ClearToEmpty();
}
inline const std::string& GetOrderPriceRequest::instrument_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.instrument_id)
  return _internal_instrument_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetOrderPriceRequest::set_instrument_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.instrument_id)
}
inline std::string* GetOrderPriceRequest::mutable_instrument_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instrument_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.instrument_id)
  return _s;
}
inline const std::string& GetOrderPriceRequest::_internal_instrument_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instrument_id_.Get();
}
inline void GetOrderPriceRequest::_internal_set_instrument_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.Set(value, GetArena());
}
inline std::string* GetOrderPriceRequest::_internal_mutable_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.instrument_id_.Mutable( GetArena());
}
inline std::string* GetOrderPriceRequest::release_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.instrument_id)
  return _impl_.instrument_id_.Release();
}
inline void GetOrderPriceRequest::set_allocated_instrument_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.instrument_id_.IsDefault()) {
    _impl_.instrument_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.instrument_id)
}

// .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
inline bool GetOrderPriceRequest::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& GetOrderPriceRequest::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::Quotation* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::Quotation&>(::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& GetOrderPriceRequest::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.price)
  return _internal_price();
}
inline void GetOrderPriceRequest::unsafe_arena_set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.price)
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetOrderPriceRequest::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetOrderPriceRequest::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetOrderPriceRequest::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(GetArena());
    _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(p);
  }
  return _impl_.price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetOrderPriceRequest::mutable_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.price)
  return _msg;
}
inline void GetOrderPriceRequest::set_allocated_price(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.price)
}

// .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
inline void GetOrderPriceRequest::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection GetOrderPriceRequest::direction() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.direction)
  return _internal_direction();
}
inline void GetOrderPriceRequest::set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.direction)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection GetOrderPriceRequest::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderDirection>(_impl_.direction_);
}
inline void GetOrderPriceRequest::_internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// int64 quantity = 13;
inline void GetOrderPriceRequest::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t GetOrderPriceRequest::quantity() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.quantity)
  return _internal_quantity();
}
inline void GetOrderPriceRequest::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.quantity)
}
inline ::int64_t GetOrderPriceRequest::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void GetOrderPriceRequest::_internal_set_quantity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// -------------------------------------------------------------------

// GetOrderPriceResponse_ExtraBond

// .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 2;
inline bool GetOrderPriceResponse_ExtraBond::has_aci_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.aci_value_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse_ExtraBond::_internal_aci_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.aci_value_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse_ExtraBond::aci_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond.aci_value)
  return _internal_aci_value();
}
inline void GetOrderPriceResponse_ExtraBond::unsafe_arena_set_allocated_aci_value(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.aci_value_);
  }
  _impl_.aci_value_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond.aci_value)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse_ExtraBond::release_aci_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.aci_value_;
  _impl_.aci_value_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse_ExtraBond::unsafe_arena_release_aci_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond.aci_value)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.aci_value_;
  _impl_.aci_value_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse_ExtraBond::_internal_mutable_aci_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.aci_value_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.aci_value_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.aci_value_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse_ExtraBond::mutable_aci_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_aci_value();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond.aci_value)
  return _msg;
}
inline void GetOrderPriceResponse_ExtraBond::set_allocated_aci_value(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.aci_value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.aci_value_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond.aci_value)
}

// .tinkoff.public.invest.api.contract.v1.Quotation nominal_conversion_rate = 3;
inline bool GetOrderPriceResponse_ExtraBond::has_nominal_conversion_rate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nominal_conversion_rate_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& GetOrderPriceResponse_ExtraBond::_internal_nominal_conversion_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::Quotation* p = _impl_.nominal_conversion_rate_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::Quotation&>(::tinkoff::public_::invest::api::contract::v1::_Quotation_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Quotation& GetOrderPriceResponse_ExtraBond::nominal_conversion_rate() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond.nominal_conversion_rate)
  return _internal_nominal_conversion_rate();
}
inline void GetOrderPriceResponse_ExtraBond::unsafe_arena_set_allocated_nominal_conversion_rate(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nominal_conversion_rate_);
  }
  _impl_.nominal_conversion_rate_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond.nominal_conversion_rate)
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetOrderPriceResponse_ExtraBond::release_nominal_conversion_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* released = _impl_.nominal_conversion_rate_;
  _impl_.nominal_conversion_rate_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetOrderPriceResponse_ExtraBond::unsafe_arena_release_nominal_conversion_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond.nominal_conversion_rate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* temp = _impl_.nominal_conversion_rate_;
  _impl_.nominal_conversion_rate_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetOrderPriceResponse_ExtraBond::_internal_mutable_nominal_conversion_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nominal_conversion_rate_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(GetArena());
    _impl_.nominal_conversion_rate_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(p);
  }
  return _impl_.nominal_conversion_rate_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Quotation* GetOrderPriceResponse_ExtraBond::mutable_nominal_conversion_rate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::Quotation* _msg = _internal_mutable_nominal_conversion_rate();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond.nominal_conversion_rate)
  return _msg;
}
inline void GetOrderPriceResponse_ExtraBond::set_allocated_nominal_conversion_rate(::tinkoff::public_::invest::api::contract::v1::Quotation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nominal_conversion_rate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.nominal_conversion_rate_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Quotation*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond.nominal_conversion_rate)
}

// -------------------------------------------------------------------

// GetOrderPriceResponse_ExtraFuture

// .tinkoff.public.invest.api.contract.v1.MoneyValue initial_margin = 2;
inline bool GetOrderPriceResponse_ExtraFuture::has_initial_margin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_margin_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse_ExtraFuture::_internal_initial_margin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.initial_margin_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse_ExtraFuture::initial_margin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture.initial_margin)
  return _internal_initial_margin();
}
inline void GetOrderPriceResponse_ExtraFuture::unsafe_arena_set_allocated_initial_margin(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_margin_);
  }
  _impl_.initial_margin_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture.initial_margin)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse_ExtraFuture::release_initial_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.initial_margin_;
  _impl_.initial_margin_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse_ExtraFuture::unsafe_arena_release_initial_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture.initial_margin)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.initial_margin_;
  _impl_.initial_margin_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse_ExtraFuture::_internal_mutable_initial_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_margin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.initial_margin_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.initial_margin_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse_ExtraFuture::mutable_initial_margin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_initial_margin();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture.initial_margin)
  return _msg;
}
inline void GetOrderPriceResponse_ExtraFuture::set_allocated_initial_margin(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_margin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.initial_margin_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture.initial_margin)
}

// -------------------------------------------------------------------

// GetOrderPriceResponse

// .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 1;
inline bool GetOrderPriceResponse::has_total_order_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.total_order_amount_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::_internal_total_order_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.total_order_amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::total_order_amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.total_order_amount)
  return _internal_total_order_amount();
}
inline void GetOrderPriceResponse::unsafe_arena_set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_order_amount_);
  }
  _impl_.total_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.total_order_amount)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::release_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.total_order_amount_;
  _impl_.total_order_amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::unsafe_arena_release_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.total_order_amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.total_order_amount_;
  _impl_.total_order_amount_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::_internal_mutable_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_order_amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.total_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.total_order_amount_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::mutable_total_order_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_total_order_amount();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.total_order_amount)
  return _msg;
}
inline void GetOrderPriceResponse::set_allocated_total_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_order_amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.total_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.total_order_amount)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_amount = 5;
inline bool GetOrderPriceResponse::has_initial_order_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_order_amount_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::_internal_initial_order_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.initial_order_amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::initial_order_amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.initial_order_amount)
  return _internal_initial_order_amount();
}
inline void GetOrderPriceResponse::unsafe_arena_set_allocated_initial_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_order_amount_);
  }
  _impl_.initial_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.initial_order_amount)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::release_initial_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.initial_order_amount_;
  _impl_.initial_order_amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::unsafe_arena_release_initial_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.initial_order_amount)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.initial_order_amount_;
  _impl_.initial_order_amount_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::_internal_mutable_initial_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_order_amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.initial_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.initial_order_amount_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::mutable_initial_order_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_initial_order_amount();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.initial_order_amount)
  return _msg;
}
inline void GetOrderPriceResponse::set_allocated_initial_order_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_order_amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.initial_order_amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.initial_order_amount)
}

// int64 lots_requested = 3;
inline void GetOrderPriceResponse::clear_lots_requested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_requested_ = ::int64_t{0};
}
inline ::int64_t GetOrderPriceResponse::lots_requested() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.lots_requested)
  return _internal_lots_requested();
}
inline void GetOrderPriceResponse::set_lots_requested(::int64_t value) {
  _internal_set_lots_requested(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.lots_requested)
}
inline ::int64_t GetOrderPriceResponse::_internal_lots_requested() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lots_requested_;
}
inline void GetOrderPriceResponse::_internal_set_lots_requested(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_requested_ = value;
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 7;
inline bool GetOrderPriceResponse::has_executed_commission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.executed_commission_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::_internal_executed_commission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.executed_commission_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::executed_commission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.executed_commission)
  return _internal_executed_commission();
}
inline void GetOrderPriceResponse::unsafe_arena_set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_commission_);
  }
  _impl_.executed_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.executed_commission)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::release_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.executed_commission_;
  _impl_.executed_commission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::unsafe_arena_release_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.executed_commission)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.executed_commission_;
  _impl_.executed_commission_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::_internal_mutable_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_commission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.executed_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.executed_commission_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::mutable_executed_commission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_executed_commission();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.executed_commission)
  return _msg;
}
inline void GetOrderPriceResponse::set_allocated_executed_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_commission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.executed_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.executed_commission)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission_rub = 8;
inline bool GetOrderPriceResponse::has_executed_commission_rub() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.executed_commission_rub_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::_internal_executed_commission_rub() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.executed_commission_rub_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::executed_commission_rub() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.executed_commission_rub)
  return _internal_executed_commission_rub();
}
inline void GetOrderPriceResponse::unsafe_arena_set_allocated_executed_commission_rub(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_commission_rub_);
  }
  _impl_.executed_commission_rub_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.executed_commission_rub)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::release_executed_commission_rub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.executed_commission_rub_;
  _impl_.executed_commission_rub_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::unsafe_arena_release_executed_commission_rub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.executed_commission_rub)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.executed_commission_rub_;
  _impl_.executed_commission_rub_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::_internal_mutable_executed_commission_rub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_commission_rub_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.executed_commission_rub_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.executed_commission_rub_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::mutable_executed_commission_rub() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_executed_commission_rub();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.executed_commission_rub)
  return _msg;
}
inline void GetOrderPriceResponse::set_allocated_executed_commission_rub(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_commission_rub_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.executed_commission_rub_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.executed_commission_rub)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 9;
inline bool GetOrderPriceResponse::has_service_commission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.service_commission_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::_internal_service_commission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.service_commission_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::service_commission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.service_commission)
  return _internal_service_commission();
}
inline void GetOrderPriceResponse::unsafe_arena_set_allocated_service_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.service_commission_);
  }
  _impl_.service_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.service_commission)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::release_service_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.service_commission_;
  _impl_.service_commission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::unsafe_arena_release_service_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.service_commission)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.service_commission_;
  _impl_.service_commission_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::_internal_mutable_service_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.service_commission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.service_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.service_commission_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::mutable_service_commission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_service_commission();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.service_commission)
  return _msg;
}
inline void GetOrderPriceResponse::set_allocated_service_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.service_commission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.service_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.service_commission)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue deal_commission = 10;
inline bool GetOrderPriceResponse::has_deal_commission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deal_commission_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::_internal_deal_commission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.deal_commission_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& GetOrderPriceResponse::deal_commission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.deal_commission)
  return _internal_deal_commission();
}
inline void GetOrderPriceResponse::unsafe_arena_set_allocated_deal_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deal_commission_);
  }
  _impl_.deal_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.deal_commission)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::release_deal_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.deal_commission_;
  _impl_.deal_commission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::unsafe_arena_release_deal_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.deal_commission)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.deal_commission_;
  _impl_.deal_commission_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::_internal_mutable_deal_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deal_commission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.deal_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.deal_commission_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* GetOrderPriceResponse::mutable_deal_commission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_deal_commission();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.deal_commission)
  return _msg;
}
inline void GetOrderPriceResponse::set_allocated_deal_commission(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deal_commission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.deal_commission_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.deal_commission)
}

// .tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond extra_bond = 12;
inline bool GetOrderPriceResponse::has_extra_bond() const {
  return instrument_extra_case() == kExtraBond;
}
inline bool GetOrderPriceResponse::_internal_has_extra_bond() const {
  return instrument_extra_case() == kExtraBond;
}
inline void GetOrderPriceResponse::set_has_extra_bond() {
  _impl_._oneof_case_[0] = kExtraBond;
}
inline void GetOrderPriceResponse::clear_extra_bond() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (instrument_extra_case() == kExtraBond) {
    if (GetArena() == nullptr) {
      delete _impl_.instrument_extra_.extra_bond_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.instrument_extra_.extra_bond_);
    }
    clear_has_instrument_extra();
  }
}
inline ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* GetOrderPriceResponse::release_extra_bond() {
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_bond)
  if (instrument_extra_case() == kExtraBond) {
    clear_has_instrument_extra();
    auto* temp = _impl_.instrument_extra_.extra_bond_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.instrument_extra_.extra_bond_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond& GetOrderPriceResponse::_internal_extra_bond() const {
  return instrument_extra_case() == kExtraBond ? *_impl_.instrument_extra_.extra_bond_ : reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond&>(::tinkoff::public_::invest::api::contract::v1::_GetOrderPriceResponse_ExtraBond_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond& GetOrderPriceResponse::extra_bond() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_bond)
  return _internal_extra_bond();
}
inline ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* GetOrderPriceResponse::unsafe_arena_release_extra_bond() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_bond)
  if (instrument_extra_case() == kExtraBond) {
    clear_has_instrument_extra();
    auto* temp = _impl_.instrument_extra_.extra_bond_;
    _impl_.instrument_extra_.extra_bond_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GetOrderPriceResponse::unsafe_arena_set_allocated_extra_bond(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_instrument_extra();
  if (value) {
    set_has_extra_bond();
    _impl_.instrument_extra_.extra_bond_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_bond)
}
inline ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* GetOrderPriceResponse::_internal_mutable_extra_bond() {
  if (instrument_extra_case() != kExtraBond) {
    clear_instrument_extra();
    set_has_extra_bond();
    _impl_.instrument_extra_.extra_bond_ =
        ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond>(GetArena());
  }
  return _impl_.instrument_extra_.extra_bond_;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* GetOrderPriceResponse::mutable_extra_bond() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* _msg = _internal_mutable_extra_bond();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_bond)
  return _msg;
}

// .tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture extra_future = 13;
inline bool GetOrderPriceResponse::has_extra_future() const {
  return instrument_extra_case() == kExtraFuture;
}
inline bool GetOrderPriceResponse::_internal_has_extra_future() const {
  return instrument_extra_case() == kExtraFuture;
}
inline void GetOrderPriceResponse::set_has_extra_future() {
  _impl_._oneof_case_[0] = kExtraFuture;
}
inline void GetOrderPriceResponse::clear_extra_future() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (instrument_extra_case() == kExtraFuture) {
    if (GetArena() == nullptr) {
      delete _impl_.instrument_extra_.extra_future_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.instrument_extra_.extra_future_);
    }
    clear_has_instrument_extra();
  }
}
inline ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* GetOrderPriceResponse::release_extra_future() {
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_future)
  if (instrument_extra_case() == kExtraFuture) {
    clear_has_instrument_extra();
    auto* temp = _impl_.instrument_extra_.extra_future_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.instrument_extra_.extra_future_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture& GetOrderPriceResponse::_internal_extra_future() const {
  return instrument_extra_case() == kExtraFuture ? *_impl_.instrument_extra_.extra_future_ : reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture&>(::tinkoff::public_::invest::api::contract::v1::_GetOrderPriceResponse_ExtraFuture_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture& GetOrderPriceResponse::extra_future() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_future)
  return _internal_extra_future();
}
inline ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* GetOrderPriceResponse::unsafe_arena_release_extra_future() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_future)
  if (instrument_extra_case() == kExtraFuture) {
    clear_has_instrument_extra();
    auto* temp = _impl_.instrument_extra_.extra_future_;
    _impl_.instrument_extra_.extra_future_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GetOrderPriceResponse::unsafe_arena_set_allocated_extra_future(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_instrument_extra();
  if (value) {
    set_has_extra_future();
    _impl_.instrument_extra_.extra_future_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_future)
}
inline ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* GetOrderPriceResponse::_internal_mutable_extra_future() {
  if (instrument_extra_case() != kExtraFuture) {
    clear_instrument_extra();
    set_has_extra_future();
    _impl_.instrument_extra_.extra_future_ =
        ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture>(GetArena());
  }
  return _impl_.instrument_extra_.extra_future_;
}
inline ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* GetOrderPriceResponse::mutable_extra_future() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* _msg = _internal_mutable_extra_future();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_future)
  return _msg;
}

inline bool GetOrderPriceResponse::has_instrument_extra() const {
  return instrument_extra_case() != INSTRUMENT_EXTRA_NOT_SET;
}
inline void GetOrderPriceResponse::clear_has_instrument_extra() {
  _impl_._oneof_case_[0] = INSTRUMENT_EXTRA_NOT_SET;
}
inline GetOrderPriceResponse::InstrumentExtraCase GetOrderPriceResponse::instrument_extra_case() const {
  return GetOrderPriceResponse::InstrumentExtraCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// OrderStateStreamRequest

// repeated string accounts = 1;
inline int OrderStateStreamRequest::_internal_accounts_size() const {
  return _internal_accounts().size();
}
inline int OrderStateStreamRequest::accounts_size() const {
  return _internal_accounts_size();
}
inline void OrderStateStreamRequest::clear_accounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accounts_.Clear();
}
inline std::string* OrderStateStreamRequest::add_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_accounts()->Add();
  // @@protoc_insertion_point(field_add_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest.accounts)
  return _s;
}
inline const std::string& OrderStateStreamRequest::accounts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest.accounts)
  return _internal_accounts().Get(index);
}
inline std::string* OrderStateStreamRequest::mutable_accounts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest.accounts)
  return _internal_mutable_accounts()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void OrderStateStreamRequest::set_accounts(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_accounts()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest.accounts)
}
template <typename Arg_, typename... Args_>
inline void OrderStateStreamRequest::add_accounts(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_accounts(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest.accounts)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OrderStateStreamRequest::accounts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest.accounts)
  return _internal_accounts();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OrderStateStreamRequest::mutable_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest.accounts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accounts();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OrderStateStreamRequest::_internal_accounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accounts_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OrderStateStreamRequest::_internal_mutable_accounts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accounts_;
}

// optional int32 ping_delay_millis = 15;
inline bool OrderStateStreamRequest::has_ping_delay_millis() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderStateStreamRequest::clear_ping_delay_millis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_delay_millis_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t OrderStateStreamRequest::ping_delay_millis() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest.ping_delay_millis)
  return _internal_ping_delay_millis();
}
inline void OrderStateStreamRequest::set_ping_delay_millis(::int32_t value) {
  _internal_set_ping_delay_millis(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest.ping_delay_millis)
}
inline ::int32_t OrderStateStreamRequest::_internal_ping_delay_millis() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ping_delay_millis_;
}
inline void OrderStateStreamRequest::_internal_set_ping_delay_millis(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_delay_millis_ = value;
}

// -------------------------------------------------------------------

// SubscriptionResponse

// string tracking_id = 1;
inline void SubscriptionResponse::clear_tracking_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracking_id_.ClearToEmpty();
}
inline const std::string& SubscriptionResponse::tracking_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.tracking_id)
  return _internal_tracking_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscriptionResponse::set_tracking_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracking_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.tracking_id)
}
inline std::string* SubscriptionResponse::mutable_tracking_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tracking_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.tracking_id)
  return _s;
}
inline const std::string& SubscriptionResponse::_internal_tracking_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tracking_id_.Get();
}
inline void SubscriptionResponse::_internal_set_tracking_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracking_id_.Set(value, GetArena());
}
inline std::string* SubscriptionResponse::_internal_mutable_tracking_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tracking_id_.Mutable( GetArena());
}
inline std::string* SubscriptionResponse::release_tracking_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.tracking_id)
  return _impl_.tracking_id_.Release();
}
inline void SubscriptionResponse::set_allocated_tracking_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracking_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.tracking_id_.IsDefault()) {
    _impl_.tracking_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.tracking_id)
}

// .tinkoff.public.invest.api.contract.v1.ResultSubscriptionStatus status = 2;
inline void SubscriptionResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::ResultSubscriptionStatus SubscriptionResponse::status() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.status)
  return _internal_status();
}
inline void SubscriptionResponse::set_status(::tinkoff::public_::invest::api::contract::v1::ResultSubscriptionStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.status)
}
inline ::tinkoff::public_::invest::api::contract::v1::ResultSubscriptionStatus SubscriptionResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::ResultSubscriptionStatus>(_impl_.status_);
}
inline void SubscriptionResponse::_internal_set_status(::tinkoff::public_::invest::api::contract::v1::ResultSubscriptionStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string stream_id = 4;
inline void SubscriptionResponse::clear_stream_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_id_.ClearToEmpty();
}
inline const std::string& SubscriptionResponse::stream_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.stream_id)
  return _internal_stream_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscriptionResponse::set_stream_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.stream_id)
}
inline std::string* SubscriptionResponse::mutable_stream_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stream_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.stream_id)
  return _s;
}
inline const std::string& SubscriptionResponse::_internal_stream_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stream_id_.Get();
}
inline void SubscriptionResponse::_internal_set_stream_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_id_.Set(value, GetArena());
}
inline std::string* SubscriptionResponse::_internal_mutable_stream_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.stream_id_.Mutable( GetArena());
}
inline std::string* SubscriptionResponse::release_stream_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.stream_id)
  return _impl_.stream_id_.Release();
}
inline void SubscriptionResponse::set_allocated_stream_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.stream_id_.IsDefault()) {
    _impl_.stream_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.stream_id)
}

// repeated string accounts = 5;
inline int SubscriptionResponse::_internal_accounts_size() const {
  return _internal_accounts().size();
}
inline int SubscriptionResponse::accounts_size() const {
  return _internal_accounts_size();
}
inline void SubscriptionResponse::clear_accounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accounts_.Clear();
}
inline std::string* SubscriptionResponse::add_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_accounts()->Add();
  // @@protoc_insertion_point(field_add_mutable:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.accounts)
  return _s;
}
inline const std::string& SubscriptionResponse::accounts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.accounts)
  return _internal_accounts().Get(index);
}
inline std::string* SubscriptionResponse::mutable_accounts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.accounts)
  return _internal_mutable_accounts()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SubscriptionResponse::set_accounts(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_accounts()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.accounts)
}
template <typename Arg_, typename... Args_>
inline void SubscriptionResponse::add_accounts(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_accounts(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.accounts)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SubscriptionResponse::accounts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.accounts)
  return _internal_accounts();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SubscriptionResponse::mutable_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.accounts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accounts();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SubscriptionResponse::_internal_accounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accounts_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SubscriptionResponse::_internal_mutable_accounts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accounts_;
}

// optional .tinkoff.public.invest.api.contract.v1.ErrorDetail error = 7;
inline bool SubscriptionResponse::has_error() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.error_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::ErrorDetail& SubscriptionResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* p = _impl_.error_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::ErrorDetail&>(::tinkoff::public_::invest::api::contract::v1::_ErrorDetail_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::ErrorDetail& SubscriptionResponse::error() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.error)
  return _internal_error();
}
inline void SubscriptionResponse::unsafe_arena_set_allocated_error(::tinkoff::public_::invest::api::contract::v1::ErrorDetail* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }
  _impl_.error_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::ErrorDetail*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.error)
}
inline ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* SubscriptionResponse::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* released = _impl_.error_;
  _impl_.error_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* SubscriptionResponse::unsafe_arena_release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.error)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* temp = _impl_.error_;
  _impl_.error_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* SubscriptionResponse::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::ErrorDetail>(GetArena());
    _impl_.error_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::ErrorDetail*>(p);
  }
  return _impl_.error_;
}
inline ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* SubscriptionResponse::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tinkoff::public_::invest::api::contract::v1::ErrorDetail* _msg = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.error)
  return _msg;
}
inline void SubscriptionResponse::set_allocated_error(::tinkoff::public_::invest::api::contract::v1::ErrorDetail* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.error_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.error_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::ErrorDetail*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.SubscriptionResponse.error)
}

// -------------------------------------------------------------------

// OrderStateStreamResponse_OrderState

// string order_id = 1;
inline void OrderStateStreamResponse_OrderState::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.ClearToEmpty();
}
inline const std::string& OrderStateStreamResponse_OrderState::order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_id)
  return _internal_order_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStateStreamResponse_OrderState::set_order_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_id)
}
inline std::string* OrderStateStreamResponse_OrderState::mutable_order_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_id)
  return _s;
}
inline const std::string& OrderStateStreamResponse_OrderState::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_.Get();
}
inline void OrderStateStreamResponse_OrderState::_internal_set_order_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.Set(value, GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::_internal_mutable_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.order_id_.Mutable( GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::release_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_id)
  return _impl_.order_id_.Release();
}
inline void OrderStateStreamResponse_OrderState::set_allocated_order_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_id_.IsDefault()) {
    _impl_.order_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_id)
}

// optional string order_request_id = 2;
inline bool OrderStateStreamResponse_OrderState::has_order_request_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderStateStreamResponse_OrderState::clear_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_request_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrderStateStreamResponse_OrderState::order_request_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_request_id)
  return _internal_order_request_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStateStreamResponse_OrderState::set_order_request_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.order_request_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_request_id)
}
inline std::string* OrderStateStreamResponse_OrderState::mutable_order_request_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_order_request_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_request_id)
  return _s;
}
inline const std::string& OrderStateStreamResponse_OrderState::_internal_order_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_request_id_.Get();
}
inline void OrderStateStreamResponse_OrderState::_internal_set_order_request_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.order_request_id_.Set(value, GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::_internal_mutable_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.order_request_id_.Mutable( GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::release_order_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_request_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.order_request_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.order_request_id_.Set("", GetArena());
  }
  return released;
}
inline void OrderStateStreamResponse_OrderState::set_allocated_order_request_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.order_request_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_request_id_.IsDefault()) {
    _impl_.order_request_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_request_id)
}

// string client_code = 3;
inline void OrderStateStreamResponse_OrderState::clear_client_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_code_.ClearToEmpty();
}
inline const std::string& OrderStateStreamResponse_OrderState::client_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.client_code)
  return _internal_client_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStateStreamResponse_OrderState::set_client_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.client_code)
}
inline std::string* OrderStateStreamResponse_OrderState::mutable_client_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_code();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.client_code)
  return _s;
}
inline const std::string& OrderStateStreamResponse_OrderState::_internal_client_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_code_.Get();
}
inline void OrderStateStreamResponse_OrderState::_internal_set_client_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_code_.Set(value, GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::_internal_mutable_client_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_code_.Mutable( GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::release_client_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.client_code)
  return _impl_.client_code_.Release();
}
inline void OrderStateStreamResponse_OrderState::set_allocated_client_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_code_.IsDefault()) {
    _impl_.client_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.client_code)
}

// .google.protobuf.Timestamp created_at = 4;
inline bool OrderStateStreamResponse_OrderState::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& OrderStateStreamResponse_OrderState::_internal_created_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& OrderStateStreamResponse_OrderState::created_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.created_at)
  return _internal_created_at();
}
inline void OrderStateStreamResponse_OrderState::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.created_at)
}
inline ::google::protobuf::Timestamp* OrderStateStreamResponse_OrderState::release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* OrderStateStreamResponse_OrderState::unsafe_arena_release_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.created_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* OrderStateStreamResponse_OrderState::_internal_mutable_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* OrderStateStreamResponse_OrderState::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.created_at)
  return _msg;
}
inline void OrderStateStreamResponse_OrderState::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.created_at)
}

// .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 5;
inline void OrderStateStreamResponse_OrderState::clear_execution_report_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_report_status_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus OrderStateStreamResponse_OrderState::execution_report_status() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.execution_report_status)
  return _internal_execution_report_status();
}
inline void OrderStateStreamResponse_OrderState::set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value) {
  _internal_set_execution_report_status(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.execution_report_status)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus OrderStateStreamResponse_OrderState::_internal_execution_report_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus>(_impl_.execution_report_status_);
}
inline void OrderStateStreamResponse_OrderState::_internal_set_execution_report_status(::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execution_report_status_ = value;
}

// optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.StatusCauseInfo status_info = 6;
inline bool OrderStateStreamResponse_OrderState::has_status_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void OrderStateStreamResponse_OrderState::clear_status_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_info_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse_OrderState::status_info() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.status_info)
  return _internal_status_info();
}
inline void OrderStateStreamResponse_OrderState::set_status_info(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo value) {
  _internal_set_status_info(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.status_info)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse_OrderState::_internal_status_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo>(_impl_.status_info_);
}
inline void OrderStateStreamResponse_OrderState::_internal_set_status_info(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_info_ = value;
}

// string ticker = 7;
inline void OrderStateStreamResponse_OrderState::clear_ticker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ticker_.ClearToEmpty();
}
inline const std::string& OrderStateStreamResponse_OrderState::ticker() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.ticker)
  return _internal_ticker();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStateStreamResponse_OrderState::set_ticker(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ticker_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.ticker)
}
inline std::string* OrderStateStreamResponse_OrderState::mutable_ticker() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ticker();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.ticker)
  return _s;
}
inline const std::string& OrderStateStreamResponse_OrderState::_internal_ticker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ticker_.Get();
}
inline void OrderStateStreamResponse_OrderState::_internal_set_ticker(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ticker_.Set(value, GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::_internal_mutable_ticker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ticker_.Mutable( GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::release_ticker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.ticker)
  return _impl_.ticker_.Release();
}
inline void OrderStateStreamResponse_OrderState::set_allocated_ticker(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ticker_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ticker_.IsDefault()) {
    _impl_.ticker_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.ticker)
}

// string class_code = 8;
inline void OrderStateStreamResponse_OrderState::clear_class_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.class_code_.ClearToEmpty();
}
inline const std::string& OrderStateStreamResponse_OrderState::class_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.class_code)
  return _internal_class_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStateStreamResponse_OrderState::set_class_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.class_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.class_code)
}
inline std::string* OrderStateStreamResponse_OrderState::mutable_class_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_class_code();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.class_code)
  return _s;
}
inline const std::string& OrderStateStreamResponse_OrderState::_internal_class_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.class_code_.Get();
}
inline void OrderStateStreamResponse_OrderState::_internal_set_class_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.class_code_.Set(value, GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::_internal_mutable_class_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.class_code_.Mutable( GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::release_class_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.class_code)
  return _impl_.class_code_.Release();
}
inline void OrderStateStreamResponse_OrderState::set_allocated_class_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.class_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.class_code_.IsDefault()) {
    _impl_.class_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.class_code)
}

// int32 lot_size = 9;
inline void OrderStateStreamResponse_OrderState::clear_lot_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lot_size_ = 0;
}
inline ::int32_t OrderStateStreamResponse_OrderState::lot_size() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.lot_size)
  return _internal_lot_size();
}
inline void OrderStateStreamResponse_OrderState::set_lot_size(::int32_t value) {
  _internal_set_lot_size(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.lot_size)
}
inline ::int32_t OrderStateStreamResponse_OrderState::_internal_lot_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lot_size_;
}
inline void OrderStateStreamResponse_OrderState::_internal_set_lot_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lot_size_ = value;
}

// .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 10;
inline void OrderStateStreamResponse_OrderState::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection OrderStateStreamResponse_OrderState::direction() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.direction)
  return _internal_direction();
}
inline void OrderStateStreamResponse_OrderState::set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.direction)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderDirection OrderStateStreamResponse_OrderState::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderDirection>(_impl_.direction_);
}
inline void OrderStateStreamResponse_OrderState::_internal_set_direction(::tinkoff::public_::invest::api::contract::v1::OrderDirection value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 11;
inline void OrderStateStreamResponse_OrderState::clear_time_in_force() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_in_force_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::TimeInForceType OrderStateStreamResponse_OrderState::time_in_force() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.time_in_force)
  return _internal_time_in_force();
}
inline void OrderStateStreamResponse_OrderState::set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value) {
  _internal_set_time_in_force(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.time_in_force)
}
inline ::tinkoff::public_::invest::api::contract::v1::TimeInForceType OrderStateStreamResponse_OrderState::_internal_time_in_force() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::TimeInForceType>(_impl_.time_in_force_);
}
inline void OrderStateStreamResponse_OrderState::_internal_set_time_in_force(::tinkoff::public_::invest::api::contract::v1::TimeInForceType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_in_force_ = value;
}

// .tinkoff.public.invest.api.contract.v1.OrderType order_type = 12;
inline void OrderStateStreamResponse_OrderState::clear_order_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = 0;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderType OrderStateStreamResponse_OrderState::order_type() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_type)
  return _internal_order_type();
}
inline void OrderStateStreamResponse_OrderState::set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value) {
  _internal_set_order_type(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_type)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderType OrderStateStreamResponse_OrderState::_internal_order_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderType>(_impl_.order_type_);
}
inline void OrderStateStreamResponse_OrderState::_internal_set_order_type(::tinkoff::public_::invest::api::contract::v1::OrderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = value;
}

// string account_id = 13;
inline void OrderStateStreamResponse_OrderState::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
}
inline const std::string& OrderStateStreamResponse_OrderState::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStateStreamResponse_OrderState::set_account_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.account_id)
}
inline std::string* OrderStateStreamResponse_OrderState::mutable_account_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.account_id)
  return _s;
}
inline const std::string& OrderStateStreamResponse_OrderState::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void OrderStateStreamResponse_OrderState::_internal_set_account_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.Set(value, GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_id_.Mutable( GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.account_id)
  return _impl_.account_id_.Release();
}
inline void OrderStateStreamResponse_OrderState::set_allocated_account_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.account_id)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 22;
inline bool OrderStateStreamResponse_OrderState::has_initial_order_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.initial_order_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderStateStreamResponse_OrderState::_internal_initial_order_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.initial_order_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderStateStreamResponse_OrderState::initial_order_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.initial_order_price)
  return _internal_initial_order_price();
}
inline void OrderStateStreamResponse_OrderState::unsafe_arena_set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_order_price_);
  }
  _impl_.initial_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.initial_order_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::release_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.initial_order_price_;
  _impl_.initial_order_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::unsafe_arena_release_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.initial_order_price)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.initial_order_price_;
  _impl_.initial_order_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::_internal_mutable_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_order_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.initial_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.initial_order_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::mutable_initial_order_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_initial_order_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.initial_order_price)
  return _msg;
}
inline void OrderStateStreamResponse_OrderState::set_allocated_initial_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.initial_order_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.initial_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.initial_order_price)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue order_price = 23;
inline bool OrderStateStreamResponse_OrderState::has_order_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.order_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderStateStreamResponse_OrderState::_internal_order_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.order_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderStateStreamResponse_OrderState::order_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_price)
  return _internal_order_price();
}
inline void OrderStateStreamResponse_OrderState::unsafe_arena_set_allocated_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.order_price_);
  }
  _impl_.order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::release_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.order_price_;
  _impl_.order_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::unsafe_arena_release_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_price)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.order_price_;
  _impl_.order_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::_internal_mutable_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.order_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.order_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::mutable_order_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_order_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_price)
  return _msg;
}
inline void OrderStateStreamResponse_OrderState::set_allocated_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.order_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_price)
}

// optional .tinkoff.public.invest.api.contract.v1.MoneyValue amount = 24;
inline bool OrderStateStreamResponse_OrderState::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderStateStreamResponse_OrderState::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderStateStreamResponse_OrderState::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.amount)
  return _internal_amount();
}
inline void OrderStateStreamResponse_OrderState::unsafe_arena_set_allocated_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.amount)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.amount)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.amount_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.amount)
  return _msg;
}
inline void OrderStateStreamResponse_OrderState::set_allocated_amount(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.amount_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.amount)
}

// .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 25;
inline bool OrderStateStreamResponse_OrderState::has_executed_order_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.executed_order_price_ != nullptr);
  return value;
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderStateStreamResponse_OrderState::_internal_executed_order_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tinkoff::public_::invest::api::contract::v1::MoneyValue* p = _impl_.executed_order_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::tinkoff::public_::invest::api::contract::v1::MoneyValue&>(::tinkoff::public_::invest::api::contract::v1::_MoneyValue_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::MoneyValue& OrderStateStreamResponse_OrderState::executed_order_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.executed_order_price)
  return _internal_executed_order_price();
}
inline void OrderStateStreamResponse_OrderState::unsafe_arena_set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_order_price_);
  }
  _impl_.executed_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.executed_order_price)
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::release_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* released = _impl_.executed_order_price_;
  _impl_.executed_order_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::unsafe_arena_release_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.executed_order_price)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* temp = _impl_.executed_order_price_;
  _impl_.executed_order_price_ = nullptr;
  return temp;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::_internal_mutable_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_order_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(GetArena());
    _impl_.executed_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(p);
  }
  return _impl_.executed_order_price_;
}
inline ::tinkoff::public_::invest::api::contract::v1::MoneyValue* OrderStateStreamResponse_OrderState::mutable_executed_order_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::tinkoff::public_::invest::api::contract::v1::MoneyValue* _msg = _internal_mutable_executed_order_price();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.executed_order_price)
  return _msg;
}
inline void OrderStateStreamResponse_OrderState::set_allocated_executed_order_price(::tinkoff::public_::invest::api::contract::v1::MoneyValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.executed_order_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.executed_order_price_ = reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::MoneyValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.executed_order_price)
}

// string currency = 26;
inline void OrderStateStreamResponse_OrderState::clear_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.ClearToEmpty();
}
inline const std::string& OrderStateStreamResponse_OrderState::currency() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.currency)
  return _internal_currency();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStateStreamResponse_OrderState::set_currency(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.currency)
}
inline std::string* OrderStateStreamResponse_OrderState::mutable_currency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currency();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.currency)
  return _s;
}
inline const std::string& OrderStateStreamResponse_OrderState::_internal_currency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currency_.Get();
}
inline void OrderStateStreamResponse_OrderState::_internal_set_currency(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.Set(value, GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::_internal_mutable_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currency_.Mutable( GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::release_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.currency)
  return _impl_.currency_.Release();
}
inline void OrderStateStreamResponse_OrderState::set_allocated_currency(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.currency_.IsDefault()) {
    _impl_.currency_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.currency)
}

// int64 lots_requested = 27;
inline void OrderStateStreamResponse_OrderState::clear_lots_requested() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_requested_ = ::int64_t{0};
}
inline ::int64_t OrderStateStreamResponse_OrderState::lots_requested() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.lots_requested)
  return _internal_lots_requested();
}
inline void OrderStateStreamResponse_OrderState::set_lots_requested(::int64_t value) {
  _internal_set_lots_requested(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.lots_requested)
}
inline ::int64_t OrderStateStreamResponse_OrderState::_internal_lots_requested() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lots_requested_;
}
inline void OrderStateStreamResponse_OrderState::_internal_set_lots_requested(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_requested_ = value;
}

// int64 lots_executed = 28;
inline void OrderStateStreamResponse_OrderState::clear_lots_executed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_executed_ = ::int64_t{0};
}
inline ::int64_t OrderStateStreamResponse_OrderState::lots_executed() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.lots_executed)
  return _internal_lots_executed();
}
inline void OrderStateStreamResponse_OrderState::set_lots_executed(::int64_t value) {
  _internal_set_lots_executed(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.lots_executed)
}
inline ::int64_t OrderStateStreamResponse_OrderState::_internal_lots_executed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lots_executed_;
}
inline void OrderStateStreamResponse_OrderState::_internal_set_lots_executed(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_executed_ = value;
}

// int64 lots_left = 29;
inline void OrderStateStreamResponse_OrderState::clear_lots_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_left_ = ::int64_t{0};
}
inline ::int64_t OrderStateStreamResponse_OrderState::lots_left() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.lots_left)
  return _internal_lots_left();
}
inline void OrderStateStreamResponse_OrderState::set_lots_left(::int64_t value) {
  _internal_set_lots_left(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.lots_left)
}
inline ::int64_t OrderStateStreamResponse_OrderState::_internal_lots_left() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lots_left_;
}
inline void OrderStateStreamResponse_OrderState::_internal_set_lots_left(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_left_ = value;
}

// int64 lots_cancelled = 30;
inline void OrderStateStreamResponse_OrderState::clear_lots_cancelled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_cancelled_ = ::int64_t{0};
}
inline ::int64_t OrderStateStreamResponse_OrderState::lots_cancelled() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.lots_cancelled)
  return _internal_lots_cancelled();
}
inline void OrderStateStreamResponse_OrderState::set_lots_cancelled(::int64_t value) {
  _internal_set_lots_cancelled(value);
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.lots_cancelled)
}
inline ::int64_t OrderStateStreamResponse_OrderState::_internal_lots_cancelled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lots_cancelled_;
}
inline void OrderStateStreamResponse_OrderState::_internal_set_lots_cancelled(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lots_cancelled_ = value;
}

// optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.MarkerType marker = 31;
inline bool OrderStateStreamResponse_OrderState::has_marker() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void OrderStateStreamResponse_OrderState::clear_marker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.marker_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType OrderStateStreamResponse_OrderState::marker() const {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.marker)
  return _internal_marker();
}
inline void OrderStateStreamResponse_OrderState::set_marker(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType value) {
  _internal_set_marker(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.marker)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType OrderStateStreamResponse_OrderState::_internal_marker() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType>(_impl_.marker_);
}
inline void OrderStateStreamResponse_OrderState::_internal_set_marker(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.marker_ = value;
}

// repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 33;
inline int OrderStateStreamResponse_OrderState::_internal_trades_size() const {
  return _internal_trades().size();
}
inline int OrderStateStreamResponse_OrderState::trades_size() const {
  return _internal_trades_size();
}
inline void OrderStateStreamResponse_OrderState::clear_trades() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trades_.Clear();
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderTrade* OrderStateStreamResponse_OrderState::mutable_trades(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.trades)
  return _internal_mutable_trades()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>* OrderStateStreamResponse_OrderState::mutable_trades()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.trades)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_trades();
}
inline const ::tinkoff::public_::invest::api::contract::v1::OrderTrade& OrderStateStreamResponse_OrderState::trades(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.trades)
  return _internal_trades().Get(index);
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderTrade* OrderStateStreamResponse_OrderState::add_trades() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::tinkoff::public_::invest::api::contract::v1::OrderTrade* _add = _internal_mutable_trades()->Add();
  // @@protoc_insertion_point(field_add:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.trades)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>& OrderStateStreamResponse_OrderState::trades() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.trades)
  return _internal_trades();
}
inline const ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>&
OrderStateStreamResponse_OrderState::_internal_trades() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trades_;
}
inline ::google::protobuf::RepeatedPtrField<::tinkoff::public_::invest::api::contract::v1::OrderTrade>*
OrderStateStreamResponse_OrderState::_internal_mutable_trades() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.trades_;
}

// .google.protobuf.Timestamp completion_time = 35;
inline bool OrderStateStreamResponse_OrderState::has_completion_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.completion_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& OrderStateStreamResponse_OrderState::_internal_completion_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.completion_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& OrderStateStreamResponse_OrderState::completion_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.completion_time)
  return _internal_completion_time();
}
inline void OrderStateStreamResponse_OrderState::unsafe_arena_set_allocated_completion_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.completion_time_);
  }
  _impl_.completion_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.completion_time)
}
inline ::google::protobuf::Timestamp* OrderStateStreamResponse_OrderState::release_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::google::protobuf::Timestamp* released = _impl_.completion_time_;
  _impl_.completion_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* OrderStateStreamResponse_OrderState::unsafe_arena_release_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.completion_time)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::google::protobuf::Timestamp* temp = _impl_.completion_time_;
  _impl_.completion_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* OrderStateStreamResponse_OrderState::_internal_mutable_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.completion_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.completion_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.completion_time_;
}
inline ::google::protobuf::Timestamp* OrderStateStreamResponse_OrderState::mutable_completion_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_completion_time();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.completion_time)
  return _msg;
}
inline void OrderStateStreamResponse_OrderState::set_allocated_completion_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.completion_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.completion_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.completion_time)
}

// string exchange = 36;
inline void OrderStateStreamResponse_OrderState::clear_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_.ClearToEmpty();
}
inline const std::string& OrderStateStreamResponse_OrderState::exchange() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.exchange)
  return _internal_exchange();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStateStreamResponse_OrderState::set_exchange(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.exchange)
}
inline std::string* OrderStateStreamResponse_OrderState::mutable_exchange() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_exchange();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.exchange)
  return _s;
}
inline const std::string& OrderStateStreamResponse_OrderState::_internal_exchange() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exchange_.Get();
}
inline void OrderStateStreamResponse_OrderState::_internal_set_exchange(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_.Set(value, GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::_internal_mutable_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.exchange_.Mutable( GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::release_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.exchange)
  return _impl_.exchange_.Release();
}
inline void OrderStateStreamResponse_OrderState::set_allocated_exchange(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.exchange_.IsDefault()) {
    _impl_.exchange_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.exchange)
}

// string instrument_uid = 41;
inline void OrderStateStreamResponse_OrderState::clear_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.ClearToEmpty();
}
inline const std::string& OrderStateStreamResponse_OrderState::instrument_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.instrument_uid)
  return _internal_instrument_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStateStreamResponse_OrderState::set_instrument_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.instrument_uid)
}
inline std::string* OrderStateStreamResponse_OrderState::mutable_instrument_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_instrument_uid();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.instrument_uid)
  return _s;
}
inline const std::string& OrderStateStreamResponse_OrderState::_internal_instrument_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instrument_uid_.Get();
}
inline void OrderStateStreamResponse_OrderState::_internal_set_instrument_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.Set(value, GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::_internal_mutable_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.instrument_uid_.Mutable( GetArena());
}
inline std::string* OrderStateStreamResponse_OrderState::release_instrument_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.instrument_uid)
  return _impl_.instrument_uid_.Release();
}
inline void OrderStateStreamResponse_OrderState::set_allocated_instrument_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.instrument_uid_.IsDefault()) {
    _impl_.instrument_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.instrument_uid)
}

// -------------------------------------------------------------------

// OrderStateStreamResponse

// .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState order_state = 1;
inline bool OrderStateStreamResponse::has_order_state() const {
  return payload_case() == kOrderState;
}
inline bool OrderStateStreamResponse::_internal_has_order_state() const {
  return payload_case() == kOrderState;
}
inline void OrderStateStreamResponse::set_has_order_state() {
  _impl_._oneof_case_[0] = kOrderState;
}
inline void OrderStateStreamResponse::clear_order_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kOrderState) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.order_state_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_state_);
    }
    clear_has_payload();
  }
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* OrderStateStreamResponse::release_order_state() {
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.order_state)
  if (payload_case() == kOrderState) {
    clear_has_payload();
    auto* temp = _impl_.payload_.order_state_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.order_state_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState& OrderStateStreamResponse::_internal_order_state() const {
  return payload_case() == kOrderState ? *_impl_.payload_.order_state_ : reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState&>(::tinkoff::public_::invest::api::contract::v1::_OrderStateStreamResponse_OrderState_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState& OrderStateStreamResponse::order_state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.order_state)
  return _internal_order_state();
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* OrderStateStreamResponse::unsafe_arena_release_order_state() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.order_state)
  if (payload_case() == kOrderState) {
    clear_has_payload();
    auto* temp = _impl_.payload_.order_state_;
    _impl_.payload_.order_state_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OrderStateStreamResponse::unsafe_arena_set_allocated_order_state(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_order_state();
    _impl_.payload_.order_state_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.order_state)
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* OrderStateStreamResponse::_internal_mutable_order_state() {
  if (payload_case() != kOrderState) {
    clear_payload();
    set_has_order_state();
    _impl_.payload_.order_state_ =
        ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState>(GetArena());
  }
  return _impl_.payload_.order_state_;
}
inline ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* OrderStateStreamResponse::mutable_order_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* _msg = _internal_mutable_order_state();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.order_state)
  return _msg;
}

// .tinkoff.public.invest.api.contract.v1.Ping ping = 2;
inline bool OrderStateStreamResponse::has_ping() const {
  return payload_case() == kPing;
}
inline bool OrderStateStreamResponse::_internal_has_ping() const {
  return payload_case() == kPing;
}
inline void OrderStateStreamResponse::set_has_ping() {
  _impl_._oneof_case_[0] = kPing;
}
inline ::tinkoff::public_::invest::api::contract::v1::Ping* OrderStateStreamResponse::release_ping() {
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.ping)
  if (payload_case() == kPing) {
    clear_has_payload();
    auto* temp = _impl_.payload_.ping_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.ping_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tinkoff::public_::invest::api::contract::v1::Ping& OrderStateStreamResponse::_internal_ping() const {
  return payload_case() == kPing ? *_impl_.payload_.ping_ : reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::Ping&>(::tinkoff::public_::invest::api::contract::v1::_Ping_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::Ping& OrderStateStreamResponse::ping() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.ping)
  return _internal_ping();
}
inline ::tinkoff::public_::invest::api::contract::v1::Ping* OrderStateStreamResponse::unsafe_arena_release_ping() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.ping)
  if (payload_case() == kPing) {
    clear_has_payload();
    auto* temp = _impl_.payload_.ping_;
    _impl_.payload_.ping_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OrderStateStreamResponse::unsafe_arena_set_allocated_ping(::tinkoff::public_::invest::api::contract::v1::Ping* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_ping();
    _impl_.payload_.ping_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.ping)
}
inline ::tinkoff::public_::invest::api::contract::v1::Ping* OrderStateStreamResponse::_internal_mutable_ping() {
  if (payload_case() != kPing) {
    clear_payload();
    set_has_ping();
    _impl_.payload_.ping_ =
        ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::Ping>(GetArena());
  }
  return _impl_.payload_.ping_;
}
inline ::tinkoff::public_::invest::api::contract::v1::Ping* OrderStateStreamResponse::mutable_ping() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tinkoff::public_::invest::api::contract::v1::Ping* _msg = _internal_mutable_ping();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.ping)
  return _msg;
}

// .tinkoff.public.invest.api.contract.v1.SubscriptionResponse subscription = 3;
inline bool OrderStateStreamResponse::has_subscription() const {
  return payload_case() == kSubscription;
}
inline bool OrderStateStreamResponse::_internal_has_subscription() const {
  return payload_case() == kSubscription;
}
inline void OrderStateStreamResponse::set_has_subscription() {
  _impl_._oneof_case_[0] = kSubscription;
}
inline void OrderStateStreamResponse::clear_subscription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kSubscription) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.subscription_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscription_);
    }
    clear_has_payload();
  }
}
inline ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* OrderStateStreamResponse::release_subscription() {
  // @@protoc_insertion_point(field_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.subscription)
  if (payload_case() == kSubscription) {
    clear_has_payload();
    auto* temp = _impl_.payload_.subscription_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.subscription_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse& OrderStateStreamResponse::_internal_subscription() const {
  return payload_case() == kSubscription ? *_impl_.payload_.subscription_ : reinterpret_cast<::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse&>(::tinkoff::public_::invest::api::contract::v1::_SubscriptionResponse_default_instance_);
}
inline const ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse& OrderStateStreamResponse::subscription() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.subscription)
  return _internal_subscription();
}
inline ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* OrderStateStreamResponse::unsafe_arena_release_subscription() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.subscription)
  if (payload_case() == kSubscription) {
    clear_has_payload();
    auto* temp = _impl_.payload_.subscription_;
    _impl_.payload_.subscription_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OrderStateStreamResponse::unsafe_arena_set_allocated_subscription(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_subscription();
    _impl_.payload_.subscription_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.subscription)
}
inline ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* OrderStateStreamResponse::_internal_mutable_subscription() {
  if (payload_case() != kSubscription) {
    clear_payload();
    set_has_subscription();
    _impl_.payload_.subscription_ =
        ::google::protobuf::Message::DefaultConstruct<::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse>(GetArena());
  }
  return _impl_.payload_.subscription_;
}
inline ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* OrderStateStreamResponse::mutable_subscription() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* _msg = _internal_mutable_subscription();
  // @@protoc_insertion_point(field_mutable:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.subscription)
  return _msg;
}

inline bool OrderStateStreamResponse::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void OrderStateStreamResponse::clear_has_payload() {
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline OrderStateStreamResponse::PayloadCase OrderStateStreamResponse::payload_case() const {
  return OrderStateStreamResponse::PayloadCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType>() {
  return ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType_descriptor();
}
template <>
struct is_proto_enum<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo>() {
  return ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo_descriptor();
}
template <>
struct is_proto_enum<::tinkoff::public_::invest::api::contract::v1::OrderDirection> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tinkoff::public_::invest::api::contract::v1::OrderDirection>() {
  return ::tinkoff::public_::invest::api::contract::v1::OrderDirection_descriptor();
}
template <>
struct is_proto_enum<::tinkoff::public_::invest::api::contract::v1::OrderType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tinkoff::public_::invest::api::contract::v1::OrderType>() {
  return ::tinkoff::public_::invest::api::contract::v1::OrderType_descriptor();
}
template <>
struct is_proto_enum<::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus>() {
  return ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus_descriptor();
}
template <>
struct is_proto_enum<::tinkoff::public_::invest::api::contract::v1::TimeInForceType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tinkoff::public_::invest::api::contract::v1::TimeInForceType>() {
  return ::tinkoff::public_::invest::api::contract::v1::TimeInForceType_descriptor();
}
template <>
struct is_proto_enum<::tinkoff::public_::invest::api::contract::v1::OrderIdType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::tinkoff::public_::invest::api::contract::v1::OrderIdType>() {
  return ::tinkoff::public_::invest::api::contract::v1::OrderIdType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // orders_2eproto_2epb_2eh
