// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: signals.proto
// Protobuf C++ Version: 5.29.3

#include "signals.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tinkoff {
namespace pub {
namespace invest {
namespace api {
namespace contract {
namespace v1 {

inline constexpr GetStrategiesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        strategy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetStrategiesRequest::GetStrategiesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetStrategiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStrategiesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStrategiesRequestDefaultTypeInternal() {}
  union {
    GetStrategiesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStrategiesRequestDefaultTypeInternal _GetStrategiesRequest_default_instance_;

inline constexpr Strategy::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        strategy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        strategy_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        strategy_description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        strategy_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        average_signal_yield_{nullptr},
        average_signal_yield_year_{nullptr},
        yield_{nullptr},
        yield_year_{nullptr},
        strategy_type_{static_cast< ::tinkoff::pub::invest::api::contract::v1::StrategyType >(0)},
        active_signals_{0},
        time_in_position_{::int64_t{0}},
        total_signals_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Strategy::Strategy(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StrategyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrategyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrategyDefaultTypeInternal() {}
  union {
    Strategy _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrategyDefaultTypeInternal _Strategy_default_instance_;

inline constexpr Signal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        signal_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        strategy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        strategy_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        create_dt_{nullptr},
        initial_price_{nullptr},
        target_price_{nullptr},
        end_dt_{nullptr},
        stoploss_{nullptr},
        close_price_{nullptr},
        close_dt_{nullptr},
        direction_{static_cast< ::tinkoff::pub::invest::api::contract::v1::SignalDirection >(0)},
        probability_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Signal::Signal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SignalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignalDefaultTypeInternal() {}
  union {
    Signal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignalDefaultTypeInternal _Signal_default_instance_;

inline constexpr GetSignalsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        signal_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        strategy_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr},
        paging_{nullptr},
        strategy_type_{static_cast< ::tinkoff::pub::invest::api::contract::v1::StrategyType >(0)},
        direction_{static_cast< ::tinkoff::pub::invest::api::contract::v1::SignalDirection >(0)},
        active_{static_cast< ::tinkoff::pub::invest::api::contract::v1::SignalState >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetSignalsRequest::GetSignalsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSignalsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSignalsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSignalsRequestDefaultTypeInternal() {}
  union {
    GetSignalsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSignalsRequestDefaultTypeInternal _GetSignalsRequest_default_instance_;

inline constexpr GetStrategiesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : strategies_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetStrategiesResponse::GetStrategiesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetStrategiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStrategiesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStrategiesResponseDefaultTypeInternal() {}
  union {
    GetStrategiesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStrategiesResponseDefaultTypeInternal _GetStrategiesResponse_default_instance_;

inline constexpr GetSignalsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        signals_{},
        paging_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetSignalsResponse::GetSignalsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSignalsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSignalsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSignalsResponseDefaultTypeInternal() {}
  union {
    GetSignalsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSignalsResponseDefaultTypeInternal _GetSignalsResponse_default_instance_;
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace pub
}  // namespace tinkoff
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_signals_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_signals_2eproto = nullptr;
const ::uint32_t
    TableStruct_signals_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetStrategiesRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetStrategiesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetStrategiesRequest, _impl_.strategy_id_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetStrategiesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetStrategiesResponse, _impl_.strategies_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.strategy_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.strategy_name_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.strategy_description_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.strategy_url_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.strategy_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.active_signals_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.total_signals_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.time_in_position_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.average_signal_yield_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.average_signal_yield_year_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.yield_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Strategy, _impl_.yield_year_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        3,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest, _impl_.signal_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest, _impl_.strategy_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest, _impl_.strategy_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest, _impl_.from_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest, _impl_.to_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest, _impl_.active_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest, _impl_.paging_),
        0,
        1,
        6,
        2,
        3,
        4,
        7,
        8,
        5,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsResponse, _impl_.signals_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::GetSignalsResponse, _impl_.paging_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.signal_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.strategy_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.strategy_name_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.create_dt_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.initial_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.target_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.end_dt_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.probability_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.stoploss_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.close_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::pub::invest::api::contract::v1::Signal, _impl_.close_dt_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,
        2,
        0,
        ~0u,
        3,
        4,
        8,
        5,
        6,
        7,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetStrategiesRequest)},
        {10, -1, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetStrategiesResponse)},
        {19, 39, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::Strategy)},
        {51, 68, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest)},
        {77, 87, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::GetSignalsResponse)},
        {89, 112, -1, sizeof(::tinkoff::pub::invest::api::contract::v1::Signal)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tinkoff::pub::invest::api::contract::v1::_GetStrategiesRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GetStrategiesResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_Strategy_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GetSignalsRequest_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_GetSignalsResponse_default_instance_._instance,
    &::tinkoff::pub::invest::api::contract::v1::_Signal_default_instance_._instance,
};
const char descriptor_table_protodef_signals_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rsignals.proto\022\"tinkoff.pub.invest.api."
    "contract.v1\032\037google/protobuf/timestamp.p"
    "roto\032\037google/api/field_behavior.proto\032\014c"
    "ommon.proto\"@\n\024GetStrategiesRequest\022\030\n\013s"
    "trategy_id\030\001 \001(\tH\000\210\001\001B\016\n\014_strategy_id\"Y\n"
    "\025GetStrategiesResponse\022@\n\nstrategies\030\001 \003"
    "(\0132,.tinkoff.pub.invest.api.contract.v1."
    "Strategy\"\214\005\n\010Strategy\022\031\n\013strategy_id\030\001 \001"
    "(\tB\004\342A\001\002\022\033\n\rstrategy_name\030\002 \001(\tB\004\342A\001\002\022!\n"
    "\024strategy_description\030\003 \001(\tH\000\210\001\001\022\031\n\014stra"
    "tegy_url\030\004 \001(\tH\001\210\001\001\022M\n\rstrategy_type\030\005 \001"
    "(\01620.tinkoff.pub.invest.api.contract.v1."
    "StrategyTypeB\004\342A\001\002\022\034\n\016active_signals\030\006 \001"
    "(\005B\004\342A\001\002\022\033\n\rtotal_signals\030\007 \001(\005B\004\342A\001\002\022\036\n"
    "\020time_in_position\030\010 \001(\003B\004\342A\001\002\022Q\n\024average"
    "_signal_yield\030\t \001(\0132-.tinkoff.pub.invest"
    ".api.contract.v1.QuotationB\004\342A\001\002\022V\n\031aver"
    "age_signal_yield_year\030\n \001(\0132-.tinkoff.pu"
    "b.invest.api.contract.v1.QuotationB\004\342A\001\002"
    "\022B\n\005yield\030\013 \001(\0132-.tinkoff.pub.invest.api"
    ".contract.v1.QuotationB\004\342A\001\002\022G\n\nyield_ye"
    "ar\030\014 \001(\0132-.tinkoff.pub.invest.api.contra"
    "ct.v1.QuotationB\004\342A\001\002B\027\n\025_strategy_descr"
    "iptionB\017\n\r_strategy_url\"\325\004\n\021GetSignalsRe"
    "quest\022\026\n\tsignal_id\030\001 \001(\tH\000\210\001\001\022\030\n\013strateg"
    "y_id\030\002 \001(\tH\001\210\001\001\022L\n\rstrategy_type\030\003 \001(\01620"
    ".tinkoff.pub.invest.api.contract.v1.Stra"
    "tegyTypeH\002\210\001\001\022\033\n\016instrument_uid\030\004 \001(\tH\003\210"
    "\001\001\022-\n\004from\030\005 \001(\0132\032.google.protobuf.Times"
    "tampH\004\210\001\001\022+\n\002to\030\006 \001(\0132\032.google.protobuf."
    "TimestampH\005\210\001\001\022K\n\tdirection\030\007 \001(\01623.tink"
    "off.pub.invest.api.contract.v1.SignalDir"
    "ectionH\006\210\001\001\022D\n\006active\030\010 \001(\0162/.tinkoff.pu"
    "b.invest.api.contract.v1.SignalStateH\007\210\001"
    "\001\022=\n\006paging\030\t \001(\0132(.tinkoff.pub.invest.a"
    "pi.contract.v1.PageH\010\210\001\001B\014\n\n_signal_idB\016"
    "\n\014_strategy_idB\020\n\016_strategy_typeB\021\n\017_ins"
    "trument_uidB\007\n\005_fromB\005\n\003_toB\014\n\n_directio"
    "nB\t\n\007_activeB\t\n\007_paging\"\223\001\n\022GetSignalsRe"
    "sponse\022;\n\007signals\030\001 \003(\0132*.tinkoff.pub.in"
    "vest.api.contract.v1.Signal\022@\n\006paging\030\002 "
    "\001(\01320.tinkoff.pub.invest.api.contract.v1"
    ".PageResponse\"\211\006\n\006Signal\022\027\n\tsignal_id\030\001 "
    "\001(\tB\004\342A\001\002\022\031\n\013strategy_id\030\002 \001(\tB\004\342A\001\002\022\033\n\r"
    "strategy_name\030\003 \001(\tB\004\342A\001\002\022\034\n\016instrument_"
    "uid\030\004 \001(\tB\004\342A\001\002\0223\n\tcreate_dt\030\005 \001(\0132\032.goo"
    "gle.protobuf.TimestampB\004\342A\001\002\022L\n\tdirectio"
    "n\030\006 \001(\01623.tinkoff.pub.invest.api.contrac"
    "t.v1.SignalDirectionB\004\342A\001\002\022J\n\rinitial_pr"
    "ice\030\007 \001(\0132-.tinkoff.pub.invest.api.contr"
    "act.v1.QuotationB\004\342A\001\002\022\021\n\004info\030\010 \001(\tH\000\210\001"
    "\001\022\022\n\004name\030\t \001(\tB\004\342A\001\002\022I\n\014target_price\030\n "
    "\001(\0132-.tinkoff.pub.invest.api.contract.v1"
    ".QuotationB\004\342A\001\002\0220\n\006end_dt\030\013 \001(\0132\032.googl"
    "e.protobuf.TimestampB\004\342A\001\002\022\030\n\013probabilit"
    "y\030\014 \001(\005H\001\210\001\001\022D\n\010stoploss\030\r \001(\0132-.tinkoff"
    ".pub.invest.api.contract.v1.QuotationH\002\210"
    "\001\001\022G\n\013close_price\030\016 \001(\0132-.tinkoff.pub.in"
    "vest.api.contract.v1.QuotationH\003\210\001\001\0221\n\010c"
    "lose_dt\030\017 \001(\0132\032.google.protobuf.Timestam"
    "pH\004\210\001\001B\007\n\005_infoB\016\n\014_probabilityB\013\n\t_stop"
    "lossB\016\n\014_close_priceB\013\n\t_close_dt*i\n\014Str"
    "ategyType\022\035\n\031STRATEGY_TYPE_UNSPECIFIED\020\000"
    "\022\033\n\027STRATEGY_TYPE_TECHNICAL\020\001\022\035\n\031STRATEG"
    "Y_TYPE_FUNDAMENTAL\020\002*h\n\017SignalDirection\022"
    " \n\034SIGNAL_DIRECTION_UNSPECIFIED\020\000\022\030\n\024SIG"
    "NAL_DIRECTION_BUY\020\001\022\031\n\025SIGNAL_DIRECTION_"
    "SELL\020\002*s\n\013SignalState\022\034\n\030SIGNAL_STATE_UN"
    "SPECIFIED\020\000\022\027\n\023SIGNAL_STATE_ACTIVE\020\001\022\027\n\023"
    "SIGNAL_STATE_CLOSED\020\002\022\024\n\020SIGNAL_STATE_AL"
    "L\020\0032\223\002\n\rSignalService\022\204\001\n\rGetStrategies\022"
    "8.tinkoff.pub.invest.api.contract.v1.Get"
    "StrategiesRequest\0329.tinkoff.pub.invest.a"
    "pi.contract.v1.GetStrategiesResponse\022{\n\n"
    "GetSignals\0225.tinkoff.pub.invest.api.cont"
    "ract.v1.GetSignalsRequest\0326.tinkoff.pub."
    "invest.api.contract.v1.GetSignalsRespons"
    "eBa\n\034ru.tinkoff.piapi.contract.v1P\001Z\014./;"
    "investapi\242\002\005TIAPI\252\002\024Tinkoff.InvestApi.V1"
    "\312\002\021Tinkoff\\Invest\\V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_signals_2eproto_deps[3] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_signals_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_signals_2eproto = {
    false,
    false,
    3188,
    descriptor_table_protodef_signals_2eproto,
    "signals.proto",
    &descriptor_table_signals_2eproto_once,
    descriptor_table_signals_2eproto_deps,
    3,
    6,
    schemas,
    file_default_instances,
    TableStruct_signals_2eproto::offsets,
    file_level_enum_descriptors_signals_2eproto,
    file_level_service_descriptors_signals_2eproto,
};
namespace tinkoff {
namespace pub {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
const ::google::protobuf::EnumDescriptor* StrategyType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_signals_2eproto);
  return file_level_enum_descriptors_signals_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t StrategyType_internal_data_[] = {
    196608u, 0u, };
bool StrategyType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* SignalDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_signals_2eproto);
  return file_level_enum_descriptors_signals_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t SignalDirection_internal_data_[] = {
    196608u, 0u, };
bool SignalDirection_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* SignalState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_signals_2eproto);
  return file_level_enum_descriptors_signals_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t SignalState_internal_data_[] = {
    262144u, 0u, };
bool SignalState_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class GetStrategiesRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetStrategiesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetStrategiesRequest, _impl_._has_bits_);
};

GetStrategiesRequest::GetStrategiesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetStrategiesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetStrategiesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetStrategiesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        strategy_id_(arena, from.strategy_id_) {}

GetStrategiesRequest::GetStrategiesRequest(
    ::google::protobuf::Arena* arena,
    const GetStrategiesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetStrategiesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetStrategiesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetStrategiesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        strategy_id_(arena) {}

inline void GetStrategiesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetStrategiesRequest::~GetStrategiesRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetStrategiesRequest)
  SharedDtor(*this);
}
inline void GetStrategiesRequest::SharedDtor(MessageLite& self) {
  GetStrategiesRequest& this_ = static_cast<GetStrategiesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.strategy_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetStrategiesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetStrategiesRequest(arena);
}
constexpr auto GetStrategiesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetStrategiesRequest),
                                            alignof(GetStrategiesRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetStrategiesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetStrategiesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetStrategiesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetStrategiesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetStrategiesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetStrategiesRequest>(), &GetStrategiesRequest::ByteSizeLong,
            &GetStrategiesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetStrategiesRequest, _impl_._cached_size_),
        false,
    },
    &GetStrategiesRequest::kDescriptorMethods,
    &descriptor_table_signals_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetStrategiesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 75, 2> GetStrategiesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetStrategiesRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetStrategiesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string strategy_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetStrategiesRequest, _impl_.strategy_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string strategy_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetStrategiesRequest, _impl_.strategy_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\13\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.GetStrategiesRequest"
    "strategy_id"
  }},
};

PROTOBUF_NOINLINE void GetStrategiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetStrategiesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.strategy_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetStrategiesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetStrategiesRequest& this_ = static_cast<const GetStrategiesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetStrategiesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetStrategiesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetStrategiesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string strategy_id = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_strategy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GetStrategiesRequest.strategy_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetStrategiesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetStrategiesRequest::ByteSizeLong(const MessageLite& base) {
          const GetStrategiesRequest& this_ = static_cast<const GetStrategiesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetStrategiesRequest::ByteSizeLong() const {
          const GetStrategiesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetStrategiesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // optional string strategy_id = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_strategy_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetStrategiesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetStrategiesRequest*>(&to_msg);
  auto& from = static_cast<const GetStrategiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetStrategiesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_strategy_id(from._internal_strategy_id());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetStrategiesRequest::CopyFrom(const GetStrategiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetStrategiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetStrategiesRequest::InternalSwap(GetStrategiesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strategy_id_, &other->_impl_.strategy_id_, arena);
}

::google::protobuf::Metadata GetStrategiesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetStrategiesResponse::_Internal {
 public:
};

GetStrategiesResponse::GetStrategiesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetStrategiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetStrategiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetStrategiesResponse& from_msg)
      : strategies_{visibility, arena, from.strategies_},
        _cached_size_{0} {}

GetStrategiesResponse::GetStrategiesResponse(
    ::google::protobuf::Arena* arena,
    const GetStrategiesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetStrategiesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetStrategiesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetStrategiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : strategies_{visibility, arena},
        _cached_size_{0} {}

inline void GetStrategiesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetStrategiesResponse::~GetStrategiesResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetStrategiesResponse)
  SharedDtor(*this);
}
inline void GetStrategiesResponse::SharedDtor(MessageLite& self) {
  GetStrategiesResponse& this_ = static_cast<GetStrategiesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetStrategiesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetStrategiesResponse(arena);
}
constexpr auto GetStrategiesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetStrategiesResponse, _impl_.strategies_) +
          decltype(GetStrategiesResponse::_impl_.strategies_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetStrategiesResponse), alignof(GetStrategiesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetStrategiesResponse::PlacementNew_,
                                 sizeof(GetStrategiesResponse),
                                 alignof(GetStrategiesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetStrategiesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetStrategiesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetStrategiesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetStrategiesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetStrategiesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetStrategiesResponse>(), &GetStrategiesResponse::ByteSizeLong,
            &GetStrategiesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetStrategiesResponse, _impl_._cached_size_),
        false,
    },
    &GetStrategiesResponse::kDescriptorMethods,
    &descriptor_table_signals_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetStrategiesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetStrategiesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetStrategiesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.Strategy strategies = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetStrategiesResponse, _impl_.strategies_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.Strategy strategies = 1;
    {PROTOBUF_FIELD_OFFSET(GetStrategiesResponse, _impl_.strategies_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Strategy>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetStrategiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetStrategiesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.strategies_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetStrategiesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetStrategiesResponse& this_ = static_cast<const GetStrategiesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetStrategiesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetStrategiesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetStrategiesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.pub.invest.api.contract.v1.Strategy strategies = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_strategies_size());
               i < n; i++) {
            const auto& repfield = this_._internal_strategies().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetStrategiesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetStrategiesResponse::ByteSizeLong(const MessageLite& base) {
          const GetStrategiesResponse& this_ = static_cast<const GetStrategiesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetStrategiesResponse::ByteSizeLong() const {
          const GetStrategiesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetStrategiesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.Strategy strategies = 1;
            {
              total_size += 1UL * this_._internal_strategies_size();
              for (const auto& msg : this_._internal_strategies()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetStrategiesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetStrategiesResponse*>(&to_msg);
  auto& from = static_cast<const GetStrategiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetStrategiesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_strategies()->MergeFrom(
      from._internal_strategies());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetStrategiesResponse::CopyFrom(const GetStrategiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetStrategiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetStrategiesResponse::InternalSwap(GetStrategiesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.strategies_.InternalSwap(&other->_impl_.strategies_);
}

::google::protobuf::Metadata GetStrategiesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Strategy::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Strategy>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Strategy, _impl_._has_bits_);
};

void Strategy::clear_average_signal_yield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.average_signal_yield_ != nullptr) _impl_.average_signal_yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Strategy::clear_average_signal_yield_year() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.average_signal_yield_year_ != nullptr) _impl_.average_signal_yield_year_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Strategy::clear_yield() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.yield_ != nullptr) _impl_.yield_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void Strategy::clear_yield_year() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.yield_year_ != nullptr) _impl_.yield_year_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
Strategy::Strategy(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.Strategy)
}
inline PROTOBUF_NDEBUG_INLINE Strategy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::Strategy& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        strategy_id_(arena, from.strategy_id_),
        strategy_name_(arena, from.strategy_name_),
        strategy_description_(arena, from.strategy_description_),
        strategy_url_(arena, from.strategy_url_) {}

Strategy::Strategy(
    ::google::protobuf::Arena* arena,
    const Strategy& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Strategy* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.average_signal_yield_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.average_signal_yield_)
                        : nullptr;
  _impl_.average_signal_yield_year_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.average_signal_yield_year_)
                        : nullptr;
  _impl_.yield_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.yield_)
                        : nullptr;
  _impl_.yield_year_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.yield_year_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, strategy_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, strategy_type_),
           offsetof(Impl_, total_signals_) -
               offsetof(Impl_, strategy_type_) +
               sizeof(Impl_::total_signals_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.Strategy)
}
inline PROTOBUF_NDEBUG_INLINE Strategy::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        strategy_id_(arena),
        strategy_name_(arena),
        strategy_description_(arena),
        strategy_url_(arena) {}

inline void Strategy::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, average_signal_yield_),
           0,
           offsetof(Impl_, total_signals_) -
               offsetof(Impl_, average_signal_yield_) +
               sizeof(Impl_::total_signals_));
}
Strategy::~Strategy() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.Strategy)
  SharedDtor(*this);
}
inline void Strategy::SharedDtor(MessageLite& self) {
  Strategy& this_ = static_cast<Strategy&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.strategy_id_.Destroy();
  this_._impl_.strategy_name_.Destroy();
  this_._impl_.strategy_description_.Destroy();
  this_._impl_.strategy_url_.Destroy();
  delete this_._impl_.average_signal_yield_;
  delete this_._impl_.average_signal_yield_year_;
  delete this_._impl_.yield_;
  delete this_._impl_.yield_year_;
  this_._impl_.~Impl_();
}

inline void* Strategy::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Strategy(arena);
}
constexpr auto Strategy::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Strategy),
                                            alignof(Strategy));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Strategy::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Strategy_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Strategy::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Strategy>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Strategy::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Strategy>(), &Strategy::ByteSizeLong,
            &Strategy::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Strategy, _impl_._cached_size_),
        false,
    },
    &Strategy::kDescriptorMethods,
    &descriptor_table_signals_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Strategy::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 4, 116, 2> Strategy::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Strategy, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Strategy>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string strategy_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.strategy_id_)}},
    // string strategy_name = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.strategy_name_)}},
    // optional string strategy_description = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.strategy_description_)}},
    // optional string strategy_url = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.strategy_url_)}},
    // .tinkoff.pub.invest.api.contract.v1.StrategyType strategy_type = 5 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Strategy, _impl_.strategy_type_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.strategy_type_)}},
    // int32 active_signals = 6 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Strategy, _impl_.active_signals_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.active_signals_)}},
    // int32 total_signals = 7 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Strategy, _impl_.total_signals_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.total_signals_)}},
    // int64 time_in_position = 8 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Strategy, _impl_.time_in_position_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.time_in_position_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation average_signal_yield = 9 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {74, 2, 0, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.average_signal_yield_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation average_signal_yield_year = 10 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {82, 3, 1, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.average_signal_yield_year_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation yield = 11 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {90, 4, 2, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.yield_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation yield_year = 12 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {98, 5, 3, PROTOBUF_FIELD_OFFSET(Strategy, _impl_.yield_year_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string strategy_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.strategy_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string strategy_name = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.strategy_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string strategy_description = 3;
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.strategy_description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string strategy_url = 4;
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.strategy_url_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.StrategyType strategy_type = 5 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.strategy_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 active_signals = 6 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.active_signals_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_signals = 7 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.total_signals_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 time_in_position = 8 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.time_in_position_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation average_signal_yield = 9 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.average_signal_yield_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation average_signal_yield_year = 10 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.average_signal_yield_year_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation yield = 11 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.yield_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation yield_year = 12 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Strategy, _impl_.yield_year_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\53\13\15\24\14\0\0\0\0\0\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.Strategy"
    "strategy_id"
    "strategy_name"
    "strategy_description"
    "strategy_url"
  }},
};

PROTOBUF_NOINLINE void Strategy::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.Strategy)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.strategy_id_.ClearToEmpty();
  _impl_.strategy_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.strategy_description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.strategy_url_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.average_signal_yield_ != nullptr);
      _impl_.average_signal_yield_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.average_signal_yield_year_ != nullptr);
      _impl_.average_signal_yield_year_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.yield_ != nullptr);
      _impl_.yield_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.yield_year_ != nullptr);
      _impl_.yield_year_->Clear();
    }
  }
  ::memset(&_impl_.strategy_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_signals_) -
      reinterpret_cast<char*>(&_impl_.strategy_type_)) + sizeof(_impl_.total_signals_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Strategy::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Strategy& this_ = static_cast<const Strategy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Strategy::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Strategy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.Strategy)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string strategy_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_strategy_id().empty()) {
            const std::string& _s = this_._internal_strategy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Strategy.strategy_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string strategy_name = 2 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_strategy_name().empty()) {
            const std::string& _s = this_._internal_strategy_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Strategy.strategy_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string strategy_description = 3;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_strategy_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Strategy.strategy_description");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // optional string strategy_url = 4;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_strategy_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Strategy.strategy_url");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.StrategyType strategy_type = 5 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_strategy_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_strategy_type(), target);
          }

          // int32 active_signals = 6 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_active_signals() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_active_signals(), target);
          }

          // int32 total_signals = 7 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_total_signals() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_total_signals(), target);
          }

          // int64 time_in_position = 8 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_time_in_position() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_time_in_position(), target);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation average_signal_yield = 9 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.average_signal_yield_, this_._impl_.average_signal_yield_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation average_signal_yield_year = 10 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.average_signal_yield_year_, this_._impl_.average_signal_yield_year_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation yield = 11 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.yield_, this_._impl_.yield_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation yield_year = 12 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.yield_year_, this_._impl_.yield_year_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.Strategy)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Strategy::ByteSizeLong(const MessageLite& base) {
          const Strategy& this_ = static_cast<const Strategy&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Strategy::ByteSizeLong() const {
          const Strategy& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.Strategy)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string strategy_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_strategy_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_strategy_id());
            }
            // string strategy_name = 2 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_strategy_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_strategy_name());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // optional string strategy_description = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_strategy_description());
            }
            // optional string strategy_url = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_strategy_url());
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation average_signal_yield = 9 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.average_signal_yield_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation average_signal_yield_year = 10 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.average_signal_yield_year_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation yield = 11 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.yield_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation yield_year = 12 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.yield_year_);
            }
          }
           {
            // .tinkoff.pub.invest.api.contract.v1.StrategyType strategy_type = 5 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_strategy_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_strategy_type());
            }
            // int32 active_signals = 6 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_active_signals() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_active_signals());
            }
            // int64 time_in_position = 8 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_time_in_position() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_time_in_position());
            }
            // int32 total_signals = 7 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_total_signals() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_signals());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Strategy::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Strategy*>(&to_msg);
  auto& from = static_cast<const Strategy&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.Strategy)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strategy_id().empty()) {
    _this->_internal_set_strategy_id(from._internal_strategy_id());
  }
  if (!from._internal_strategy_name().empty()) {
    _this->_internal_set_strategy_name(from._internal_strategy_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_strategy_description(from._internal_strategy_description());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_strategy_url(from._internal_strategy_url());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.average_signal_yield_ != nullptr);
      if (_this->_impl_.average_signal_yield_ == nullptr) {
        _this->_impl_.average_signal_yield_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.average_signal_yield_);
      } else {
        _this->_impl_.average_signal_yield_->MergeFrom(*from._impl_.average_signal_yield_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.average_signal_yield_year_ != nullptr);
      if (_this->_impl_.average_signal_yield_year_ == nullptr) {
        _this->_impl_.average_signal_yield_year_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.average_signal_yield_year_);
      } else {
        _this->_impl_.average_signal_yield_year_->MergeFrom(*from._impl_.average_signal_yield_year_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.yield_ != nullptr);
      if (_this->_impl_.yield_ == nullptr) {
        _this->_impl_.yield_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.yield_);
      } else {
        _this->_impl_.yield_->MergeFrom(*from._impl_.yield_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.yield_year_ != nullptr);
      if (_this->_impl_.yield_year_ == nullptr) {
        _this->_impl_.yield_year_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.yield_year_);
      } else {
        _this->_impl_.yield_year_->MergeFrom(*from._impl_.yield_year_);
      }
    }
  }
  if (from._internal_strategy_type() != 0) {
    _this->_impl_.strategy_type_ = from._impl_.strategy_type_;
  }
  if (from._internal_active_signals() != 0) {
    _this->_impl_.active_signals_ = from._impl_.active_signals_;
  }
  if (from._internal_time_in_position() != 0) {
    _this->_impl_.time_in_position_ = from._impl_.time_in_position_;
  }
  if (from._internal_total_signals() != 0) {
    _this->_impl_.total_signals_ = from._impl_.total_signals_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Strategy::CopyFrom(const Strategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.Strategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Strategy::InternalSwap(Strategy* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strategy_id_, &other->_impl_.strategy_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strategy_name_, &other->_impl_.strategy_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strategy_description_, &other->_impl_.strategy_description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strategy_url_, &other->_impl_.strategy_url_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Strategy, _impl_.total_signals_)
      + sizeof(Strategy::_impl_.total_signals_)
      - PROTOBUF_FIELD_OFFSET(Strategy, _impl_.average_signal_yield_)>(
          reinterpret_cast<char*>(&_impl_.average_signal_yield_),
          reinterpret_cast<char*>(&other->_impl_.average_signal_yield_));
}

::google::protobuf::Metadata Strategy::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSignalsRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetSignalsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_._has_bits_);
};

void GetSignalsRequest::clear_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void GetSignalsRequest::clear_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void GetSignalsRequest::clear_paging() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.paging_ != nullptr) _impl_.paging_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
GetSignalsRequest::GetSignalsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetSignalsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetSignalsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        signal_id_(arena, from.signal_id_),
        strategy_id_(arena, from.strategy_id_),
        instrument_uid_(arena, from.instrument_uid_) {}

GetSignalsRequest::GetSignalsRequest(
    ::google::protobuf::Arena* arena,
    const GetSignalsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSignalsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.from_)
                        : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.to_)
                        : nullptr;
  _impl_.paging_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Page>(
                              arena, *from._impl_.paging_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, strategy_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, strategy_type_),
           offsetof(Impl_, active_) -
               offsetof(Impl_, strategy_type_) +
               sizeof(Impl_::active_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetSignalsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetSignalsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        signal_id_(arena),
        strategy_id_(arena),
        instrument_uid_(arena) {}

inline void GetSignalsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, active_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::active_));
}
GetSignalsRequest::~GetSignalsRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetSignalsRequest)
  SharedDtor(*this);
}
inline void GetSignalsRequest::SharedDtor(MessageLite& self) {
  GetSignalsRequest& this_ = static_cast<GetSignalsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.signal_id_.Destroy();
  this_._impl_.strategy_id_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.from_;
  delete this_._impl_.to_;
  delete this_._impl_.paging_;
  this_._impl_.~Impl_();
}

inline void* GetSignalsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetSignalsRequest(arena);
}
constexpr auto GetSignalsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetSignalsRequest),
                                            alignof(GetSignalsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetSignalsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetSignalsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetSignalsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetSignalsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetSignalsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetSignalsRequest>(), &GetSignalsRequest::ByteSizeLong,
            &GetSignalsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_._cached_size_),
        false,
    },
    &GetSignalsRequest::kDescriptorMethods,
    &descriptor_table_signals_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetSignalsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 3, 103, 2> GetSignalsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetSignalsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string signal_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.signal_id_)}},
    // optional string strategy_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.strategy_id_)}},
    // optional .tinkoff.pub.invest.api.contract.v1.StrategyType strategy_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetSignalsRequest, _impl_.strategy_type_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.strategy_type_)}},
    // optional string instrument_uid = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.instrument_uid_)}},
    // optional .google.protobuf.Timestamp from = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.from_)}},
    // optional .google.protobuf.Timestamp to = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 1, PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.to_)}},
    // optional .tinkoff.pub.invest.api.contract.v1.SignalDirection direction = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetSignalsRequest, _impl_.direction_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.direction_)}},
    // optional .tinkoff.pub.invest.api.contract.v1.SignalState active = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetSignalsRequest, _impl_.active_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.active_)}},
    // optional .tinkoff.pub.invest.api.contract.v1.Page paging = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 5, 2, PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.paging_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string signal_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.signal_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string strategy_id = 2;
    {PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.strategy_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .tinkoff.pub.invest.api.contract.v1.StrategyType strategy_type = 3;
    {PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.strategy_type_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional string instrument_uid = 4;
    {PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.instrument_uid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .google.protobuf.Timestamp from = 5;
    {PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.from_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .google.protobuf.Timestamp to = 6;
    {PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.to_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tinkoff.pub.invest.api.contract.v1.SignalDirection direction = 7;
    {PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.direction_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional .tinkoff.pub.invest.api.contract.v1.SignalState active = 8;
    {PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.active_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional .tinkoff.pub.invest.api.contract.v1.Page paging = 9;
    {PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.paging_), _Internal::kHasBitsOffset + 5, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Page>()},
  }}, {{
    "\64\11\13\0\16\0\0\0\0\0\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.GetSignalsRequest"
    "signal_id"
    "strategy_id"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void GetSignalsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetSignalsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.signal_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.strategy_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.instrument_uid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.paging_ != nullptr);
      _impl_.paging_->Clear();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&_impl_.strategy_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.direction_) -
        reinterpret_cast<char*>(&_impl_.strategy_type_)) + sizeof(_impl_.direction_));
  }
  _impl_.active_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetSignalsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetSignalsRequest& this_ = static_cast<const GetSignalsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetSignalsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetSignalsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetSignalsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string signal_id = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_signal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GetSignalsRequest.signal_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional string strategy_id = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_strategy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GetSignalsRequest.strategy_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // optional .tinkoff.pub.invest.api.contract.v1.StrategyType strategy_type = 3;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_strategy_type(), target);
          }

          // optional string instrument_uid = 4;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.GetSignalsRequest.instrument_uid");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // optional .google.protobuf.Timestamp from = 5;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.from_, this_._impl_.from_->GetCachedSize(), target,
                stream);
          }

          // optional .google.protobuf.Timestamp to = 6;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.to_, this_._impl_.to_->GetCachedSize(), target,
                stream);
          }

          // optional .tinkoff.pub.invest.api.contract.v1.SignalDirection direction = 7;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_direction(), target);
          }

          // optional .tinkoff.pub.invest.api.contract.v1.SignalState active = 8;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this_._internal_active(), target);
          }

          // optional .tinkoff.pub.invest.api.contract.v1.Page paging = 9;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.paging_, this_._impl_.paging_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetSignalsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetSignalsRequest::ByteSizeLong(const MessageLite& base) {
          const GetSignalsRequest& this_ = static_cast<const GetSignalsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetSignalsRequest::ByteSizeLong() const {
          const GetSignalsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetSignalsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional string signal_id = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_signal_id());
            }
            // optional string strategy_id = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_strategy_id());
            }
            // optional string instrument_uid = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // optional .google.protobuf.Timestamp from = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_);
            }
            // optional .google.protobuf.Timestamp to = 6;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_);
            }
            // optional .tinkoff.pub.invest.api.contract.v1.Page paging = 9;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.paging_);
            }
            // optional .tinkoff.pub.invest.api.contract.v1.StrategyType strategy_type = 3;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_strategy_type());
            }
            // optional .tinkoff.pub.invest.api.contract.v1.SignalDirection direction = 7;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
          }
           {
            // optional .tinkoff.pub.invest.api.contract.v1.SignalState active = 8;
            if (cached_has_bits & 0x00000100u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_active());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetSignalsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSignalsRequest*>(&to_msg);
  auto& from = static_cast<const GetSignalsRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetSignalsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_signal_id(from._internal_signal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_strategy_id(from._internal_strategy_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_instrument_uid(from._internal_instrument_uid());
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.from_ != nullptr);
      if (_this->_impl_.from_ == nullptr) {
        _this->_impl_.from_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.from_);
      } else {
        _this->_impl_.from_->MergeFrom(*from._impl_.from_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.to_ != nullptr);
      if (_this->_impl_.to_ == nullptr) {
        _this->_impl_.to_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.to_);
      } else {
        _this->_impl_.to_->MergeFrom(*from._impl_.to_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.paging_ != nullptr);
      if (_this->_impl_.paging_ == nullptr) {
        _this->_impl_.paging_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Page>(arena, *from._impl_.paging_);
      } else {
        _this->_impl_.paging_->MergeFrom(*from._impl_.paging_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.strategy_type_ = from._impl_.strategy_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.direction_ = from._impl_.direction_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.active_ = from._impl_.active_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSignalsRequest::CopyFrom(const GetSignalsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetSignalsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSignalsRequest::InternalSwap(GetSignalsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signal_id_, &other->_impl_.signal_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strategy_id_, &other->_impl_.strategy_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.active_)
      + sizeof(GetSignalsRequest::_impl_.active_)
      - PROTOBUF_FIELD_OFFSET(GetSignalsRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata GetSignalsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSignalsResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetSignalsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSignalsResponse, _impl_._has_bits_);
};

void GetSignalsResponse::clear_paging() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.paging_ != nullptr) _impl_.paging_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetSignalsResponse::GetSignalsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.GetSignalsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetSignalsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::GetSignalsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        signals_{visibility, arena, from.signals_} {}

GetSignalsResponse::GetSignalsResponse(
    ::google::protobuf::Arena* arena,
    const GetSignalsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSignalsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.paging_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PageResponse>(
                              arena, *from._impl_.paging_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.GetSignalsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetSignalsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        signals_{visibility, arena} {}

inline void GetSignalsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.paging_ = {};
}
GetSignalsResponse::~GetSignalsResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.GetSignalsResponse)
  SharedDtor(*this);
}
inline void GetSignalsResponse::SharedDtor(MessageLite& self) {
  GetSignalsResponse& this_ = static_cast<GetSignalsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.paging_;
  this_._impl_.~Impl_();
}

inline void* GetSignalsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetSignalsResponse(arena);
}
constexpr auto GetSignalsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetSignalsResponse, _impl_.signals_) +
          decltype(GetSignalsResponse::_impl_.signals_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetSignalsResponse), alignof(GetSignalsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetSignalsResponse::PlacementNew_,
                                 sizeof(GetSignalsResponse),
                                 alignof(GetSignalsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetSignalsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetSignalsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetSignalsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetSignalsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetSignalsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetSignalsResponse>(), &GetSignalsResponse::ByteSizeLong,
            &GetSignalsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetSignalsResponse, _impl_._cached_size_),
        false,
    },
    &GetSignalsResponse::kDescriptorMethods,
    &descriptor_table_signals_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetSignalsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetSignalsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSignalsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::GetSignalsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.pub.invest.api.contract.v1.PageResponse paging = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(GetSignalsResponse, _impl_.paging_)}},
    // repeated .tinkoff.pub.invest.api.contract.v1.Signal signals = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetSignalsResponse, _impl_.signals_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.pub.invest.api.contract.v1.Signal signals = 1;
    {PROTOBUF_FIELD_OFFSET(GetSignalsResponse, _impl_.signals_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.PageResponse paging = 2;
    {PROTOBUF_FIELD_OFFSET(GetSignalsResponse, _impl_.paging_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Signal>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::PageResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetSignalsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.GetSignalsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signals_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.paging_ != nullptr);
    _impl_.paging_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetSignalsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetSignalsResponse& this_ = static_cast<const GetSignalsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetSignalsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetSignalsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.GetSignalsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.pub.invest.api.contract.v1.Signal signals = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_signals_size());
               i < n; i++) {
            const auto& repfield = this_._internal_signals().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.pub.invest.api.contract.v1.PageResponse paging = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.paging_, this_._impl_.paging_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.GetSignalsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetSignalsResponse::ByteSizeLong(const MessageLite& base) {
          const GetSignalsResponse& this_ = static_cast<const GetSignalsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetSignalsResponse::ByteSizeLong() const {
          const GetSignalsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.GetSignalsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.pub.invest.api.contract.v1.Signal signals = 1;
            {
              total_size += 1UL * this_._internal_signals_size();
              for (const auto& msg : this_._internal_signals()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .tinkoff.pub.invest.api.contract.v1.PageResponse paging = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.paging_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetSignalsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSignalsResponse*>(&to_msg);
  auto& from = static_cast<const GetSignalsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.GetSignalsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_signals()->MergeFrom(
      from._internal_signals());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.paging_ != nullptr);
    if (_this->_impl_.paging_ == nullptr) {
      _this->_impl_.paging_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::PageResponse>(arena, *from._impl_.paging_);
    } else {
      _this->_impl_.paging_->MergeFrom(*from._impl_.paging_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSignalsResponse::CopyFrom(const GetSignalsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.GetSignalsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSignalsResponse::InternalSwap(GetSignalsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.signals_.InternalSwap(&other->_impl_.signals_);
  swap(_impl_.paging_, other->_impl_.paging_);
}

::google::protobuf::Metadata GetSignalsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Signal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Signal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Signal, _impl_._has_bits_);
};

void Signal::clear_create_dt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.create_dt_ != nullptr) _impl_.create_dt_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Signal::clear_initial_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_price_ != nullptr) _impl_.initial_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Signal::clear_target_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.target_price_ != nullptr) _impl_.target_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Signal::clear_end_dt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_dt_ != nullptr) _impl_.end_dt_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void Signal::clear_stoploss() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stoploss_ != nullptr) _impl_.stoploss_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void Signal::clear_close_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.close_price_ != nullptr) _impl_.close_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void Signal::clear_close_dt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.close_dt_ != nullptr) _impl_.close_dt_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
Signal::Signal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.pub.invest.api.contract.v1.Signal)
}
inline PROTOBUF_NDEBUG_INLINE Signal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::pub::invest::api::contract::v1::Signal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        signal_id_(arena, from.signal_id_),
        strategy_id_(arena, from.strategy_id_),
        strategy_name_(arena, from.strategy_name_),
        instrument_uid_(arena, from.instrument_uid_),
        info_(arena, from.info_),
        name_(arena, from.name_) {}

Signal::Signal(
    ::google::protobuf::Arena* arena,
    const Signal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Signal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.create_dt_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.create_dt_)
                        : nullptr;
  _impl_.initial_price_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.initial_price_)
                        : nullptr;
  _impl_.target_price_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.target_price_)
                        : nullptr;
  _impl_.end_dt_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.end_dt_)
                        : nullptr;
  _impl_.stoploss_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.stoploss_)
                        : nullptr;
  _impl_.close_price_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.close_price_)
                        : nullptr;
  _impl_.close_dt_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.close_dt_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, direction_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, direction_),
           offsetof(Impl_, probability_) -
               offsetof(Impl_, direction_) +
               sizeof(Impl_::probability_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.pub.invest.api.contract.v1.Signal)
}
inline PROTOBUF_NDEBUG_INLINE Signal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        signal_id_(arena),
        strategy_id_(arena),
        strategy_name_(arena),
        instrument_uid_(arena),
        info_(arena),
        name_(arena) {}

inline void Signal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, create_dt_),
           0,
           offsetof(Impl_, probability_) -
               offsetof(Impl_, create_dt_) +
               sizeof(Impl_::probability_));
}
Signal::~Signal() {
  // @@protoc_insertion_point(destructor:tinkoff.pub.invest.api.contract.v1.Signal)
  SharedDtor(*this);
}
inline void Signal::SharedDtor(MessageLite& self) {
  Signal& this_ = static_cast<Signal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.signal_id_.Destroy();
  this_._impl_.strategy_id_.Destroy();
  this_._impl_.strategy_name_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.info_.Destroy();
  this_._impl_.name_.Destroy();
  delete this_._impl_.create_dt_;
  delete this_._impl_.initial_price_;
  delete this_._impl_.target_price_;
  delete this_._impl_.end_dt_;
  delete this_._impl_.stoploss_;
  delete this_._impl_.close_price_;
  delete this_._impl_.close_dt_;
  this_._impl_.~Impl_();
}

inline void* Signal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Signal(arena);
}
constexpr auto Signal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Signal),
                                            alignof(Signal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Signal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Signal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Signal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Signal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Signal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Signal>(), &Signal::ByteSizeLong,
            &Signal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Signal, _impl_._cached_size_),
        false,
    },
    &Signal::kDescriptorMethods,
    &descriptor_table_signals_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Signal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 7, 113, 2> Signal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Signal, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934528,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Signal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string signal_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Signal, _impl_.signal_id_)}},
    // string strategy_id = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Signal, _impl_.strategy_id_)}},
    // string strategy_name = 3 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Signal, _impl_.strategy_name_)}},
    // string instrument_uid = 4 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Signal, _impl_.instrument_uid_)}},
    // .google.protobuf.Timestamp create_dt = 5 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(Signal, _impl_.create_dt_)}},
    // .tinkoff.pub.invest.api.contract.v1.SignalDirection direction = 6 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Signal, _impl_.direction_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Signal, _impl_.direction_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation initial_price = 7 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 1, PROTOBUF_FIELD_OFFSET(Signal, _impl_.initial_price_)}},
    // optional string info = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(Signal, _impl_.info_)}},
    // string name = 9 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Signal, _impl_.name_)}},
    // .tinkoff.pub.invest.api.contract.v1.Quotation target_price = 10 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {82, 3, 2, PROTOBUF_FIELD_OFFSET(Signal, _impl_.target_price_)}},
    // .google.protobuf.Timestamp end_dt = 11 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {90, 4, 3, PROTOBUF_FIELD_OFFSET(Signal, _impl_.end_dt_)}},
    // optional int32 probability = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Signal, _impl_.probability_), 8>(),
     {96, 8, 0, PROTOBUF_FIELD_OFFSET(Signal, _impl_.probability_)}},
    // optional .tinkoff.pub.invest.api.contract.v1.Quotation stoploss = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 5, 4, PROTOBUF_FIELD_OFFSET(Signal, _impl_.stoploss_)}},
    // optional .tinkoff.pub.invest.api.contract.v1.Quotation close_price = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 6, 5, PROTOBUF_FIELD_OFFSET(Signal, _impl_.close_price_)}},
    // optional .google.protobuf.Timestamp close_dt = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 7, 6, PROTOBUF_FIELD_OFFSET(Signal, _impl_.close_dt_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string signal_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.signal_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string strategy_id = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.strategy_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string strategy_name = 3 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.strategy_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 4 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp create_dt = 5 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.create_dt_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.pub.invest.api.contract.v1.SignalDirection direction = 6 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation initial_price = 7 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.initial_price_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string info = 8;
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 9 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.pub.invest.api.contract.v1.Quotation target_price = 10 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.target_price_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp end_dt = 11 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.end_dt_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 probability = 12;
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.probability_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .tinkoff.pub.invest.api.contract.v1.Quotation stoploss = 13;
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.stoploss_), _Internal::kHasBitsOffset + 5, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tinkoff.pub.invest.api.contract.v1.Quotation close_price = 14;
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.close_price_), _Internal::kHasBitsOffset + 6, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .google.protobuf.Timestamp close_dt = 15;
    {PROTOBUF_FIELD_OFFSET(Signal, _impl_.close_dt_), _Internal::kHasBitsOffset + 7, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::pub::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\51\11\13\15\16\0\0\0\4\4\0\0\0\0\0\0"
    "tinkoff.pub.invest.api.contract.v1.Signal"
    "signal_id"
    "strategy_id"
    "strategy_name"
    "instrument_uid"
    "info"
    "name"
  }},
};

PROTOBUF_NOINLINE void Signal::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.pub.invest.api.contract.v1.Signal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signal_id_.ClearToEmpty();
  _impl_.strategy_id_.ClearToEmpty();
  _impl_.strategy_name_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.info_.ClearNonDefaultToEmpty();
  }
  _impl_.name_.ClearToEmpty();
  if (cached_has_bits & 0x000000feu) {
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.create_dt_ != nullptr);
      _impl_.create_dt_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.initial_price_ != nullptr);
      _impl_.initial_price_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.target_price_ != nullptr);
      _impl_.target_price_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.end_dt_ != nullptr);
      _impl_.end_dt_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.stoploss_ != nullptr);
      _impl_.stoploss_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.close_price_ != nullptr);
      _impl_.close_price_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.close_dt_ != nullptr);
      _impl_.close_dt_->Clear();
    }
  }
  _impl_.direction_ = 0;
  _impl_.probability_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Signal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Signal& this_ = static_cast<const Signal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Signal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Signal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.pub.invest.api.contract.v1.Signal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string signal_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_signal_id().empty()) {
            const std::string& _s = this_._internal_signal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Signal.signal_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string strategy_id = 2 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_strategy_id().empty()) {
            const std::string& _s = this_._internal_strategy_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Signal.strategy_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string strategy_name = 3 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_strategy_name().empty()) {
            const std::string& _s = this_._internal_strategy_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Signal.strategy_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string instrument_uid = 4 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Signal.instrument_uid");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp create_dt = 5 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.create_dt_, this_._impl_.create_dt_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.pub.invest.api.contract.v1.SignalDirection direction = 6 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_direction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_direction(), target);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation initial_price = 7 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.initial_price_, this_._impl_.initial_price_->GetCachedSize(), target,
                stream);
          }

          // optional string info = 8;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_info();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Signal.info");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string name = 9 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.pub.invest.api.contract.v1.Signal.name");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // .tinkoff.pub.invest.api.contract.v1.Quotation target_price = 10 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.target_price_, this_._impl_.target_price_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp end_dt = 11 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.end_dt_, this_._impl_.end_dt_->GetCachedSize(), target,
                stream);
          }

          // optional int32 probability = 12;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<12>(
                    stream, this_._internal_probability(), target);
          }

          // optional .tinkoff.pub.invest.api.contract.v1.Quotation stoploss = 13;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.stoploss_, this_._impl_.stoploss_->GetCachedSize(), target,
                stream);
          }

          // optional .tinkoff.pub.invest.api.contract.v1.Quotation close_price = 14;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                14, *this_._impl_.close_price_, this_._impl_.close_price_->GetCachedSize(), target,
                stream);
          }

          // optional .google.protobuf.Timestamp close_dt = 15;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.close_dt_, this_._impl_.close_dt_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.pub.invest.api.contract.v1.Signal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Signal::ByteSizeLong(const MessageLite& base) {
          const Signal& this_ = static_cast<const Signal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Signal::ByteSizeLong() const {
          const Signal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.pub.invest.api.contract.v1.Signal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string signal_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_signal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_signal_id());
            }
            // string strategy_id = 2 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_strategy_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_strategy_id());
            }
            // string strategy_name = 3 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_strategy_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_strategy_name());
            }
            // string instrument_uid = 4 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
           {
            // optional string info = 8;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_info());
            }
          }
           {
            // string name = 9 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
          if (cached_has_bits & 0x000000feu) {
            // .google.protobuf.Timestamp create_dt = 5 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.create_dt_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation initial_price = 7 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_price_);
            }
            // .tinkoff.pub.invest.api.contract.v1.Quotation target_price = 10 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.target_price_);
            }
            // .google.protobuf.Timestamp end_dt = 11 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.end_dt_);
            }
            // optional .tinkoff.pub.invest.api.contract.v1.Quotation stoploss = 13;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stoploss_);
            }
            // optional .tinkoff.pub.invest.api.contract.v1.Quotation close_price = 14;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.close_price_);
            }
            // optional .google.protobuf.Timestamp close_dt = 15;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.close_dt_);
            }
          }
           {
            // .tinkoff.pub.invest.api.contract.v1.SignalDirection direction = 6 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_direction() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
          }
           {
            // optional int32 probability = 12;
            if (cached_has_bits & 0x00000100u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_probability());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Signal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Signal*>(&to_msg);
  auto& from = static_cast<const Signal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.pub.invest.api.contract.v1.Signal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_signal_id().empty()) {
    _this->_internal_set_signal_id(from._internal_signal_id());
  }
  if (!from._internal_strategy_id().empty()) {
    _this->_internal_set_strategy_id(from._internal_strategy_id());
  }
  if (!from._internal_strategy_name().empty()) {
    _this->_internal_set_strategy_name(from._internal_strategy_name());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_info(from._internal_info());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (cached_has_bits & 0x000000feu) {
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.create_dt_ != nullptr);
      if (_this->_impl_.create_dt_ == nullptr) {
        _this->_impl_.create_dt_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.create_dt_);
      } else {
        _this->_impl_.create_dt_->MergeFrom(*from._impl_.create_dt_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.initial_price_ != nullptr);
      if (_this->_impl_.initial_price_ == nullptr) {
        _this->_impl_.initial_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.initial_price_);
      } else {
        _this->_impl_.initial_price_->MergeFrom(*from._impl_.initial_price_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.target_price_ != nullptr);
      if (_this->_impl_.target_price_ == nullptr) {
        _this->_impl_.target_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.target_price_);
      } else {
        _this->_impl_.target_price_->MergeFrom(*from._impl_.target_price_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.end_dt_ != nullptr);
      if (_this->_impl_.end_dt_ == nullptr) {
        _this->_impl_.end_dt_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.end_dt_);
      } else {
        _this->_impl_.end_dt_->MergeFrom(*from._impl_.end_dt_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.stoploss_ != nullptr);
      if (_this->_impl_.stoploss_ == nullptr) {
        _this->_impl_.stoploss_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.stoploss_);
      } else {
        _this->_impl_.stoploss_->MergeFrom(*from._impl_.stoploss_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.close_price_ != nullptr);
      if (_this->_impl_.close_price_ == nullptr) {
        _this->_impl_.close_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::pub::invest::api::contract::v1::Quotation>(arena, *from._impl_.close_price_);
      } else {
        _this->_impl_.close_price_->MergeFrom(*from._impl_.close_price_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.close_dt_ != nullptr);
      if (_this->_impl_.close_dt_ == nullptr) {
        _this->_impl_.close_dt_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.close_dt_);
      } else {
        _this->_impl_.close_dt_->MergeFrom(*from._impl_.close_dt_);
      }
    }
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.probability_ = from._impl_.probability_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Signal::CopyFrom(const Signal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.pub.invest.api.contract.v1.Signal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Signal::InternalSwap(Signal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signal_id_, &other->_impl_.signal_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strategy_id_, &other->_impl_.strategy_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strategy_name_, &other->_impl_.strategy_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.info_, &other->_impl_.info_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Signal, _impl_.probability_)
      + sizeof(Signal::_impl_.probability_)
      - PROTOBUF_FIELD_OFFSET(Signal, _impl_.create_dt_)>(
          reinterpret_cast<char*>(&_impl_.create_dt_),
          reinterpret_cast<char*>(&other->_impl_.create_dt_));
}

::google::protobuf::Metadata Signal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace pub
}  // namespace tinkoff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_signals_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
