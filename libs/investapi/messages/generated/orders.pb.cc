// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: orders.proto
// Protobuf C++ Version: 5.29.3

#include "orders.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {

inline constexpr TradesStreamRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accounts_{},
        ping_delay_ms_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TradesStreamRequest::TradesStreamRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TradesStreamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradesStreamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradesStreamRequestDefaultTypeInternal() {}
  union {
    TradesStreamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradesStreamRequestDefaultTypeInternal _TradesStreamRequest_default_instance_;

inline constexpr PostOrderAsyncResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        order_request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trade_intent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        execution_report_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PostOrderAsyncResponse::PostOrderAsyncResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PostOrderAsyncResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PostOrderAsyncResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PostOrderAsyncResponseDefaultTypeInternal() {}
  union {
    PostOrderAsyncResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PostOrderAsyncResponseDefaultTypeInternal _PostOrderAsyncResponse_default_instance_;

inline constexpr OrderStateStreamRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accounts_{},
        ping_delay_millis_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderStateStreamRequest::OrderStateStreamRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderStateStreamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderStateStreamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderStateStreamRequestDefaultTypeInternal() {}
  union {
    OrderStateStreamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderStateStreamRequestDefaultTypeInternal _OrderStateStreamRequest_default_instance_;

inline constexpr GetOrdersRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrdersRequest::GetOrdersRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetOrdersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrdersRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrdersRequestDefaultTypeInternal() {}
  union {
    GetOrdersRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrdersRequestDefaultTypeInternal _GetOrdersRequest_default_instance_;

inline constexpr GetOrderStateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::PriceType >(0)},
        order_id_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderIdType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrderStateRequest::GetOrderStateRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetOrderStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrderStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrderStateRequestDefaultTypeInternal() {}
  union {
    GetOrderStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrderStateRequestDefaultTypeInternal _GetOrderStateRequest_default_instance_;

inline constexpr GetMaxLotsResponse_SellLimitsView::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sell_max_lots_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetMaxLotsResponse_SellLimitsView::GetMaxLotsResponse_SellLimitsView(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetMaxLotsResponse_SellLimitsViewDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMaxLotsResponse_SellLimitsViewDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMaxLotsResponse_SellLimitsViewDefaultTypeInternal() {}
  union {
    GetMaxLotsResponse_SellLimitsView _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMaxLotsResponse_SellLimitsViewDefaultTypeInternal _GetMaxLotsResponse_SellLimitsView_default_instance_;

inline constexpr CancelOrderRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderIdType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CancelOrderRequest::CancelOrderRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelOrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelOrderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelOrderRequestDefaultTypeInternal() {}
  union {
    CancelOrderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelOrderRequestDefaultTypeInternal _CancelOrderRequest_default_instance_;

inline constexpr SubscriptionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        accounts_{},
        tracking_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stream_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_{nullptr},
        status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::ResultSubscriptionStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SubscriptionResponse::SubscriptionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscriptionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscriptionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscriptionResponseDefaultTypeInternal() {}
  union {
    SubscriptionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscriptionResponseDefaultTypeInternal _SubscriptionResponse_default_instance_;

inline constexpr ReplaceOrderRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        idempotency_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        quantity_{::int64_t{0}},
        price_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::PriceType >(0)},
        confirm_margin_trade_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ReplaceOrderRequest::ReplaceOrderRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReplaceOrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplaceOrderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplaceOrderRequestDefaultTypeInternal() {}
  union {
    ReplaceOrderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplaceOrderRequestDefaultTypeInternal _ReplaceOrderRequest_default_instance_;

inline constexpr PostOrderRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        quantity_{::int64_t{0}},
        direction_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderDirection >(0)},
        order_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderType >(0)},
        time_in_force_{static_cast< ::tinkoff::public_::invest::api::contract::v1::TimeInForceType >(0)},
        price_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::PriceType >(0)},
        confirm_margin_trade_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PostOrderRequest::PostOrderRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PostOrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PostOrderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PostOrderRequestDefaultTypeInternal() {}
  union {
    PostOrderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PostOrderRequestDefaultTypeInternal _PostOrderRequest_default_instance_;

inline constexpr PostOrderAsyncRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        quantity_{::int64_t{0}},
        direction_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderDirection >(0)},
        order_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderType >(0)},
        time_in_force_{static_cast< ::tinkoff::public_::invest::api::contract::v1::TimeInForceType >(0)},
        price_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::PriceType >(0)},
        confirm_margin_trade_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PostOrderAsyncRequest::PostOrderAsyncRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PostOrderAsyncRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PostOrderAsyncRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PostOrderAsyncRequestDefaultTypeInternal() {}
  union {
    PostOrderAsyncRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PostOrderAsyncRequestDefaultTypeInternal _PostOrderAsyncRequest_default_instance_;

inline constexpr OrderTrade::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_time_{nullptr},
        price_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR OrderTrade::OrderTrade(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderTradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderTradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderTradeDefaultTypeInternal() {}
  union {
    OrderTrade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderTradeDefaultTypeInternal _OrderTrade_default_instance_;

inline constexpr OrderStage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        execution_time_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR OrderStage::OrderStage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderStageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderStageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderStageDefaultTypeInternal() {}
  union {
    OrderStage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderStageDefaultTypeInternal _OrderStage_default_instance_;

inline constexpr GetOrderPriceResponse_ExtraFuture::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        initial_margin_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrderPriceResponse_ExtraFuture::GetOrderPriceResponse_ExtraFuture(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetOrderPriceResponse_ExtraFutureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrderPriceResponse_ExtraFutureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrderPriceResponse_ExtraFutureDefaultTypeInternal() {}
  union {
    GetOrderPriceResponse_ExtraFuture _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrderPriceResponse_ExtraFutureDefaultTypeInternal _GetOrderPriceResponse_ExtraFuture_default_instance_;

inline constexpr GetOrderPriceResponse_ExtraBond::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        aci_value_{nullptr},
        nominal_conversion_rate_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrderPriceResponse_ExtraBond::GetOrderPriceResponse_ExtraBond(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetOrderPriceResponse_ExtraBondDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrderPriceResponse_ExtraBondDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrderPriceResponse_ExtraBondDefaultTypeInternal() {}
  union {
    GetOrderPriceResponse_ExtraBond _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrderPriceResponse_ExtraBondDefaultTypeInternal _GetOrderPriceResponse_ExtraBond_default_instance_;

inline constexpr GetOrderPriceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        quantity_{::int64_t{0}},
        direction_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderDirection >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrderPriceRequest::GetOrderPriceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetOrderPriceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrderPriceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrderPriceRequestDefaultTypeInternal() {}
  union {
    GetOrderPriceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrderPriceRequestDefaultTypeInternal _GetOrderPriceRequest_default_instance_;

inline constexpr GetMaxLotsResponse_BuyLimitsView::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        buy_money_amount_{nullptr},
        buy_max_lots_{::int64_t{0}},
        buy_max_market_lots_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR GetMaxLotsResponse_BuyLimitsView::GetMaxLotsResponse_BuyLimitsView(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetMaxLotsResponse_BuyLimitsViewDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMaxLotsResponse_BuyLimitsViewDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMaxLotsResponse_BuyLimitsViewDefaultTypeInternal() {}
  union {
    GetMaxLotsResponse_BuyLimitsView _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMaxLotsResponse_BuyLimitsViewDefaultTypeInternal _GetMaxLotsResponse_BuyLimitsView_default_instance_;

inline constexpr GetMaxLotsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetMaxLotsRequest::GetMaxLotsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetMaxLotsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMaxLotsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMaxLotsRequestDefaultTypeInternal() {}
  union {
    GetMaxLotsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMaxLotsRequestDefaultTypeInternal _GetMaxLotsRequest_default_instance_;

inline constexpr PostOrderResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_order_price_{nullptr},
        executed_order_price_{nullptr},
        total_order_amount_{nullptr},
        initial_commission_{nullptr},
        executed_commission_{nullptr},
        aci_value_{nullptr},
        initial_security_price_{nullptr},
        initial_order_price_pt_{nullptr},
        response_metadata_{nullptr},
        lots_requested_{::int64_t{0}},
        lots_executed_{::int64_t{0}},
        execution_report_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus >(0)},
        direction_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderDirection >(0)},
        order_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PostOrderResponse::PostOrderResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PostOrderResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PostOrderResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PostOrderResponseDefaultTypeInternal() {}
  union {
    PostOrderResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PostOrderResponseDefaultTypeInternal _PostOrderResponse_default_instance_;

inline constexpr OrderTrades::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trades_{},
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_{nullptr},
        direction_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderDirection >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OrderTrades::OrderTrades(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderTradesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderTradesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderTradesDefaultTypeInternal() {}
  union {
    OrderTrades _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderTradesDefaultTypeInternal _OrderTrades_default_instance_;

inline constexpr OrderStateStreamResponse_OrderState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trades_{},
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ticker_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        class_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_at_{nullptr},
        initial_order_price_{nullptr},
        order_price_{nullptr},
        amount_{nullptr},
        executed_order_price_{nullptr},
        completion_time_{nullptr},
        execution_report_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus >(0)},
        status_info_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_StatusCauseInfo >(0)},
        lot_size_{0},
        direction_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderDirection >(0)},
        time_in_force_{static_cast< ::tinkoff::public_::invest::api::contract::v1::TimeInForceType >(0)},
        order_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderType >(0)},
        lots_requested_{::int64_t{0}},
        lots_executed_{::int64_t{0}},
        lots_left_{::int64_t{0}},
        lots_cancelled_{::int64_t{0}},
        marker_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_MarkerType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OrderStateStreamResponse_OrderState::OrderStateStreamResponse_OrderState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderStateStreamResponse_OrderStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderStateStreamResponse_OrderStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderStateStreamResponse_OrderStateDefaultTypeInternal() {}
  union {
    OrderStateStreamResponse_OrderState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderStateStreamResponse_OrderStateDefaultTypeInternal _OrderStateStreamResponse_OrderState_default_instance_;

inline constexpr OrderState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stages_{},
        order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_order_price_{nullptr},
        executed_order_price_{nullptr},
        total_order_amount_{nullptr},
        average_position_price_{nullptr},
        initial_commission_{nullptr},
        executed_commission_{nullptr},
        initial_security_price_{nullptr},
        service_commission_{nullptr},
        order_date_{nullptr},
        lots_requested_{::int64_t{0}},
        lots_executed_{::int64_t{0}},
        execution_report_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderExecutionReportStatus >(0)},
        direction_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderDirection >(0)},
        order_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OrderState::OrderState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderStateDefaultTypeInternal() {}
  union {
    OrderState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderStateDefaultTypeInternal _OrderState_default_instance_;

inline constexpr GetOrderPriceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        total_order_amount_{nullptr},
        initial_order_amount_{nullptr},
        executed_commission_{nullptr},
        executed_commission_rub_{nullptr},
        service_commission_{nullptr},
        deal_commission_{nullptr},
        lots_requested_{::int64_t{0}},
        instrument_extra_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrderPriceResponse::GetOrderPriceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetOrderPriceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrderPriceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrderPriceResponseDefaultTypeInternal() {}
  union {
    GetOrderPriceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrderPriceResponseDefaultTypeInternal _GetOrderPriceResponse_default_instance_;

inline constexpr GetMaxLotsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        buy_limits_{nullptr},
        buy_margin_limits_{nullptr},
        sell_limits_{nullptr},
        sell_margin_limits_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetMaxLotsResponse::GetMaxLotsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetMaxLotsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMaxLotsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMaxLotsResponseDefaultTypeInternal() {}
  union {
    GetMaxLotsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMaxLotsResponseDefaultTypeInternal _GetMaxLotsResponse_default_instance_;

inline constexpr CancelOrderResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_{nullptr},
        response_metadata_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CancelOrderResponse::CancelOrderResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelOrderResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelOrderResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelOrderResponseDefaultTypeInternal() {}
  union {
    CancelOrderResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelOrderResponseDefaultTypeInternal _CancelOrderResponse_default_instance_;

inline constexpr TradesStreamResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TradesStreamResponse::TradesStreamResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TradesStreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradesStreamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradesStreamResponseDefaultTypeInternal() {}
  union {
    TradesStreamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradesStreamResponseDefaultTypeInternal _TradesStreamResponse_default_instance_;

inline constexpr OrderStateStreamResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR OrderStateStreamResponse::OrderStateStreamResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderStateStreamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderStateStreamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderStateStreamResponseDefaultTypeInternal() {}
  union {
    OrderStateStreamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderStateStreamResponseDefaultTypeInternal _OrderStateStreamResponse_default_instance_;

inline constexpr GetOrdersResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : orders_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrdersResponse::GetOrdersResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetOrdersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrdersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrdersResponseDefaultTypeInternal() {}
  union {
    GetOrdersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrdersResponseDefaultTypeInternal _GetOrdersResponse_default_instance_;
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_orders_2eproto[7];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_orders_2eproto = nullptr;
const ::uint32_t
    TableStruct_orders_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradesStreamRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradesStreamRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradesStreamRequest, _impl_.accounts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradesStreamRequest, _impl_.ping_delay_ms_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradesStreamResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradesStreamResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradesStreamResponse, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrades, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrades, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrades, _impl_.order_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrades, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrades, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrades, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrades, _impl_.trades_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrades, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrades, _impl_.instrument_uid_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrade, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrade, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrade, _impl_.date_time_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrade, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrade, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderTrade, _impl_.trade_id_),
        0,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_.order_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_.order_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_.instrument_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_.time_in_force_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_.price_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest, _impl_.confirm_margin_trade_),
        0,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.order_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.execution_report_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.lots_requested_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.lots_executed_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.initial_order_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.executed_order_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.total_order_amount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.initial_commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.executed_commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.aci_value_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.initial_security_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.order_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.initial_order_price_pt_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.order_request_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse, _impl_.response_metadata_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
        ~0u,
        ~0u,
        6,
        ~0u,
        ~0u,
        7,
        ~0u,
        ~0u,
        8,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _impl_.instrument_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _impl_.order_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _impl_.order_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _impl_.time_in_force_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _impl_.price_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest, _impl_.confirm_margin_trade_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncResponse, _impl_.order_request_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncResponse, _impl_.execution_report_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncResponse, _impl_.trade_intent_id_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CancelOrderRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CancelOrderRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CancelOrderRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CancelOrderRequest, _impl_.order_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CancelOrderRequest, _impl_.order_id_type_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CancelOrderResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CancelOrderResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CancelOrderResponse, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CancelOrderResponse, _impl_.response_metadata_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderStateRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderStateRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderStateRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderStateRequest, _impl_.order_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderStateRequest, _impl_.price_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderStateRequest, _impl_.order_id_type_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrdersRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrdersRequest, _impl_.account_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrdersResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrdersResponse, _impl_.orders_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.order_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.execution_report_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.lots_requested_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.lots_executed_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.initial_order_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.executed_order_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.total_order_amount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.average_position_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.initial_commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.executed_commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.initial_security_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.stages_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.service_commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.currency_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.order_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.order_date_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderState, _impl_.order_request_id_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
        ~0u,
        ~0u,
        6,
        ~0u,
        7,
        ~0u,
        ~0u,
        8,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStage, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStage, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStage, _impl_.trade_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStage, _impl_.execution_time_),
        0,
        ~0u,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest, _impl_.order_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest, _impl_.idempotency_key_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest, _impl_.price_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest, _impl_.confirm_margin_trade_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsRequest, _impl_.instrument_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsRequest, _impl_.price_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView, _impl_.buy_money_amount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView, _impl_.buy_max_lots_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView, _impl_.buy_max_market_lots_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView, _impl_.sell_max_lots_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse, _impl_.currency_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse, _impl_.buy_limits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse, _impl_.buy_margin_limits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse, _impl_.sell_limits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse, _impl_.sell_margin_limits_),
        ~0u,
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceRequest, _impl_.instrument_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceRequest, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceRequest, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceRequest, _impl_.quantity_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond, _impl_.aci_value_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond, _impl_.nominal_conversion_rate_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture, _impl_.initial_margin_),
        0,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _impl_.total_order_amount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _impl_.initial_order_amount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _impl_.lots_requested_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _impl_.executed_commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _impl_.executed_commission_rub_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _impl_.service_commission_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _impl_.deal_commission_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _impl_.instrument_extra_),
        0,
        1,
        ~0u,
        2,
        3,
        4,
        5,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamRequest, _impl_.accounts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamRequest, _impl_.ping_delay_millis_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse, _impl_.tracking_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse, _impl_.stream_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse, _impl_.accounts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse, _impl_.error_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.order_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.order_request_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.client_code_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.execution_report_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.status_info_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.ticker_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.class_code_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.lot_size_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.time_in_force_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.order_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.initial_order_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.order_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.executed_order_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.currency_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.lots_requested_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.lots_executed_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.lots_left_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.lots_cancelled_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.marker_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.trades_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.completion_time_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.exchange_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState, _impl_.instrument_uid_),
        ~0u,
        0,
        ~0u,
        1,
        ~0u,
        7,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        3,
        4,
        5,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        8,
        ~0u,
        6,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse, _impl_.payload_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::TradesStreamRequest)},
        {12, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::TradesStreamResponse)},
        {24, 39, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OrderTrades)},
        {46, 58, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OrderTrade)},
        {62, 81, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::PostOrderRequest)},
        {92, 119, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::PostOrderResponse)},
        {138, 156, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest)},
        {166, 177, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncResponse)},
        {180, 191, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::CancelOrderRequest)},
        {194, 204, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::CancelOrderResponse)},
        {206, 218, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetOrderStateRequest)},
        {222, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetOrdersRequest)},
        {231, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetOrdersResponse)},
        {240, 268, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OrderState)},
        {288, 300, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OrderStage)},
        {304, 319, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest)},
        {326, 337, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsRequest)},
        {340, 351, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView)},
        {354, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView)},
        {363, 376, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse)},
        {381, 394, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceRequest)},
        {399, 409, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond)},
        {411, 420, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture)},
        {421, 439, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse)},
        {448, 458, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamRequest)},
        {460, 473, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse)},
        {478, 513, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState)},
        {540, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tinkoff::public_::invest::api::contract::v1::_TradesStreamRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_TradesStreamResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_OrderTrades_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_OrderTrade_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_PostOrderRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_PostOrderResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_PostOrderAsyncRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_PostOrderAsyncResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_CancelOrderRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_CancelOrderResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetOrderStateRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetOrdersRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetOrdersResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_OrderState_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_OrderStage_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_ReplaceOrderRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetMaxLotsRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetMaxLotsResponse_BuyLimitsView_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetMaxLotsResponse_SellLimitsView_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetMaxLotsResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetOrderPriceRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetOrderPriceResponse_ExtraBond_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetOrderPriceResponse_ExtraFuture_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetOrderPriceResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_OrderStateStreamRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SubscriptionResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_OrderStateStreamResponse_OrderState_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_OrderStateStreamResponse_default_instance_._instance,
};
const char descriptor_table_protodef_orders_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014orders.proto\022%tinkoff.public.invest.ap"
    "i.contract.v1\032\014common.proto\032\037google/prot"
    "obuf/timestamp.proto\032\037google/api/field_b"
    "ehavior.proto\"U\n\023TradesStreamRequest\022\020\n\010"
    "accounts\030\001 \003(\t\022\032\n\rping_delay_ms\030\017 \001(\005H\000\210"
    "\001\001B\020\n\016_ping_delay_ms\"\377\001\n\024TradesStreamRes"
    "ponse\022J\n\014order_trades\030\001 \001(\01322.tinkoff.pu"
    "blic.invest.api.contract.v1.OrderTradesH"
    "\000\022;\n\004ping\030\002 \001(\0132+.tinkoff.public.invest."
    "api.contract.v1.PingH\000\022S\n\014subscription\030\003"
    " \001(\0132;.tinkoff.public.invest.api.contrac"
    "t.v1.SubscriptionResponseH\000B\t\n\007payload\"\226"
    "\002\n\013OrderTrades\022\020\n\010order_id\030\001 \001(\t\022.\n\ncrea"
    "ted_at\030\002 \001(\0132\032.google.protobuf.Timestamp"
    "\022H\n\tdirection\030\003 \001(\01625.tinkoff.public.inv"
    "est.api.contract.v1.OrderDirection\022\014\n\004fi"
    "gi\030\004 \001(\t\022A\n\006trades\030\005 \003(\01321.tinkoff.publi"
    "c.invest.api.contract.v1.OrderTrade\022\022\n\na"
    "ccount_id\030\006 \001(\t\022\026\n\016instrument_uid\030\007 \001(\t\""
    "\240\001\n\nOrderTrade\022-\n\tdate_time\030\001 \001(\0132\032.goog"
    "le.protobuf.Timestamp\022\?\n\005price\030\002 \001(\01320.t"
    "inkoff.public.invest.api.contract.v1.Quo"
    "tation\022\020\n\010quantity\030\003 \001(\003\022\020\n\010trade_id\030\004 \001"
    "(\t\"\262\004\n\020PostOrderRequest\022\025\n\004figi\030\001 \001(\tB\002\030"
    "\001H\000\210\001\001\022\026\n\010quantity\030\002 \001(\003B\004\342A\001\002\022D\n\005price\030"
    "\003 \001(\01320.tinkoff.public.invest.api.contra"
    "ct.v1.QuotationH\001\210\001\001\022N\n\tdirection\030\004 \001(\0162"
    "5.tinkoff.public.invest.api.contract.v1."
    "OrderDirectionB\004\342A\001\002\022\030\n\naccount_id\030\005 \001(\t"
    "B\004\342A\001\002\022J\n\norder_type\030\006 \001(\01620.tinkoff.pub"
    "lic.invest.api.contract.v1.OrderTypeB\004\342A"
    "\001\002\022\026\n\010order_id\030\007 \001(\tB\004\342A\001\002\022\025\n\rinstrument"
    "_id\030\010 \001(\t\022M\n\rtime_in_force\030\t \001(\01626.tinko"
    "ff.public.invest.api.contract.v1.TimeInF"
    "orceType\022D\n\nprice_type\030\n \001(\01620.tinkoff.p"
    "ublic.invest.api.contract.v1.PriceType\022\034"
    "\n\024confirm_margin_trade\030\013 \001(\010B\007\n\005_figiB\010\n"
    "\006_price\"\350\010\n\021PostOrderResponse\022\020\n\010order_i"
    "d\030\001 \001(\t\022b\n\027execution_report_status\030\002 \001(\016"
    "2A.tinkoff.public.invest.api.contract.v1"
    ".OrderExecutionReportStatus\022\026\n\016lots_requ"
    "ested\030\003 \001(\003\022\025\n\rlots_executed\030\004 \001(\003\022N\n\023in"
    "itial_order_price\030\005 \001(\01321.tinkoff.public"
    ".invest.api.contract.v1.MoneyValue\022O\n\024ex"
    "ecuted_order_price\030\006 \001(\01321.tinkoff.publi"
    "c.invest.api.contract.v1.MoneyValue\022M\n\022t"
    "otal_order_amount\030\007 \001(\01321.tinkoff.public"
    ".invest.api.contract.v1.MoneyValue\022M\n\022in"
    "itial_commission\030\010 \001(\01321.tinkoff.public."
    "invest.api.contract.v1.MoneyValue\022N\n\023exe"
    "cuted_commission\030\t \001(\01321.tinkoff.public."
    "invest.api.contract.v1.MoneyValue\022D\n\taci"
    "_value\030\n \001(\01321.tinkoff.public.invest.api"
    ".contract.v1.MoneyValue\022\014\n\004figi\030\013 \001(\t\022H\n"
    "\tdirection\030\014 \001(\01625.tinkoff.public.invest"
    ".api.contract.v1.OrderDirection\022Q\n\026initi"
    "al_security_price\030\r \001(\01321.tinkoff.public"
    ".invest.api.contract.v1.MoneyValue\022D\n\nor"
    "der_type\030\016 \001(\01620.tinkoff.public.invest.a"
    "pi.contract.v1.OrderType\022\017\n\007message\030\017 \001("
    "\t\022P\n\026initial_order_price_pt\030\020 \001(\01320.tink"
    "off.public.invest.api.contract.v1.Quotat"
    "ion\022\026\n\016instrument_uid\030\021 \001(\t\022\030\n\020order_req"
    "uest_id\030\024 \001(\t\022S\n\021response_metadata\030\376\001 \001("
    "\01327.tinkoff.public.invest.api.contract.v"
    "1.ResponseMetadata\"\310\004\n\025PostOrderAsyncReq"
    "uest\022\033\n\rinstrument_id\030\001 \001(\tB\004\342A\001\002\022\026\n\010qua"
    "ntity\030\002 \001(\003B\004\342A\001\002\022D\n\005price\030\003 \001(\01320.tinko"
    "ff.public.invest.api.contract.v1.Quotati"
    "onH\000\210\001\001\022N\n\tdirection\030\004 \001(\01625.tinkoff.pub"
    "lic.invest.api.contract.v1.OrderDirectio"
    "nB\004\342A\001\002\022\030\n\naccount_id\030\005 \001(\tB\004\342A\001\002\022J\n\nord"
    "er_type\030\006 \001(\01620.tinkoff.public.invest.ap"
    "i.contract.v1.OrderTypeB\004\342A\001\002\022\026\n\010order_i"
    "d\030\007 \001(\tB\004\342A\001\002\022R\n\rtime_in_force\030\010 \001(\01626.t"
    "inkoff.public.invest.api.contract.v1.Tim"
    "eInForceTypeH\001\210\001\001\022I\n\nprice_type\030\t \001(\01620."
    "tinkoff.public.invest.api.contract.v1.Pr"
    "iceTypeH\002\210\001\001\022\034\n\024confirm_margin_trade\030\n \001"
    "(\010B\010\n\006_priceB\020\n\016_time_in_forceB\r\n\013_price"
    "_type\"\324\001\n\026PostOrderAsyncResponse\022\036\n\020orde"
    "r_request_id\030\001 \001(\tB\004\342A\001\002\022h\n\027execution_re"
    "port_status\030\002 \001(\0162A.tinkoff.public.inves"
    "t.api.contract.v1.OrderExecutionReportSt"
    "atusB\004\342A\001\002\022\034\n\017trade_intent_id\030\003 \001(\tH\000\210\001\001"
    "B\022\n\020_trade_intent_id\"\250\001\n\022CancelOrderRequ"
    "est\022\030\n\naccount_id\030\001 \001(\tB\004\342A\001\002\022\026\n\010order_i"
    "d\030\002 \001(\tB\004\342A\001\002\022N\n\rorder_id_type\030\003 \001(\01622.t"
    "inkoff.public.invest.api.contract.v1.Ord"
    "erIdTypeH\000\210\001\001B\020\n\016_order_id_type\"\224\001\n\023Canc"
    "elOrderResponse\022(\n\004time\030\001 \001(\0132\032.google.p"
    "rotobuf.Timestamp\022S\n\021response_metadata\030\376"
    "\001 \001(\01327.tinkoff.public.invest.api.contra"
    "ct.v1.ResponseMetadata\"\360\001\n\024GetOrderState"
    "Request\022\030\n\naccount_id\030\001 \001(\tB\004\342A\001\002\022\026\n\010ord"
    "er_id\030\002 \001(\tB\004\342A\001\002\022D\n\nprice_type\030\003 \001(\01620."
    "tinkoff.public.invest.api.contract.v1.Pr"
    "iceType\022N\n\rorder_id_type\030\004 \001(\01622.tinkoff"
    ".public.invest.api.contract.v1.OrderIdTy"
    "peH\000\210\001\001B\020\n\016_order_id_type\",\n\020GetOrdersRe"
    "quest\022\030\n\naccount_id\030\001 \001(\tB\004\342A\001\002\"V\n\021GetOr"
    "dersResponse\022A\n\006orders\030\001 \003(\01321.tinkoff.p"
    "ublic.invest.api.contract.v1.OrderState\""
    "\212\t\n\nOrderState\022\020\n\010order_id\030\001 \001(\t\022b\n\027exec"
    "ution_report_status\030\002 \001(\0162A.tinkoff.publ"
    "ic.invest.api.contract.v1.OrderExecution"
    "ReportStatus\022\026\n\016lots_requested\030\003 \001(\003\022\025\n\r"
    "lots_executed\030\004 \001(\003\022N\n\023initial_order_pri"
    "ce\030\005 \001(\01321.tinkoff.public.invest.api.con"
    "tract.v1.MoneyValue\022O\n\024executed_order_pr"
    "ice\030\006 \001(\01321.tinkoff.public.invest.api.co"
    "ntract.v1.MoneyValue\022M\n\022total_order_amou"
    "nt\030\007 \001(\01321.tinkoff.public.invest.api.con"
    "tract.v1.MoneyValue\022Q\n\026average_position_"
    "price\030\010 \001(\01321.tinkoff.public.invest.api."
    "contract.v1.MoneyValue\022M\n\022initial_commis"
    "sion\030\t \001(\01321.tinkoff.public.invest.api.c"
    "ontract.v1.MoneyValue\022N\n\023executed_commis"
    "sion\030\n \001(\01321.tinkoff.public.invest.api.c"
    "ontract.v1.MoneyValue\022\014\n\004figi\030\013 \001(\t\022H\n\td"
    "irection\030\014 \001(\01625.tinkoff.public.invest.a"
    "pi.contract.v1.OrderDirection\022Q\n\026initial"
    "_security_price\030\r \001(\01321.tinkoff.public.i"
    "nvest.api.contract.v1.MoneyValue\022A\n\006stag"
    "es\030\016 \003(\01321.tinkoff.public.invest.api.con"
    "tract.v1.OrderStage\022M\n\022service_commissio"
    "n\030\017 \001(\01321.tinkoff.public.invest.api.cont"
    "ract.v1.MoneyValue\022\020\n\010currency\030\020 \001(\t\022D\n\n"
    "order_type\030\021 \001(\01620.tinkoff.public.invest"
    ".api.contract.v1.OrderType\022.\n\norder_date"
    "\030\022 \001(\0132\032.google.protobuf.Timestamp\022\026\n\016in"
    "strument_uid\030\023 \001(\t\022\030\n\020order_request_id\030\024"
    " \001(\t\"\246\001\n\nOrderStage\022@\n\005price\030\001 \001(\01321.tin"
    "koff.public.invest.api.contract.v1.Money"
    "Value\022\020\n\010quantity\030\002 \001(\003\022\020\n\010trade_id\030\003 \001("
    "\t\0222\n\016execution_time\030\005 \001(\0132\032.google.proto"
    "buf.Timestamp\"\306\002\n\023ReplaceOrderRequest\022\030\n"
    "\naccount_id\030\001 \001(\tB\004\342A\001\002\022\026\n\010order_id\030\006 \001("
    "\tB\004\342A\001\002\022\035\n\017idempotency_key\030\007 \001(\tB\004\342A\001\002\022\026"
    "\n\010quantity\030\013 \001(\003B\004\342A\001\002\022D\n\005price\030\014 \001(\01320."
    "tinkoff.public.invest.api.contract.v1.Qu"
    "otationH\000\210\001\001\022I\n\nprice_type\030\r \001(\01620.tinko"
    "ff.public.invest.api.contract.v1.PriceTy"
    "peH\001\210\001\001\022\034\n\024confirm_margin_trade\030\016 \001(\010B\010\n"
    "\006_priceB\r\n\013_price_type\"\232\001\n\021GetMaxLotsReq"
    "uest\022\030\n\naccount_id\030\001 \001(\tB\004\342A\001\002\022\033\n\rinstru"
    "ment_id\030\002 \001(\tB\004\342A\001\002\022D\n\005price\030\003 \001(\01320.tin"
    "koff.public.invest.api.contract.v1.Quota"
    "tionH\000\210\001\001B\010\n\006_price\"\346\004\n\022GetMaxLotsRespon"
    "se\022\020\n\010currency\030\001 \001(\t\022[\n\nbuy_limits\030\002 \001(\013"
    "2G.tinkoff.public.invest.api.contract.v1"
    ".GetMaxLotsResponse.BuyLimitsView\022b\n\021buy"
    "_margin_limits\030\003 \001(\0132G.tinkoff.public.in"
    "vest.api.contract.v1.GetMaxLotsResponse."
    "BuyLimitsView\022]\n\013sell_limits\030\004 \001(\0132H.tin"
    "koff.public.invest.api.contract.v1.GetMa"
    "xLotsResponse.SellLimitsView\022d\n\022sell_mar"
    "gin_limits\030\005 \001(\0132H.tinkoff.public.invest"
    ".api.contract.v1.GetMaxLotsResponse.Sell"
    "LimitsView\032\216\001\n\rBuyLimitsView\022J\n\020buy_mone"
    "y_amount\030\001 \001(\01320.tinkoff.public.invest.a"
    "pi.contract.v1.Quotation\022\024\n\014buy_max_lots"
    "\030\002 \001(\003\022\033\n\023buy_max_market_lots\030\003 \001(\003\032\'\n\016S"
    "ellLimitsView\022\025\n\rsell_max_lots\030\001 \001(\003\"\336\001\n"
    "\024GetOrderPriceRequest\022\022\n\naccount_id\030\001 \001("
    "\t\022\025\n\rinstrument_id\030\002 \001(\t\022\?\n\005price\030\003 \001(\0132"
    "0.tinkoff.public.invest.api.contract.v1."
    "Quotation\022H\n\tdirection\030\014 \001(\01625.tinkoff.p"
    "ublic.invest.api.contract.v1.OrderDirect"
    "ion\022\020\n\010quantity\030\r \001(\003\"\343\007\n\025GetOrderPriceR"
    "esponse\022M\n\022total_order_amount\030\001 \001(\01321.ti"
    "nkoff.public.invest.api.contract.v1.Mone"
    "yValue\022O\n\024initial_order_amount\030\005 \001(\01321.t"
    "inkoff.public.invest.api.contract.v1.Mon"
    "eyValue\022\026\n\016lots_requested\030\003 \001(\003\022N\n\023execu"
    "ted_commission\030\007 \001(\01321.tinkoff.public.in"
    "vest.api.contract.v1.MoneyValue\022R\n\027execu"
    "ted_commission_rub\030\010 \001(\01321.tinkoff.publi"
    "c.invest.api.contract.v1.MoneyValue\022M\n\022s"
    "ervice_commission\030\t \001(\01321.tinkoff.public"
    ".invest.api.contract.v1.MoneyValue\022J\n\017de"
    "al_commission\030\n \001(\01321.tinkoff.public.inv"
    "est.api.contract.v1.MoneyValue\022\\\n\nextra_"
    "bond\030\014 \001(\0132F.tinkoff.public.invest.api.c"
    "ontract.v1.GetOrderPriceResponse.ExtraBo"
    "ndH\000\022`\n\014extra_future\030\r \001(\0132H.tinkoff.pub"
    "lic.invest.api.contract.v1.GetOrderPrice"
    "Response.ExtraFutureH\000\032\244\001\n\tExtraBond\022D\n\t"
    "aci_value\030\002 \001(\01321.tinkoff.public.invest."
    "api.contract.v1.MoneyValue\022Q\n\027nominal_co"
    "nversion_rate\030\003 \001(\01320.tinkoff.public.inv"
    "est.api.contract.v1.Quotation\032X\n\013ExtraFu"
    "ture\022I\n\016initial_margin\030\002 \001(\01321.tinkoff.p"
    "ublic.invest.api.contract.v1.MoneyValueB"
    "\022\n\020instrument_extra\"a\n\027OrderStateStreamR"
    "equest\022\020\n\010accounts\030\001 \003(\t\022\036\n\021ping_delay_m"
    "illis\030\017 \001(\005H\000\210\001\001B\024\n\022_ping_delay_millis\"\363"
    "\001\n\024SubscriptionResponse\022\023\n\013tracking_id\030\001"
    " \001(\t\022O\n\006status\030\002 \001(\0162\?.tinkoff.public.in"
    "vest.api.contract.v1.ResultSubscriptionS"
    "tatus\022\021\n\tstream_id\030\004 \001(\t\022\020\n\010accounts\030\005 \003"
    "(\t\022F\n\005error\030\007 \001(\01322.tinkoff.public.inves"
    "t.api.contract.v1.ErrorDetailH\000\210\001\001B\010\n\006_e"
    "rror\"\272\020\n\030OrderStateStreamResponse\022a\n\013ord"
    "er_state\030\001 \001(\0132J.tinkoff.public.invest.a"
    "pi.contract.v1.OrderStateStreamResponse."
    "OrderStateH\000\022;\n\004ping\030\002 \001(\0132+.tinkoff.pub"
    "lic.invest.api.contract.v1.PingH\000\022S\n\014sub"
    "scription\030\003 \001(\0132;.tinkoff.public.invest."
    "api.contract.v1.SubscriptionResponseH\000\032\325"
    "\n\n\nOrderState\022\020\n\010order_id\030\001 \001(\t\022\035\n\020order"
    "_request_id\030\002 \001(\tH\000\210\001\001\022\023\n\013client_code\030\003 "
    "\001(\t\022.\n\ncreated_at\030\004 \001(\0132\032.google.protobu"
    "f.Timestamp\022b\n\027execution_report_status\030\005"
    " \001(\0162A.tinkoff.public.invest.api.contrac"
    "t.v1.OrderExecutionReportStatus\022i\n\013statu"
    "s_info\030\006 \001(\0162O.tinkoff.public.invest.api"
    ".contract.v1.OrderStateStreamResponse.St"
    "atusCauseInfoH\001\210\001\001\022\016\n\006ticker\030\007 \001(\t\022\022\n\ncl"
    "ass_code\030\010 \001(\t\022\020\n\010lot_size\030\t \001(\005\022H\n\tdire"
    "ction\030\n \001(\01625.tinkoff.public.invest.api."
    "contract.v1.OrderDirection\022M\n\rtime_in_fo"
    "rce\030\013 \001(\01626.tinkoff.public.invest.api.co"
    "ntract.v1.TimeInForceType\022D\n\norder_type\030"
    "\014 \001(\01620.tinkoff.public.invest.api.contra"
    "ct.v1.OrderType\022\022\n\naccount_id\030\r \001(\t\022N\n\023i"
    "nitial_order_price\030\026 \001(\01321.tinkoff.publi"
    "c.invest.api.contract.v1.MoneyValue\022F\n\013o"
    "rder_price\030\027 \001(\01321.tinkoff.public.invest"
    ".api.contract.v1.MoneyValue\022F\n\006amount\030\030 "
    "\001(\01321.tinkoff.public.invest.api.contract"
    ".v1.MoneyValueH\002\210\001\001\022O\n\024executed_order_pr"
    "ice\030\031 \001(\01321.tinkoff.public.invest.api.co"
    "ntract.v1.MoneyValue\022\020\n\010currency\030\032 \001(\t\022\026"
    "\n\016lots_requested\030\033 \001(\003\022\025\n\rlots_executed\030"
    "\034 \001(\003\022\021\n\tlots_left\030\035 \001(\003\022\026\n\016lots_cancell"
    "ed\030\036 \001(\003\022_\n\006marker\030\037 \001(\0162J.tinkoff.publi"
    "c.invest.api.contract.v1.OrderStateStrea"
    "mResponse.MarkerTypeH\003\210\001\001\022A\n\006trades\030! \003("
    "\01321.tinkoff.public.invest.api.contract.v"
    "1.OrderTrade\0223\n\017completion_time\030# \001(\0132\032."
    "google.protobuf.Timestamp\022\020\n\010exchange\030$ "
    "\001(\t\022\026\n\016instrument_uid\030) \001(\tB\023\n\021_order_re"
    "quest_idB\016\n\014_status_infoB\t\n\007_amountB\t\n\007_"
    "marker\"\257\001\n\nMarkerType\022\022\n\016MARKER_UNKNOWN\020"
    "\000\022\021\n\rMARKER_BROKER\020\001\022\017\n\013MARKER_CHAT\020\002\022\020\n"
    "\014MARKER_PAPER\020\003\022\021\n\rMARKER_MARGIN\020\004\022\020\n\014MA"
    "RKER_TKBNM\020\005\022\020\n\014MARKER_SHORT\020\006\022\021\n\rMARKER"
    "_SPECMM\020\007\022\r\n\tMARKER_PO\020\010\"\223\002\n\017StatusCause"
    "Info\022\025\n\021CAUSE_UNSPECIFIED\020\000\022\035\n\031CAUSE_CAN"
    "CELLED_BY_CLIENT\020\017\022\037\n\033CAUSE_CANCELLED_BY"
    "_EXCHANGE\020\001\022\'\n#CAUSE_CANCELLED_NOT_ENOUG"
    "H_POSITION\020\002\022#\n\037CAUSE_CANCELLED_BY_CLIEN"
    "T_BLOCK\020\003\022\034\n\030CAUSE_REJECTED_BY_BROKER\020\004\022"
    "\036\n\032CAUSE_REJECTED_BY_EXCHANGE\020\005\022\035\n\031CAUSE"
    "_CANCELLED_BY_BROKER\020\006B\t\n\007payload*d\n\016Ord"
    "erDirection\022\037\n\033ORDER_DIRECTION_UNSPECIFI"
    "ED\020\000\022\027\n\023ORDER_DIRECTION_BUY\020\001\022\030\n\024ORDER_D"
    "IRECTION_SELL\020\002*n\n\tOrderType\022\032\n\026ORDER_TY"
    "PE_UNSPECIFIED\020\000\022\024\n\020ORDER_TYPE_LIMIT\020\001\022\025"
    "\n\021ORDER_TYPE_MARKET\020\002\022\030\n\024ORDER_TYPE_BEST"
    "PRICE\020\003*\200\002\n\032OrderExecutionReportStatus\022\'"
    "\n#EXECUTION_REPORT_STATUS_UNSPECIFIED\020\000\022"
    " \n\034EXECUTION_REPORT_STATUS_FILL\020\001\022$\n EXE"
    "CUTION_REPORT_STATUS_REJECTED\020\002\022%\n!EXECU"
    "TION_REPORT_STATUS_CANCELLED\020\003\022\037\n\033EXECUT"
    "ION_REPORT_STATUS_NEW\020\004\022)\n%EXECUTION_REP"
    "ORT_STATUS_PARTIALLYFILL\020\005*\210\001\n\017TimeInFor"
    "ceType\022\035\n\031TIME_IN_FORCE_UNSPECIFIED\020\000\022\025\n"
    "\021TIME_IN_FORCE_DAY\020\001\022\037\n\033TIME_IN_FORCE_FI"
    "LL_AND_KILL\020\002\022\036\n\032TIME_IN_FORCE_FILL_OR_K"
    "ILL\020\003*c\n\013OrderIdType\022\035\n\031ORDER_ID_TYPE_UN"
    "SPECIFIED\020\000\022\032\n\026ORDER_ID_TYPE_EXCHANGE\020\001\022"
    "\031\n\025ORDER_ID_TYPE_REQUEST\020\0022\271\002\n\023OrdersStr"
    "eamService\022\211\001\n\014TradesStream\022:.tinkoff.pu"
    "blic.invest.api.contract.v1.TradesStream"
    "Request\032;.tinkoff.public.invest.api.cont"
    "ract.v1.TradesStreamResponse0\001\022\225\001\n\020Order"
    "StateStream\022>.tinkoff.public.invest.api."
    "contract.v1.OrderStateStreamRequest\032\?.ti"
    "nkoff.public.invest.api.contract.v1.Orde"
    "rStateStreamResponse0\0012\277\010\n\rOrdersService"
    "\022~\n\tPostOrder\0227.tinkoff.public.invest.ap"
    "i.contract.v1.PostOrderRequest\0328.tinkoff"
    ".public.invest.api.contract.v1.PostOrder"
    "Response\022\215\001\n\016PostOrderAsync\022<.tinkoff.pu"
    "blic.invest.api.contract.v1.PostOrderAsy"
    "ncRequest\032=.tinkoff.public.invest.api.co"
    "ntract.v1.PostOrderAsyncResponse\022\204\001\n\013Can"
    "celOrder\0229.tinkoff.public.invest.api.con"
    "tract.v1.CancelOrderRequest\032:.tinkoff.pu"
    "blic.invest.api.contract.v1.CancelOrderR"
    "esponse\022\177\n\rGetOrderState\022;.tinkoff.publi"
    "c.invest.api.contract.v1.GetOrderStateRe"
    "quest\0321.tinkoff.public.invest.api.contra"
    "ct.v1.OrderState\022~\n\tGetOrders\0227.tinkoff."
    "public.invest.api.contract.v1.GetOrdersR"
    "equest\0328.tinkoff.public.invest.api.contr"
    "act.v1.GetOrdersResponse\022\204\001\n\014ReplaceOrde"
    "r\022:.tinkoff.public.invest.api.contract.v"
    "1.ReplaceOrderRequest\0328.tinkoff.public.i"
    "nvest.api.contract.v1.PostOrderResponse\022"
    "\201\001\n\nGetMaxLots\0228.tinkoff.public.invest.a"
    "pi.contract.v1.GetMaxLotsRequest\0329.tinko"
    "ff.public.invest.api.contract.v1.GetMaxL"
    "otsResponse\022\212\001\n\rGetOrderPrice\022;.tinkoff."
    "public.invest.api.contract.v1.GetOrderPr"
    "iceRequest\032<.tinkoff.public.invest.api.c"
    "ontract.v1.GetOrderPriceResponseBa\n\034ru.t"
    "inkoff.piapi.contract.v1P\001Z\014./;investapi"
    "\242\002\005TIAPI\252\002\024Tinkoff.InvestApi.V1\312\002\021Tinkof"
    "f\\Invest\\V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_orders_2eproto_deps[3] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_orders_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_orders_2eproto = {
    false,
    false,
    12459,
    descriptor_table_protodef_orders_2eproto,
    "orders.proto",
    &descriptor_table_orders_2eproto_once,
    descriptor_table_orders_2eproto_deps,
    3,
    28,
    schemas,
    file_default_instances,
    TableStruct_orders_2eproto::offsets,
    file_level_enum_descriptors_orders_2eproto,
    file_level_service_descriptors_orders_2eproto,
};
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
const ::google::protobuf::EnumDescriptor* OrderStateStreamResponse_MarkerType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orders_2eproto);
  return file_level_enum_descriptors_orders_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t OrderStateStreamResponse_MarkerType_internal_data_[] = {
    589824u, 0u, };
bool OrderStateStreamResponse_MarkerType_IsValid(int value) {
  return 0 <= value && value <= 8;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse::MARKER_UNKNOWN;
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse::MARKER_BROKER;
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse::MARKER_CHAT;
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse::MARKER_PAPER;
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse::MARKER_MARGIN;
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse::MARKER_TKBNM;
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse::MARKER_SHORT;
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse::MARKER_SPECMM;
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse::MARKER_PO;
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse::MarkerType_MIN;
constexpr OrderStateStreamResponse_MarkerType OrderStateStreamResponse::MarkerType_MAX;
constexpr int OrderStateStreamResponse::MarkerType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* OrderStateStreamResponse_StatusCauseInfo_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orders_2eproto);
  return file_level_enum_descriptors_orders_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t OrderStateStreamResponse_StatusCauseInfo_internal_data_[] = {
    458752u, 32u, 256u, };
bool OrderStateStreamResponse_StatusCauseInfo_IsValid(int value) {
  return 0 <= value && value <= 15 && ((32895u >> value) & 1) != 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse::CAUSE_UNSPECIFIED;
constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse::CAUSE_CANCELLED_BY_CLIENT;
constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse::CAUSE_CANCELLED_BY_EXCHANGE;
constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse::CAUSE_CANCELLED_NOT_ENOUGH_POSITION;
constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse::CAUSE_CANCELLED_BY_CLIENT_BLOCK;
constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse::CAUSE_REJECTED_BY_BROKER;
constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse::CAUSE_REJECTED_BY_EXCHANGE;
constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse::CAUSE_CANCELLED_BY_BROKER;
constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse::StatusCauseInfo_MIN;
constexpr OrderStateStreamResponse_StatusCauseInfo OrderStateStreamResponse::StatusCauseInfo_MAX;
constexpr int OrderStateStreamResponse::StatusCauseInfo_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* OrderDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orders_2eproto);
  return file_level_enum_descriptors_orders_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t OrderDirection_internal_data_[] = {
    196608u, 0u, };
bool OrderDirection_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* OrderType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orders_2eproto);
  return file_level_enum_descriptors_orders_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t OrderType_internal_data_[] = {
    262144u, 0u, };
bool OrderType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* OrderExecutionReportStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orders_2eproto);
  return file_level_enum_descriptors_orders_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t OrderExecutionReportStatus_internal_data_[] = {
    393216u, 0u, };
bool OrderExecutionReportStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
const ::google::protobuf::EnumDescriptor* TimeInForceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orders_2eproto);
  return file_level_enum_descriptors_orders_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t TimeInForceType_internal_data_[] = {
    262144u, 0u, };
bool TimeInForceType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* OrderIdType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_orders_2eproto);
  return file_level_enum_descriptors_orders_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t OrderIdType_internal_data_[] = {
    196608u, 0u, };
bool OrderIdType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class TradesStreamRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TradesStreamRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TradesStreamRequest, _impl_._has_bits_);
};

TradesStreamRequest::TradesStreamRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE TradesStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::TradesStreamRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accounts_{visibility, arena, from.accounts_} {}

TradesStreamRequest::TradesStreamRequest(
    ::google::protobuf::Arena* arena,
    const TradesStreamRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TradesStreamRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.ping_delay_ms_ = from._impl_.ping_delay_ms_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE TradesStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        accounts_{visibility, arena} {}

inline void TradesStreamRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ping_delay_ms_ = {};
}
TradesStreamRequest::~TradesStreamRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
  SharedDtor(*this);
}
inline void TradesStreamRequest::SharedDtor(MessageLite& self) {
  TradesStreamRequest& this_ = static_cast<TradesStreamRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TradesStreamRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TradesStreamRequest(arena);
}
constexpr auto TradesStreamRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TradesStreamRequest, _impl_.accounts_) +
          decltype(TradesStreamRequest::_impl_.accounts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TradesStreamRequest), alignof(TradesStreamRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TradesStreamRequest::PlacementNew_,
                                 sizeof(TradesStreamRequest),
                                 alignof(TradesStreamRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TradesStreamRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TradesStreamRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TradesStreamRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TradesStreamRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TradesStreamRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TradesStreamRequest>(), &TradesStreamRequest::ByteSizeLong,
            &TradesStreamRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TradesStreamRequest, _impl_._cached_size_),
        false,
    },
    &TradesStreamRequest::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TradesStreamRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 74, 2> TradesStreamRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TradesStreamRequest, _impl_._has_bits_),
    0, // no _extensions_
    15, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950910,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::TradesStreamRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string accounts = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TradesStreamRequest, _impl_.accounts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 ping_delay_ms = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TradesStreamRequest, _impl_.ping_delay_ms_), 0>(),
     {120, 0, 0, PROTOBUF_FIELD_OFFSET(TradesStreamRequest, _impl_.ping_delay_ms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string accounts = 1;
    {PROTOBUF_FIELD_OFFSET(TradesStreamRequest, _impl_.accounts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // optional int32 ping_delay_ms = 15;
    {PROTOBUF_FIELD_OFFSET(TradesStreamRequest, _impl_.ping_delay_ms_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\71\10\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.TradesStreamRequest"
    "accounts"
  }},
};

PROTOBUF_NOINLINE void TradesStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _impl_.ping_delay_ms_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TradesStreamRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TradesStreamRequest& this_ = static_cast<const TradesStreamRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TradesStreamRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TradesStreamRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string accounts = 1;
          for (int i = 0, n = this_._internal_accounts_size(); i < n; ++i) {
            const auto& s = this_._internal_accounts().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.TradesStreamRequest.accounts");
            target = stream->WriteString(1, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 ping_delay_ms = 15;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<15>(
                    stream, this_._internal_ping_delay_ms(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TradesStreamRequest::ByteSizeLong(const MessageLite& base) {
          const TradesStreamRequest& this_ = static_cast<const TradesStreamRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TradesStreamRequest::ByteSizeLong() const {
          const TradesStreamRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string accounts = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_accounts().size());
              for (int i = 0, n = this_._internal_accounts().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_accounts().Get(i));
              }
            }
          }
           {
            // optional int32 ping_delay_ms = 15;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_ping_delay_ms());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TradesStreamRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TradesStreamRequest*>(&to_msg);
  auto& from = static_cast<const TradesStreamRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(from._internal_accounts());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.ping_delay_ms_ = from._impl_.ping_delay_ms_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TradesStreamRequest::CopyFrom(const TradesStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.TradesStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TradesStreamRequest::InternalSwap(TradesStreamRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
        swap(_impl_.ping_delay_ms_, other->_impl_.ping_delay_ms_);
}

::google::protobuf::Metadata TradesStreamRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TradesStreamResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradesStreamResponse, _impl_._oneof_case_);
};

void TradesStreamResponse::set_allocated_order_trades(::tinkoff::public_::invest::api::contract::v1::OrderTrades* order_trades) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_trades) {
    ::google::protobuf::Arena* submessage_arena = order_trades->GetArena();
    if (message_arena != submessage_arena) {
      order_trades = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_trades, submessage_arena);
    }
    set_has_order_trades();
    _impl_.payload_.order_trades_ = order_trades;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.order_trades)
}
void TradesStreamResponse::set_allocated_ping(::tinkoff::public_::invest::api::contract::v1::Ping* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(ping)->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.payload_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.ping)
}
void TradesStreamResponse::clear_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kPing) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.ping_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
    }
    clear_has_payload();
  }
}
void TradesStreamResponse::set_allocated_subscription(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* subscription) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscription) {
    ::google::protobuf::Arena* submessage_arena = subscription->GetArena();
    if (message_arena != submessage_arena) {
      subscription = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscription, submessage_arena);
    }
    set_has_subscription();
    _impl_.payload_.subscription_ = subscription;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.TradesStreamResponse.subscription)
}
TradesStreamResponse::TradesStreamResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE TradesStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::TradesStreamResponse& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

TradesStreamResponse::TradesStreamResponse(
    ::google::protobuf::Arena* arena,
    const TradesStreamResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TradesStreamResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kOrderTrades:
        _impl_.payload_.order_trades_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::OrderTrades>(arena, *from._impl_.payload_.order_trades_);
        break;
      case kPing:
        _impl_.payload_.ping_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        break;
      case kSubscription:
        _impl_.payload_.subscription_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse>(arena, *from._impl_.payload_.subscription_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE TradesStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void TradesStreamResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TradesStreamResponse::~TradesStreamResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  SharedDtor(*this);
}
inline void TradesStreamResponse::SharedDtor(MessageLite& self) {
  TradesStreamResponse& this_ = static_cast<TradesStreamResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void TradesStreamResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kOrderTrades: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_trades_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_trades_);
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.ping_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
      }
      break;
    }
    case kSubscription: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscription_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscription_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* TradesStreamResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TradesStreamResponse(arena);
}
constexpr auto TradesStreamResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TradesStreamResponse),
                                            alignof(TradesStreamResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TradesStreamResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TradesStreamResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TradesStreamResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TradesStreamResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TradesStreamResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TradesStreamResponse>(), &TradesStreamResponse::ByteSizeLong,
            &TradesStreamResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TradesStreamResponse, _impl_._cached_size_),
        false,
    },
    &TradesStreamResponse::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TradesStreamResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> TradesStreamResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::TradesStreamResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.OrderTrades order_trades = 1;
    {PROTOBUF_FIELD_OFFSET(TradesStreamResponse, _impl_.payload_.order_trades_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Ping ping = 2;
    {PROTOBUF_FIELD_OFFSET(TradesStreamResponse, _impl_.payload_.ping_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionResponse subscription = 3;
    {PROTOBUF_FIELD_OFFSET(TradesStreamResponse, _impl_.payload_.subscription_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderTrades>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Ping>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TradesStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TradesStreamResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TradesStreamResponse& this_ = static_cast<const TradesStreamResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TradesStreamResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TradesStreamResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            case kOrderTrades: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.payload_.order_trades_, this_._impl_.payload_.order_trades_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPing: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.payload_.ping_, this_._impl_.payload_.ping_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubscription: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.payload_.subscription_, this_._impl_.payload_.subscription_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TradesStreamResponse::ByteSizeLong(const MessageLite& base) {
          const TradesStreamResponse& this_ = static_cast<const TradesStreamResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TradesStreamResponse::ByteSizeLong() const {
          const TradesStreamResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            // .tinkoff.public.invest.api.contract.v1.OrderTrades order_trades = 1;
            case kOrderTrades: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_trades_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.Ping ping = 2;
            case kPing: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.ping_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.SubscriptionResponse subscription = 3;
            case kSubscription: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscription_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TradesStreamResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TradesStreamResponse*>(&to_msg);
  auto& from = static_cast<const TradesStreamResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kOrderTrades: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_trades_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::OrderTrades>(arena, *from._impl_.payload_.order_trades_);
        } else {
          _this->_impl_.payload_.order_trades_->MergeFrom(from._internal_order_trades());
        }
        break;
      }
      case kPing: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.ping_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        } else {
          _this->_impl_.payload_.ping_->MergeFrom(from._internal_ping());
        }
        break;
      }
      case kSubscription: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscription_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse>(arena, *from._impl_.payload_.subscription_);
        } else {
          _this->_impl_.payload_.subscription_->MergeFrom(from._internal_subscription());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TradesStreamResponse::CopyFrom(const TradesStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.TradesStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TradesStreamResponse::InternalSwap(TradesStreamResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TradesStreamResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderTrades::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OrderTrades>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_._has_bits_);
};

void OrderTrades::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
OrderTrades::OrderTrades(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderTrades)
}
inline PROTOBUF_NDEBUG_INLINE OrderTrades::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::OrderTrades& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trades_{visibility, arena, from.trades_},
        order_id_(arena, from.order_id_),
        figi_(arena, from.figi_),
        account_id_(arena, from.account_id_),
        instrument_uid_(arena, from.instrument_uid_) {}

OrderTrades::OrderTrades(
    ::google::protobuf::Arena* arena,
    const OrderTrades& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderTrades* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.created_at_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.created_at_)
                        : nullptr;
  _impl_.direction_ = from._impl_.direction_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderTrades)
}
inline PROTOBUF_NDEBUG_INLINE OrderTrades::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trades_{visibility, arena},
        order_id_(arena),
        figi_(arena),
        account_id_(arena),
        instrument_uid_(arena) {}

inline void OrderTrades::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::direction_));
}
OrderTrades::~OrderTrades() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderTrades)
  SharedDtor(*this);
}
inline void OrderTrades::SharedDtor(MessageLite& self) {
  OrderTrades& this_ = static_cast<OrderTrades&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.order_id_.Destroy();
  this_._impl_.figi_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.created_at_;
  this_._impl_.~Impl_();
}

inline void* OrderTrades::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderTrades(arena);
}
constexpr auto OrderTrades::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.trades_) +
          decltype(OrderTrades::_impl_.trades_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OrderTrades), alignof(OrderTrades), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderTrades::PlacementNew_,
                                 sizeof(OrderTrades),
                                 alignof(OrderTrades));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderTrades::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderTrades_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderTrades::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderTrades>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderTrades::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderTrades>(), &OrderTrades::ByteSizeLong,
            &OrderTrades::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_._cached_size_),
        false,
    },
    &OrderTrades::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderTrades::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 94, 2> OrderTrades::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderTrades>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string order_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.order_id_)}},
    // .google.protobuf.Timestamp created_at = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.created_at_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderTrades, _impl_.direction_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.direction_)}},
    // string figi = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.figi_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.trades_)}},
    // string account_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.account_id_)}},
    // string instrument_uid = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.instrument_uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string order_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp created_at = 2;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.created_at_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 3;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string figi = 4;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 5;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.trades_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string account_id = 6;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 7;
    {PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderTrade>()},
  }}, {{
    "\61\10\0\0\4\0\12\16"
    "tinkoff.public.invest.api.contract.v1.OrderTrades"
    "order_id"
    "figi"
    "account_id"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void OrderTrades::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderTrades)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trades_.Clear();
  _impl_.order_id_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.account_id_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.created_at_ != nullptr);
    _impl_.created_at_->Clear();
  }
  _impl_.direction_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderTrades::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderTrades& this_ = static_cast<const OrderTrades&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderTrades::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderTrades& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderTrades)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string order_id = 1;
          if (!this_._internal_order_id().empty()) {
            const std::string& _s = this_._internal_order_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderTrades.order_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp created_at = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.created_at_, this_._impl_.created_at_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 3;
          if (this_._internal_direction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_direction(), target);
          }

          // string figi = 4;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderTrades.figi");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_trades_size());
               i < n; i++) {
            const auto& repfield = this_._internal_trades().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string account_id = 6;
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderTrades.account_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string instrument_uid = 7;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderTrades.instrument_uid");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderTrades)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderTrades::ByteSizeLong(const MessageLite& base) {
          const OrderTrades& this_ = static_cast<const OrderTrades&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderTrades::ByteSizeLong() const {
          const OrderTrades& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderTrades)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 5;
            {
              total_size += 1UL * this_._internal_trades_size();
              for (const auto& msg : this_._internal_trades()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string order_id = 1;
            if (!this_._internal_order_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_id());
            }
            // string figi = 4;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string account_id = 6;
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // string instrument_uid = 7;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
           {
            // .google.protobuf.Timestamp created_at = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.created_at_);
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 3;
            if (this_._internal_direction() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderTrades::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderTrades*>(&to_msg);
  auto& from = static_cast<const OrderTrades&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderTrades)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trades()->MergeFrom(
      from._internal_trades());
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.created_at_ != nullptr);
    if (_this->_impl_.created_at_ == nullptr) {
      _this->_impl_.created_at_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.created_at_);
    } else {
      _this->_impl_.created_at_->MergeFrom(*from._impl_.created_at_);
    }
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderTrades::CopyFrom(const OrderTrades& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderTrades)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderTrades::InternalSwap(OrderTrades* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.trades_.InternalSwap(&other->_impl_.trades_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.direction_)
      + sizeof(OrderTrades::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(OrderTrades, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::google::protobuf::Metadata OrderTrades::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderTrade::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OrderTrade>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_._has_bits_);
};

void OrderTrade::clear_date_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.date_time_ != nullptr) _impl_.date_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OrderTrade::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
OrderTrade::OrderTrade(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderTrade)
}
inline PROTOBUF_NDEBUG_INLINE OrderTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::OrderTrade& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trade_id_(arena, from.trade_id_) {}

OrderTrade::OrderTrade(
    ::google::protobuf::Arena* arena,
    const OrderTrade& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderTrade* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.date_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.date_time_)
                        : nullptr;
  _impl_.price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.price_)
                        : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderTrade)
}
inline PROTOBUF_NDEBUG_INLINE OrderTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trade_id_(arena) {}

inline void OrderTrade::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, date_time_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, date_time_) +
               sizeof(Impl_::quantity_));
}
OrderTrade::~OrderTrade() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderTrade)
  SharedDtor(*this);
}
inline void OrderTrade::SharedDtor(MessageLite& self) {
  OrderTrade& this_ = static_cast<OrderTrade&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.trade_id_.Destroy();
  delete this_._impl_.date_time_;
  delete this_._impl_.price_;
  this_._impl_.~Impl_();
}

inline void* OrderTrade::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderTrade(arena);
}
constexpr auto OrderTrade::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderTrade),
                                            alignof(OrderTrade));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderTrade::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderTrade_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderTrade::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderTrade>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderTrade::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderTrade>(), &OrderTrade::ByteSizeLong,
            &OrderTrade::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_._cached_size_),
        false,
    },
    &OrderTrade::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderTrade::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 65, 2> OrderTrade::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderTrade>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string trade_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.trade_id_)}},
    // .google.protobuf.Timestamp date_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.date_time_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.price_)}},
    // int64 quantity = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderTrade, _impl_.quantity_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.quantity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp date_time = 1;
    {PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.date_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
    {PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 3;
    {PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string trade_id = 4;
    {PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.trade_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\60\0\0\0\10\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OrderTrade"
    "trade_id"
  }},
};

PROTOBUF_NOINLINE void OrderTrade::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderTrade)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trade_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.date_time_ != nullptr);
      _impl_.date_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderTrade::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderTrade& this_ = static_cast<const OrderTrade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderTrade::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderTrade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderTrade)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp date_time = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.date_time_, this_._impl_.date_time_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // int64 quantity = 3;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_quantity(), target);
          }

          // string trade_id = 4;
          if (!this_._internal_trade_id().empty()) {
            const std::string& _s = this_._internal_trade_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderTrade.trade_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderTrade)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderTrade::ByteSizeLong(const MessageLite& base) {
          const OrderTrade& this_ = static_cast<const OrderTrade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderTrade::ByteSizeLong() const {
          const OrderTrade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderTrade)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string trade_id = 4;
            if (!this_._internal_trade_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_trade_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp date_time = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.date_time_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
          }
           {
            // int64 quantity = 3;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderTrade::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderTrade*>(&to_msg);
  auto& from = static_cast<const OrderTrade&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderTrade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trade_id().empty()) {
    _this->_internal_set_trade_id(from._internal_trade_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.date_time_ != nullptr);
      if (_this->_impl_.date_time_ == nullptr) {
        _this->_impl_.date_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.date_time_);
      } else {
        _this->_impl_.date_time_->MergeFrom(*from._impl_.date_time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderTrade::CopyFrom(const OrderTrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderTrade::InternalSwap(OrderTrade* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_id_, &other->_impl_.trade_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.quantity_)
      + sizeof(OrderTrade::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(OrderTrade, _impl_.date_time_)>(
          reinterpret_cast<char*>(&_impl_.date_time_),
          reinterpret_cast<char*>(&other->_impl_.date_time_));
}

::google::protobuf::Metadata OrderTrade::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PostOrderRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PostOrderRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_._has_bits_);
};

void PostOrderRequest::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PostOrderRequest::PostOrderRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::PostOrderRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        account_id_(arena, from.account_id_),
        order_id_(arena, from.order_id_),
        instrument_id_(arena, from.instrument_id_) {}

PostOrderRequest::PostOrderRequest(
    ::google::protobuf::Arena* arena,
    const PostOrderRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PostOrderRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.price_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, confirm_margin_trade_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::confirm_margin_trade_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        account_id_(arena),
        order_id_(arena),
        instrument_id_(arena) {}

inline void PostOrderRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, confirm_margin_trade_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::confirm_margin_trade_));
}
PostOrderRequest::~PostOrderRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
  SharedDtor(*this);
}
inline void PostOrderRequest::SharedDtor(MessageLite& self) {
  PostOrderRequest& this_ = static_cast<PostOrderRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.order_id_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  delete this_._impl_.price_;
  this_._impl_.~Impl_();
}

inline void* PostOrderRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PostOrderRequest(arena);
}
constexpr auto PostOrderRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PostOrderRequest),
                                            alignof(PostOrderRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PostOrderRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PostOrderRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PostOrderRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PostOrderRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PostOrderRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PostOrderRequest>(), &PostOrderRequest::ByteSizeLong,
            &PostOrderRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_._cached_size_),
        false,
    },
    &PostOrderRequest::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PostOrderRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 106, 2> PostOrderRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::PostOrderRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.figi_)}},
    // int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PostOrderRequest, _impl_.quantity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.quantity_)}},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.price_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderRequest, _impl_.direction_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.direction_)}},
    // string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.account_id_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderRequest, _impl_.order_type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.order_type_)}},
    // string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.order_id_)}},
    // string instrument_id = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.instrument_id_)}},
    // .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderRequest, _impl_.time_in_force_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.time_in_force_)}},
    // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderRequest, _impl_.price_type_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.price_type_)}},
    // bool confirm_margin_trade = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PostOrderRequest, _impl_.confirm_margin_trade_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.confirm_margin_trade_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.figi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.price_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.order_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_id = 8;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.instrument_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 9;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.time_in_force_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 10;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.price_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool confirm_margin_trade = 11;
    {PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.confirm_margin_trade_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\66\4\0\0\0\12\0\10\15\0\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PostOrderRequest"
    "figi"
    "account_id"
    "order_id"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void PostOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.figi_.ClearNonDefaultToEmpty();
  }
  _impl_.account_id_.ClearToEmpty();
  _impl_.order_id_.ClearToEmpty();
  _impl_.instrument_id_.ClearToEmpty();
  if (cached_has_bits & 0x00000002u) {
    ABSL_DCHECK(_impl_.price_ != nullptr);
    _impl_.price_->Clear();
  }
  ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.confirm_margin_trade_) -
      reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.confirm_margin_trade_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PostOrderRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PostOrderRequest& this_ = static_cast<const PostOrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PostOrderRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PostOrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string figi = 1 [deprecated = true];
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderRequest.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_quantity(), target);
          }

          // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_direction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_direction(), target);
          }

          // string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderRequest.account_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_order_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_order_type(), target);
          }

          // string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_order_id().empty()) {
            const std::string& _s = this_._internal_order_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderRequest.order_id");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string instrument_id = 8;
          if (!this_._internal_instrument_id().empty()) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderRequest.instrument_id");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 9;
          if (this_._internal_time_in_force() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this_._internal_time_in_force(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 10;
          if (this_._internal_price_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                10, this_._internal_price_type(), target);
          }

          // bool confirm_margin_trade = 11;
          if (this_._internal_confirm_margin_trade() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_confirm_margin_trade(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PostOrderRequest::ByteSizeLong(const MessageLite& base) {
          const PostOrderRequest& this_ = static_cast<const PostOrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PostOrderRequest::ByteSizeLong() const {
          const PostOrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // optional string figi = 1 [deprecated = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
          }
           {
            // string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_order_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_id());
            }
            // string instrument_id = 8;
            if (!this_._internal_instrument_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
          }
           {
            // int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_direction() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_order_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_order_type());
            }
            // .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 9;
            if (this_._internal_time_in_force() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_time_in_force());
            }
            // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 10;
            if (this_._internal_price_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_price_type());
            }
            // bool confirm_margin_trade = 11;
            if (this_._internal_confirm_margin_trade() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PostOrderRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PostOrderRequest*>(&to_msg);
  auto& from = static_cast<const PostOrderRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  if (cached_has_bits & 0x00000002u) {
    ABSL_DCHECK(from._impl_.price_ != nullptr);
    if (_this->_impl_.price_ == nullptr) {
      _this->_impl_.price_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_);
    } else {
      _this->_impl_.price_->MergeFrom(*from._impl_.price_);
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  if (from._internal_order_type() != 0) {
    _this->_impl_.order_type_ = from._impl_.order_type_;
  }
  if (from._internal_time_in_force() != 0) {
    _this->_impl_.time_in_force_ = from._impl_.time_in_force_;
  }
  if (from._internal_price_type() != 0) {
    _this->_impl_.price_type_ = from._impl_.price_type_;
  }
  if (from._internal_confirm_margin_trade() != 0) {
    _this->_impl_.confirm_margin_trade_ = from._impl_.confirm_margin_trade_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PostOrderRequest::CopyFrom(const PostOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PostOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PostOrderRequest::InternalSwap(PostOrderRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.confirm_margin_trade_)
      + sizeof(PostOrderRequest::_impl_.confirm_margin_trade_)
      - PROTOBUF_FIELD_OFFSET(PostOrderRequest, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata PostOrderRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PostOrderResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PostOrderResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_._has_bits_);
};

void PostOrderResponse::clear_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_order_price_ != nullptr) _impl_.initial_order_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PostOrderResponse::clear_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_order_price_ != nullptr) _impl_.executed_order_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void PostOrderResponse::clear_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_order_amount_ != nullptr) _impl_.total_order_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void PostOrderResponse::clear_initial_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_commission_ != nullptr) _impl_.initial_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void PostOrderResponse::clear_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_commission_ != nullptr) _impl_.executed_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void PostOrderResponse::clear_aci_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.aci_value_ != nullptr) _impl_.aci_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void PostOrderResponse::clear_initial_security_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_security_price_ != nullptr) _impl_.initial_security_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void PostOrderResponse::clear_initial_order_price_pt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_order_price_pt_ != nullptr) _impl_.initial_order_price_pt_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void PostOrderResponse::clear_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_metadata_ != nullptr) _impl_.response_metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
PostOrderResponse::PostOrderResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::PostOrderResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        order_id_(arena, from.order_id_),
        figi_(arena, from.figi_),
        message_(arena, from.message_),
        instrument_uid_(arena, from.instrument_uid_),
        order_request_id_(arena, from.order_request_id_) {}

PostOrderResponse::PostOrderResponse(
    ::google::protobuf::Arena* arena,
    const PostOrderResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PostOrderResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.initial_order_price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.initial_order_price_)
                        : nullptr;
  _impl_.executed_order_price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.executed_order_price_)
                        : nullptr;
  _impl_.total_order_amount_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_order_amount_)
                        : nullptr;
  _impl_.initial_commission_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.initial_commission_)
                        : nullptr;
  _impl_.executed_commission_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.executed_commission_)
                        : nullptr;
  _impl_.aci_value_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.aci_value_)
                        : nullptr;
  _impl_.initial_security_price_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.initial_security_price_)
                        : nullptr;
  _impl_.initial_order_price_pt_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.initial_order_price_pt_)
                        : nullptr;
  _impl_.response_metadata_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata>(
                              arena, *from._impl_.response_metadata_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lots_requested_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lots_requested_),
           offsetof(Impl_, order_type_) -
               offsetof(Impl_, lots_requested_) +
               sizeof(Impl_::order_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        order_id_(arena),
        figi_(arena),
        message_(arena),
        instrument_uid_(arena),
        order_request_id_(arena) {}

inline void PostOrderResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, initial_order_price_),
           0,
           offsetof(Impl_, order_type_) -
               offsetof(Impl_, initial_order_price_) +
               sizeof(Impl_::order_type_));
}
PostOrderResponse::~PostOrderResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
  SharedDtor(*this);
}
inline void PostOrderResponse::SharedDtor(MessageLite& self) {
  PostOrderResponse& this_ = static_cast<PostOrderResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.order_id_.Destroy();
  this_._impl_.figi_.Destroy();
  this_._impl_.message_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.order_request_id_.Destroy();
  delete this_._impl_.initial_order_price_;
  delete this_._impl_.executed_order_price_;
  delete this_._impl_.total_order_amount_;
  delete this_._impl_.initial_commission_;
  delete this_._impl_.executed_commission_;
  delete this_._impl_.aci_value_;
  delete this_._impl_.initial_security_price_;
  delete this_._impl_.initial_order_price_pt_;
  delete this_._impl_.response_metadata_;
  this_._impl_.~Impl_();
}

inline void* PostOrderResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PostOrderResponse(arena);
}
constexpr auto PostOrderResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PostOrderResponse),
                                            alignof(PostOrderResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PostOrderResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PostOrderResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PostOrderResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PostOrderResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PostOrderResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PostOrderResponse>(), &PostOrderResponse::ByteSizeLong,
            &PostOrderResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_._cached_size_),
        false,
    },
    &PostOrderResponse::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PostOrderResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 19, 9, 129, 7> PostOrderResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_._has_bits_),
    0, // no _extensions_
    254, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294311936,  // skipmap
    offsetof(decltype(_table_), field_entries),
    19,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::PostOrderResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string order_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_id_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderResponse, _impl_.execution_report_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.execution_report_status_)}},
    // int64 lots_requested = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PostOrderResponse, _impl_.lots_requested_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.lots_requested_)}},
    // int64 lots_executed = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PostOrderResponse, _impl_.lots_executed_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.lots_executed_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_order_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.executed_order_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.total_order_amount_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.executed_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.aci_value_)}},
    // string figi = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderResponse, _impl_.direction_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.direction_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 6, 6, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_security_price_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderResponse, _impl_.order_type_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_type_)}},
    // string message = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.message_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 7, 7, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_order_price_pt_)}},
    // string instrument_uid = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.instrument_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string order_request_id = 20;
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_request_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
    {::_pbi::TcParser::FastMtS2,
     {4082, 8, 8, PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.response_metadata_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    254, 0, 1,
    65534, 18,
    65535, 65535
  }}, {{
    // string order_id = 1;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.execution_report_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 lots_requested = 3;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.lots_requested_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 lots_executed = 4;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.lots_executed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_order_price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.executed_order_price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.total_order_amount_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_commission_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.executed_commission_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.aci_value_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string figi = 11;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_security_price_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string message = 15;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_order_price_pt_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string instrument_uid = 17;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_request_id = 20;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_request_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
    {PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.response_metadata_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata>()},
  }}, {{
    "\67\10\0\0\0\0\0\0\0\0\0\4\0\0\0\7\0\16\20\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PostOrderResponse"
    "order_id"
    "figi"
    "message"
    "instrument_uid"
    "order_request_id"
  }},
};

PROTOBUF_NOINLINE void PostOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_id_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.order_request_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.initial_order_price_ != nullptr);
      _impl_.initial_order_price_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.executed_order_price_ != nullptr);
      _impl_.executed_order_price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.total_order_amount_ != nullptr);
      _impl_.total_order_amount_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.initial_commission_ != nullptr);
      _impl_.initial_commission_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.executed_commission_ != nullptr);
      _impl_.executed_commission_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.aci_value_ != nullptr);
      _impl_.aci_value_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.initial_security_price_ != nullptr);
      _impl_.initial_security_price_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.initial_order_price_pt_ != nullptr);
      _impl_.initial_order_price_pt_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(_impl_.response_metadata_ != nullptr);
    _impl_.response_metadata_->Clear();
  }
  ::memset(&_impl_.lots_requested_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.order_type_) -
      reinterpret_cast<char*>(&_impl_.lots_requested_)) + sizeof(_impl_.order_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PostOrderResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PostOrderResponse& this_ = static_cast<const PostOrderResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PostOrderResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PostOrderResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string order_id = 1;
          if (!this_._internal_order_id().empty()) {
            const std::string& _s = this_._internal_order_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
          if (this_._internal_execution_report_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_execution_report_status(), target);
          }

          // int64 lots_requested = 3;
          if (this_._internal_lots_requested() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_lots_requested(), target);
          }

          // int64 lots_executed = 4;
          if (this_._internal_lots_executed() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_lots_executed(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.initial_order_price_, this_._impl_.initial_order_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.executed_order_price_, this_._impl_.executed_order_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.total_order_amount_, this_._impl_.total_order_amount_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.initial_commission_, this_._impl_.initial_commission_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.executed_commission_, this_._impl_.executed_commission_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.aci_value_, this_._impl_.aci_value_->GetCachedSize(), target,
                stream);
          }

          // string figi = 11;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderResponse.figi");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
          if (this_._internal_direction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                12, this_._internal_direction(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.initial_security_price_, this_._impl_.initial_security_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;
          if (this_._internal_order_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                14, this_._internal_order_type(), target);
          }

          // string message = 15;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderResponse.message");
            target = stream->WriteStringMaybeAliased(15, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                16, *this_._impl_.initial_order_price_pt_, this_._impl_.initial_order_price_pt_->GetCachedSize(), target,
                stream);
          }

          // string instrument_uid = 17;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderResponse.instrument_uid");
            target = stream->WriteStringMaybeAliased(17, _s, target);
          }

          // string order_request_id = 20;
          if (!this_._internal_order_request_id().empty()) {
            const std::string& _s = this_._internal_order_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderResponse.order_request_id");
            target = stream->WriteStringMaybeAliased(20, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                254, *this_._impl_.response_metadata_, this_._impl_.response_metadata_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PostOrderResponse::ByteSizeLong(const MessageLite& base) {
          const PostOrderResponse& this_ = static_cast<const PostOrderResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PostOrderResponse::ByteSizeLong() const {
          const PostOrderResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string order_id = 1;
            if (!this_._internal_order_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_id());
            }
            // string figi = 11;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string message = 15;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // string instrument_uid = 17;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // string order_request_id = 20;
            if (!this_._internal_order_request_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_request_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_order_price_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.executed_order_price_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_order_amount_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 8;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_commission_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 9;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.executed_commission_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 10;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.aci_value_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_security_price_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation initial_order_price_pt = 16;
            if (cached_has_bits & 0x00000080u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_order_price_pt_);
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_metadata_);
            }
          }
           {
            // int64 lots_requested = 3;
            if (this_._internal_lots_requested() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_lots_requested());
            }
            // int64 lots_executed = 4;
            if (this_._internal_lots_executed() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_lots_executed());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
            if (this_._internal_execution_report_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_execution_report_status());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
            if (this_._internal_direction() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 14;
            if (this_._internal_order_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_order_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PostOrderResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PostOrderResponse*>(&to_msg);
  auto& from = static_cast<const PostOrderResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_order_request_id().empty()) {
    _this->_internal_set_order_request_id(from._internal_order_request_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.initial_order_price_ != nullptr);
      if (_this->_impl_.initial_order_price_ == nullptr) {
        _this->_impl_.initial_order_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_order_price_);
      } else {
        _this->_impl_.initial_order_price_->MergeFrom(*from._impl_.initial_order_price_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.executed_order_price_ != nullptr);
      if (_this->_impl_.executed_order_price_ == nullptr) {
        _this->_impl_.executed_order_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.executed_order_price_);
      } else {
        _this->_impl_.executed_order_price_->MergeFrom(*from._impl_.executed_order_price_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.total_order_amount_ != nullptr);
      if (_this->_impl_.total_order_amount_ == nullptr) {
        _this->_impl_.total_order_amount_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_order_amount_);
      } else {
        _this->_impl_.total_order_amount_->MergeFrom(*from._impl_.total_order_amount_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.initial_commission_ != nullptr);
      if (_this->_impl_.initial_commission_ == nullptr) {
        _this->_impl_.initial_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_commission_);
      } else {
        _this->_impl_.initial_commission_->MergeFrom(*from._impl_.initial_commission_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.executed_commission_ != nullptr);
      if (_this->_impl_.executed_commission_ == nullptr) {
        _this->_impl_.executed_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.executed_commission_);
      } else {
        _this->_impl_.executed_commission_->MergeFrom(*from._impl_.executed_commission_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.aci_value_ != nullptr);
      if (_this->_impl_.aci_value_ == nullptr) {
        _this->_impl_.aci_value_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.aci_value_);
      } else {
        _this->_impl_.aci_value_->MergeFrom(*from._impl_.aci_value_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.initial_security_price_ != nullptr);
      if (_this->_impl_.initial_security_price_ == nullptr) {
        _this->_impl_.initial_security_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_security_price_);
      } else {
        _this->_impl_.initial_security_price_->MergeFrom(*from._impl_.initial_security_price_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.initial_order_price_pt_ != nullptr);
      if (_this->_impl_.initial_order_price_pt_ == nullptr) {
        _this->_impl_.initial_order_price_pt_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.initial_order_price_pt_);
      } else {
        _this->_impl_.initial_order_price_pt_->MergeFrom(*from._impl_.initial_order_price_pt_);
      }
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(from._impl_.response_metadata_ != nullptr);
    if (_this->_impl_.response_metadata_ == nullptr) {
      _this->_impl_.response_metadata_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata>(arena, *from._impl_.response_metadata_);
    } else {
      _this->_impl_.response_metadata_->MergeFrom(*from._impl_.response_metadata_);
    }
  }
  if (from._internal_lots_requested() != 0) {
    _this->_impl_.lots_requested_ = from._impl_.lots_requested_;
  }
  if (from._internal_lots_executed() != 0) {
    _this->_impl_.lots_executed_ = from._impl_.lots_executed_;
  }
  if (from._internal_execution_report_status() != 0) {
    _this->_impl_.execution_report_status_ = from._impl_.execution_report_status_;
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  if (from._internal_order_type() != 0) {
    _this->_impl_.order_type_ = from._impl_.order_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PostOrderResponse::CopyFrom(const PostOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PostOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PostOrderResponse::InternalSwap(PostOrderResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_request_id_, &other->_impl_.order_request_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.order_type_)
      + sizeof(PostOrderResponse::_impl_.order_type_)
      - PROTOBUF_FIELD_OFFSET(PostOrderResponse, _impl_.initial_order_price_)>(
          reinterpret_cast<char*>(&_impl_.initial_order_price_),
          reinterpret_cast<char*>(&other->_impl_.initial_order_price_));
}

::google::protobuf::Metadata PostOrderResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PostOrderAsyncRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PostOrderAsyncRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_._has_bits_);
};

void PostOrderAsyncRequest::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PostOrderAsyncRequest::PostOrderAsyncRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderAsyncRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        instrument_id_(arena, from.instrument_id_),
        account_id_(arena, from.account_id_),
        order_id_(arena, from.order_id_) {}

PostOrderAsyncRequest::PostOrderAsyncRequest(
    ::google::protobuf::Arena* arena,
    const PostOrderAsyncRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PostOrderAsyncRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.price_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, confirm_margin_trade_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::confirm_margin_trade_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderAsyncRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        instrument_id_(arena),
        account_id_(arena),
        order_id_(arena) {}

inline void PostOrderAsyncRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, confirm_margin_trade_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::confirm_margin_trade_));
}
PostOrderAsyncRequest::~PostOrderAsyncRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest)
  SharedDtor(*this);
}
inline void PostOrderAsyncRequest::SharedDtor(MessageLite& self) {
  PostOrderAsyncRequest& this_ = static_cast<PostOrderAsyncRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.instrument_id_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.order_id_.Destroy();
  delete this_._impl_.price_;
  this_._impl_.~Impl_();
}

inline void* PostOrderAsyncRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PostOrderAsyncRequest(arena);
}
constexpr auto PostOrderAsyncRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PostOrderAsyncRequest),
                                            alignof(PostOrderAsyncRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PostOrderAsyncRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PostOrderAsyncRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PostOrderAsyncRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PostOrderAsyncRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PostOrderAsyncRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PostOrderAsyncRequest>(), &PostOrderAsyncRequest::ByteSizeLong,
            &PostOrderAsyncRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_._cached_size_),
        false,
    },
    &PostOrderAsyncRequest::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PostOrderAsyncRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 107, 2> PostOrderAsyncRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string instrument_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.instrument_id_)}},
    // int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PostOrderAsyncRequest, _impl_.quantity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.quantity_)}},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.price_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderAsyncRequest, _impl_.direction_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.direction_)}},
    // string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.account_id_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderAsyncRequest, _impl_.order_type_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.order_type_)}},
    // string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.order_id_)}},
    // optional .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderAsyncRequest, _impl_.time_in_force_), 1>(),
     {64, 1, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.time_in_force_)}},
    // optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderAsyncRequest, _impl_.price_type_), 2>(),
     {72, 2, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.price_type_)}},
    // bool confirm_margin_trade = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PostOrderAsyncRequest, _impl_.confirm_margin_trade_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.confirm_margin_trade_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string instrument_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.instrument_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.order_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 8;
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.time_in_force_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 9;
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.price_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool confirm_margin_trade = 10;
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.confirm_margin_trade_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\73\15\0\0\0\12\0\10\0\0\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest"
    "instrument_id"
    "account_id"
    "order_id"
  }},
};

PROTOBUF_NOINLINE void PostOrderAsyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instrument_id_.ClearToEmpty();
  _impl_.account_id_.ClearToEmpty();
  _impl_.order_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.price_ != nullptr);
    _impl_.price_->Clear();
  }
  ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.order_type_) -
      reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.order_type_));
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.time_in_force_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.price_type_) -
        reinterpret_cast<char*>(&_impl_.time_in_force_)) + sizeof(_impl_.price_type_));
  }
  _impl_.confirm_margin_trade_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PostOrderAsyncRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PostOrderAsyncRequest& this_ = static_cast<const PostOrderAsyncRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PostOrderAsyncRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PostOrderAsyncRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string instrument_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_instrument_id().empty()) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.instrument_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_quantity(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_direction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_direction(), target);
          }

          // string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.account_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_order_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_order_type(), target);
          }

          // string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_order_id().empty()) {
            const std::string& _s = this_._internal_order_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest.order_id");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // optional .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 8;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                8, this_._internal_time_in_force(), target);
          }

          // optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 9;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this_._internal_price_type(), target);
          }

          // bool confirm_margin_trade = 10;
          if (this_._internal_confirm_margin_trade() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_confirm_margin_trade(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PostOrderAsyncRequest::ByteSizeLong(const MessageLite& base) {
          const PostOrderAsyncRequest& this_ = static_cast<const PostOrderAsyncRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PostOrderAsyncRequest::ByteSizeLong() const {
          const PostOrderAsyncRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string instrument_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_instrument_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
            // string account_id = 5 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // string order_id = 7 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_order_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_id());
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
          }
           {
            // int64 quantity = 2 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 4 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_direction() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 6 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_order_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_order_type());
            }
          }
          if (cached_has_bits & 0x00000006u) {
            // optional .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 8;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_time_in_force());
            }
            // optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 9;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_price_type());
            }
          }
           {
            // bool confirm_margin_trade = 10;
            if (this_._internal_confirm_margin_trade() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PostOrderAsyncRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PostOrderAsyncRequest*>(&to_msg);
  auto& from = static_cast<const PostOrderAsyncRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.price_ != nullptr);
    if (_this->_impl_.price_ == nullptr) {
      _this->_impl_.price_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_);
    } else {
      _this->_impl_.price_->MergeFrom(*from._impl_.price_);
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  if (from._internal_order_type() != 0) {
    _this->_impl_.order_type_ = from._impl_.order_type_;
  }
  if (cached_has_bits & 0x00000006u) {
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.time_in_force_ = from._impl_.time_in_force_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.price_type_ = from._impl_.price_type_;
    }
  }
  if (from._internal_confirm_margin_trade() != 0) {
    _this->_impl_.confirm_margin_trade_ = from._impl_.confirm_margin_trade_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PostOrderAsyncRequest::CopyFrom(const PostOrderAsyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PostOrderAsyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PostOrderAsyncRequest::InternalSwap(PostOrderAsyncRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.confirm_margin_trade_)
      + sizeof(PostOrderAsyncRequest::_impl_.confirm_margin_trade_)
      - PROTOBUF_FIELD_OFFSET(PostOrderAsyncRequest, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata PostOrderAsyncRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PostOrderAsyncResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PostOrderAsyncResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PostOrderAsyncResponse, _impl_._has_bits_);
};

PostOrderAsyncResponse::PostOrderAsyncResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderAsyncResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        order_request_id_(arena, from.order_request_id_),
        trade_intent_id_(arena, from.trade_intent_id_) {}

PostOrderAsyncResponse::PostOrderAsyncResponse(
    ::google::protobuf::Arena* arena,
    const PostOrderAsyncResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PostOrderAsyncResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.execution_report_status_ = from._impl_.execution_report_status_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse)
}
inline PROTOBUF_NDEBUG_INLINE PostOrderAsyncResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        order_request_id_(arena),
        trade_intent_id_(arena) {}

inline void PostOrderAsyncResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.execution_report_status_ = {};
}
PostOrderAsyncResponse::~PostOrderAsyncResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse)
  SharedDtor(*this);
}
inline void PostOrderAsyncResponse::SharedDtor(MessageLite& self) {
  PostOrderAsyncResponse& this_ = static_cast<PostOrderAsyncResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.order_request_id_.Destroy();
  this_._impl_.trade_intent_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PostOrderAsyncResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PostOrderAsyncResponse(arena);
}
constexpr auto PostOrderAsyncResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PostOrderAsyncResponse),
                                            alignof(PostOrderAsyncResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PostOrderAsyncResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PostOrderAsyncResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PostOrderAsyncResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PostOrderAsyncResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PostOrderAsyncResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PostOrderAsyncResponse>(), &PostOrderAsyncResponse::ByteSizeLong,
            &PostOrderAsyncResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PostOrderAsyncResponse, _impl_._cached_size_),
        false,
    },
    &PostOrderAsyncResponse::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PostOrderAsyncResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 100, 2> PostOrderAsyncResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PostOrderAsyncResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::PostOrderAsyncResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string order_request_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncResponse, _impl_.order_request_id_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostOrderAsyncResponse, _impl_.execution_report_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncResponse, _impl_.execution_report_status_)}},
    // optional string trade_intent_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PostOrderAsyncResponse, _impl_.trade_intent_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string order_request_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncResponse, _impl_.order_request_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncResponse, _impl_.execution_report_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional string trade_intent_id = 3;
    {PROTOBUF_FIELD_OFFSET(PostOrderAsyncResponse, _impl_.trade_intent_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\74\20\0\17\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse"
    "order_request_id"
    "trade_intent_id"
  }},
};

PROTOBUF_NOINLINE void PostOrderAsyncResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_request_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.trade_intent_id_.ClearNonDefaultToEmpty();
  }
  _impl_.execution_report_status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PostOrderAsyncResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PostOrderAsyncResponse& this_ = static_cast<const PostOrderAsyncResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PostOrderAsyncResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PostOrderAsyncResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string order_request_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_order_request_id().empty()) {
            const std::string& _s = this_._internal_order_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.order_request_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_execution_report_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_execution_report_status(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string trade_intent_id = 3;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_trade_intent_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse.trade_intent_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PostOrderAsyncResponse::ByteSizeLong(const MessageLite& base) {
          const PostOrderAsyncResponse& this_ = static_cast<const PostOrderAsyncResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PostOrderAsyncResponse::ByteSizeLong() const {
          const PostOrderAsyncResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string order_request_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_order_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_request_id());
            }
          }
           {
            // optional string trade_intent_id = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_trade_intent_id());
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_execution_report_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_execution_report_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PostOrderAsyncResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PostOrderAsyncResponse*>(&to_msg);
  auto& from = static_cast<const PostOrderAsyncResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_order_request_id().empty()) {
    _this->_internal_set_order_request_id(from._internal_order_request_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_trade_intent_id(from._internal_trade_intent_id());
  }
  if (from._internal_execution_report_status() != 0) {
    _this->_impl_.execution_report_status_ = from._impl_.execution_report_status_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PostOrderAsyncResponse::CopyFrom(const PostOrderAsyncResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.PostOrderAsyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PostOrderAsyncResponse::InternalSwap(PostOrderAsyncResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_request_id_, &other->_impl_.order_request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_intent_id_, &other->_impl_.trade_intent_id_, arena);
  swap(_impl_.execution_report_status_, other->_impl_.execution_report_status_);
}

::google::protobuf::Metadata PostOrderAsyncResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelOrderRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CancelOrderRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_._has_bits_);
};

CancelOrderRequest::CancelOrderRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::CancelOrderRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_),
        order_id_(arena, from.order_id_) {}

CancelOrderRequest::CancelOrderRequest(
    ::google::protobuf::Arena* arena,
    const CancelOrderRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CancelOrderRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.order_id_type_ = from._impl_.order_id_type_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena),
        order_id_(arena) {}

inline void CancelOrderRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.order_id_type_ = {};
}
CancelOrderRequest::~CancelOrderRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
  SharedDtor(*this);
}
inline void CancelOrderRequest::SharedDtor(MessageLite& self) {
  CancelOrderRequest& this_ = static_cast<CancelOrderRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.order_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CancelOrderRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CancelOrderRequest(arena);
}
constexpr auto CancelOrderRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CancelOrderRequest),
                                            alignof(CancelOrderRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CancelOrderRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CancelOrderRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CancelOrderRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CancelOrderRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CancelOrderRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CancelOrderRequest>(), &CancelOrderRequest::ByteSizeLong,
            &CancelOrderRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_._cached_size_),
        false,
    },
    &CancelOrderRequest::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CancelOrderRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 83, 2> CancelOrderRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::CancelOrderRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_.account_id_)}},
    // string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_.order_id_)}},
    // optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CancelOrderRequest, _impl_.order_id_type_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_.order_id_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 3;
    {PROTOBUF_FIELD_OFFSET(CancelOrderRequest, _impl_.order_id_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\70\12\10\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.CancelOrderRequest"
    "account_id"
    "order_id"
  }},
};

PROTOBUF_NOINLINE void CancelOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.order_id_.ClearToEmpty();
  _impl_.order_id_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CancelOrderRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CancelOrderRequest& this_ = static_cast<const CancelOrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CancelOrderRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CancelOrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.CancelOrderRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_order_id().empty()) {
            const std::string& _s = this_._internal_order_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.CancelOrderRequest.order_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 3;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_order_id_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CancelOrderRequest::ByteSizeLong(const MessageLite& base) {
          const CancelOrderRequest& this_ = static_cast<const CancelOrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CancelOrderRequest::ByteSizeLong() const {
          const CancelOrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_order_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_id());
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_order_id_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CancelOrderRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelOrderRequest*>(&to_msg);
  auto& from = static_cast<const CancelOrderRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.order_id_type_ = from._impl_.order_id_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelOrderRequest::CopyFrom(const CancelOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.CancelOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelOrderRequest::InternalSwap(CancelOrderRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  swap(_impl_.order_id_type_, other->_impl_.order_id_type_);
}

::google::protobuf::Metadata CancelOrderRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelOrderResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CancelOrderResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_._has_bits_);
};

void CancelOrderResponse::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CancelOrderResponse::clear_response_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.response_metadata_ != nullptr) _impl_.response_metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CancelOrderResponse::CancelOrderResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
}
inline PROTOBUF_NDEBUG_INLINE CancelOrderResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::CancelOrderResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CancelOrderResponse::CancelOrderResponse(
    ::google::protobuf::Arena* arena,
    const CancelOrderResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CancelOrderResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  _impl_.response_metadata_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata>(
                              arena, *from._impl_.response_metadata_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
}
inline PROTOBUF_NDEBUG_INLINE CancelOrderResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CancelOrderResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, response_metadata_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::response_metadata_));
}
CancelOrderResponse::~CancelOrderResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
  SharedDtor(*this);
}
inline void CancelOrderResponse::SharedDtor(MessageLite& self) {
  CancelOrderResponse& this_ = static_cast<CancelOrderResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.time_;
  delete this_._impl_.response_metadata_;
  this_._impl_.~Impl_();
}

inline void* CancelOrderResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CancelOrderResponse(arena);
}
constexpr auto CancelOrderResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CancelOrderResponse),
                                            alignof(CancelOrderResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CancelOrderResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CancelOrderResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CancelOrderResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CancelOrderResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CancelOrderResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CancelOrderResponse>(), &CancelOrderResponse::ByteSizeLong,
            &CancelOrderResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_._cached_size_),
        false,
    },
    &CancelOrderResponse::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CancelOrderResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 7> CancelOrderResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_._has_bits_),
    0, // no _extensions_
    254, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::CancelOrderResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
    {::_pbi::TcParser::FastMtS2,
     {4082, 1, 1, PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_.response_metadata_)}},
    // .google.protobuf.Timestamp time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_.time_)}},
  }}, {{
    254, 0, 1,
    65534, 1,
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp time = 1;
    {PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
    {PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_.response_metadata_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CancelOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.response_metadata_ != nullptr);
      _impl_.response_metadata_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CancelOrderResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CancelOrderResponse& this_ = static_cast<const CancelOrderResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CancelOrderResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CancelOrderResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp time = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                254, *this_._impl_.response_metadata_, this_._impl_.response_metadata_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CancelOrderResponse::ByteSizeLong(const MessageLite& base) {
          const CancelOrderResponse& this_ = static_cast<const CancelOrderResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CancelOrderResponse::ByteSizeLong() const {
          const CancelOrderResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp time = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
            // .tinkoff.public.invest.api.contract.v1.ResponseMetadata response_metadata = 254;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_metadata_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CancelOrderResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelOrderResponse*>(&to_msg);
  auto& from = static_cast<const CancelOrderResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.response_metadata_ != nullptr);
      if (_this->_impl_.response_metadata_ == nullptr) {
        _this->_impl_.response_metadata_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::ResponseMetadata>(arena, *from._impl_.response_metadata_);
      } else {
        _this->_impl_.response_metadata_->MergeFrom(*from._impl_.response_metadata_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelOrderResponse::CopyFrom(const CancelOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.CancelOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelOrderResponse::InternalSwap(CancelOrderResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_.response_metadata_)
      + sizeof(CancelOrderResponse::_impl_.response_metadata_)
      - PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata CancelOrderResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetOrderStateRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetOrderStateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_._has_bits_);
};

GetOrderStateRequest::GetOrderStateRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderStateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetOrderStateRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_),
        order_id_(arena, from.order_id_) {}

GetOrderStateRequest::GetOrderStateRequest(
    ::google::protobuf::Arena* arena,
    const GetOrderStateRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetOrderStateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, price_type_),
           offsetof(Impl_, order_id_type_) -
               offsetof(Impl_, price_type_) +
               sizeof(Impl_::order_id_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderStateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena),
        order_id_(arena) {}

inline void GetOrderStateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_type_),
           0,
           offsetof(Impl_, order_id_type_) -
               offsetof(Impl_, price_type_) +
               sizeof(Impl_::order_id_type_));
}
GetOrderStateRequest::~GetOrderStateRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
  SharedDtor(*this);
}
inline void GetOrderStateRequest::SharedDtor(MessageLite& self) {
  GetOrderStateRequest& this_ = static_cast<GetOrderStateRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.order_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetOrderStateRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetOrderStateRequest(arena);
}
constexpr auto GetOrderStateRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetOrderStateRequest),
                                            alignof(GetOrderStateRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetOrderStateRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetOrderStateRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetOrderStateRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetOrderStateRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetOrderStateRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetOrderStateRequest>(), &GetOrderStateRequest::ByteSizeLong,
            &GetOrderStateRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_._cached_size_),
        false,
    },
    &GetOrderStateRequest::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetOrderStateRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 85, 2> GetOrderStateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetOrderStateRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetOrderStateRequest, _impl_.order_id_type_), 0>(),
     {32, 0, 0, PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.order_id_type_)}},
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.account_id_)}},
    // string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.order_id_)}},
    // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetOrderStateRequest, _impl_.price_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.price_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 3;
    {PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.price_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 4;
    {PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.order_id_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\72\12\10\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetOrderStateRequest"
    "account_id"
    "order_id"
  }},
};

PROTOBUF_NOINLINE void GetOrderStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.order_id_.ClearToEmpty();
  _impl_.price_type_ = 0;
  _impl_.order_id_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetOrderStateRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetOrderStateRequest& this_ = static_cast<const GetOrderStateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetOrderStateRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetOrderStateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_order_id().empty()) {
            const std::string& _s = this_._internal_order_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrderStateRequest.order_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 3;
          if (this_._internal_price_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_price_type(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 4;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_order_id_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetOrderStateRequest::ByteSizeLong(const MessageLite& base) {
          const GetOrderStateRequest& this_ = static_cast<const GetOrderStateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetOrderStateRequest::ByteSizeLong() const {
          const GetOrderStateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // string order_id = 2 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_order_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_id());
            }
            // .tinkoff.public.invest.api.contract.v1.PriceType price_type = 3;
            if (this_._internal_price_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_price_type());
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.OrderIdType order_id_type = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_order_id_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetOrderStateRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetOrderStateRequest*>(&to_msg);
  auto& from = static_cast<const GetOrderStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (from._internal_price_type() != 0) {
    _this->_impl_.price_type_ = from._impl_.price_type_;
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.order_id_type_ = from._impl_.order_id_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrderStateRequest::CopyFrom(const GetOrderStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrderStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetOrderStateRequest::InternalSwap(GetOrderStateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.order_id_type_)
      + sizeof(GetOrderStateRequest::_impl_.order_id_type_)
      - PROTOBUF_FIELD_OFFSET(GetOrderStateRequest, _impl_.price_type_)>(
          reinterpret_cast<char*>(&_impl_.price_type_),
          reinterpret_cast<char*>(&other->_impl_.price_type_));
}

::google::protobuf::Metadata GetOrderStateRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetOrdersRequest::_Internal {
 public:
};

GetOrdersRequest::GetOrdersRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrdersRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetOrdersRequest& from_msg)
      : account_id_(arena, from.account_id_),
        _cached_size_{0} {}

GetOrdersRequest::GetOrdersRequest(
    ::google::protobuf::Arena* arena,
    const GetOrdersRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetOrdersRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrdersRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : account_id_(arena),
        _cached_size_{0} {}

inline void GetOrdersRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetOrdersRequest::~GetOrdersRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
  SharedDtor(*this);
}
inline void GetOrdersRequest::SharedDtor(MessageLite& self) {
  GetOrdersRequest& this_ = static_cast<GetOrdersRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetOrdersRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetOrdersRequest(arena);
}
constexpr auto GetOrdersRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetOrdersRequest),
                                            alignof(GetOrdersRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetOrdersRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetOrdersRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetOrdersRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetOrdersRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetOrdersRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetOrdersRequest>(), &GetOrdersRequest::ByteSizeLong,
            &GetOrdersRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetOrdersRequest, _impl_._cached_size_),
        false,
    },
    &GetOrdersRequest::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetOrdersRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 73, 2> GetOrdersRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetOrdersRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrdersRequest, _impl_.account_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetOrdersRequest, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\12\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetOrdersRequest"
    "account_id"
  }},
};

PROTOBUF_NOINLINE void GetOrdersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetOrdersRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetOrdersRequest& this_ = static_cast<const GetOrdersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetOrdersRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetOrdersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrdersRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetOrdersRequest::ByteSizeLong(const MessageLite& base) {
          const GetOrdersRequest& this_ = static_cast<const GetOrdersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetOrdersRequest::ByteSizeLong() const {
          const GetOrdersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetOrdersRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetOrdersRequest*>(&to_msg);
  auto& from = static_cast<const GetOrdersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrdersRequest::CopyFrom(const GetOrdersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrdersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetOrdersRequest::InternalSwap(GetOrdersRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
}

::google::protobuf::Metadata GetOrdersRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetOrdersResponse::_Internal {
 public:
};

GetOrdersResponse::GetOrdersResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOrdersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetOrdersResponse& from_msg)
      : orders_{visibility, arena, from.orders_},
        _cached_size_{0} {}

GetOrdersResponse::GetOrdersResponse(
    ::google::protobuf::Arena* arena,
    const GetOrdersResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetOrdersResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOrdersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : orders_{visibility, arena},
        _cached_size_{0} {}

inline void GetOrdersResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetOrdersResponse::~GetOrdersResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
  SharedDtor(*this);
}
inline void GetOrdersResponse::SharedDtor(MessageLite& self) {
  GetOrdersResponse& this_ = static_cast<GetOrdersResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetOrdersResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetOrdersResponse(arena);
}
constexpr auto GetOrdersResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetOrdersResponse, _impl_.orders_) +
          decltype(GetOrdersResponse::_impl_.orders_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetOrdersResponse), alignof(GetOrdersResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetOrdersResponse::PlacementNew_,
                                 sizeof(GetOrdersResponse),
                                 alignof(GetOrdersResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetOrdersResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetOrdersResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetOrdersResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetOrdersResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetOrdersResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetOrdersResponse>(), &GetOrdersResponse::ByteSizeLong,
            &GetOrdersResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetOrdersResponse, _impl_._cached_size_),
        false,
    },
    &GetOrdersResponse::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetOrdersResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetOrdersResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetOrdersResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.OrderState orders = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrdersResponse, _impl_.orders_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.OrderState orders = 1;
    {PROTOBUF_FIELD_OFFSET(GetOrdersResponse, _impl_.orders_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderState>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetOrdersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orders_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetOrdersResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetOrdersResponse& this_ = static_cast<const GetOrdersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetOrdersResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetOrdersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.public.invest.api.contract.v1.OrderState orders = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_orders_size());
               i < n; i++) {
            const auto& repfield = this_._internal_orders().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetOrdersResponse::ByteSizeLong(const MessageLite& base) {
          const GetOrdersResponse& this_ = static_cast<const GetOrdersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetOrdersResponse::ByteSizeLong() const {
          const GetOrdersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.OrderState orders = 1;
            {
              total_size += 1UL * this_._internal_orders_size();
              for (const auto& msg : this_._internal_orders()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetOrdersResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetOrdersResponse*>(&to_msg);
  auto& from = static_cast<const GetOrdersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_orders()->MergeFrom(
      from._internal_orders());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrdersResponse::CopyFrom(const GetOrdersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrdersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetOrdersResponse::InternalSwap(GetOrdersResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.orders_.InternalSwap(&other->_impl_.orders_);
}

::google::protobuf::Metadata GetOrdersResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OrderState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderState, _impl_._has_bits_);
};

void OrderState::clear_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_order_price_ != nullptr) _impl_.initial_order_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OrderState::clear_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_order_price_ != nullptr) _impl_.executed_order_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OrderState::clear_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_order_amount_ != nullptr) _impl_.total_order_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void OrderState::clear_average_position_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.average_position_price_ != nullptr) _impl_.average_position_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void OrderState::clear_initial_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_commission_ != nullptr) _impl_.initial_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void OrderState::clear_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_commission_ != nullptr) _impl_.executed_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void OrderState::clear_initial_security_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_security_price_ != nullptr) _impl_.initial_security_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void OrderState::clear_service_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.service_commission_ != nullptr) _impl_.service_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void OrderState::clear_order_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.order_date_ != nullptr) _impl_.order_date_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
OrderState::OrderState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderState)
}
inline PROTOBUF_NDEBUG_INLINE OrderState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::OrderState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        stages_{visibility, arena, from.stages_},
        order_id_(arena, from.order_id_),
        figi_(arena, from.figi_),
        currency_(arena, from.currency_),
        instrument_uid_(arena, from.instrument_uid_),
        order_request_id_(arena, from.order_request_id_) {}

OrderState::OrderState(
    ::google::protobuf::Arena* arena,
    const OrderState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.initial_order_price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.initial_order_price_)
                        : nullptr;
  _impl_.executed_order_price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.executed_order_price_)
                        : nullptr;
  _impl_.total_order_amount_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_order_amount_)
                        : nullptr;
  _impl_.average_position_price_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.average_position_price_)
                        : nullptr;
  _impl_.initial_commission_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.initial_commission_)
                        : nullptr;
  _impl_.executed_commission_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.executed_commission_)
                        : nullptr;
  _impl_.initial_security_price_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.initial_security_price_)
                        : nullptr;
  _impl_.service_commission_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.service_commission_)
                        : nullptr;
  _impl_.order_date_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.order_date_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lots_requested_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lots_requested_),
           offsetof(Impl_, order_type_) -
               offsetof(Impl_, lots_requested_) +
               sizeof(Impl_::order_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderState)
}
inline PROTOBUF_NDEBUG_INLINE OrderState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        stages_{visibility, arena},
        order_id_(arena),
        figi_(arena),
        currency_(arena),
        instrument_uid_(arena),
        order_request_id_(arena) {}

inline void OrderState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, initial_order_price_),
           0,
           offsetof(Impl_, order_type_) -
               offsetof(Impl_, initial_order_price_) +
               sizeof(Impl_::order_type_));
}
OrderState::~OrderState() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderState)
  SharedDtor(*this);
}
inline void OrderState::SharedDtor(MessageLite& self) {
  OrderState& this_ = static_cast<OrderState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.order_id_.Destroy();
  this_._impl_.figi_.Destroy();
  this_._impl_.currency_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.order_request_id_.Destroy();
  delete this_._impl_.initial_order_price_;
  delete this_._impl_.executed_order_price_;
  delete this_._impl_.total_order_amount_;
  delete this_._impl_.average_position_price_;
  delete this_._impl_.initial_commission_;
  delete this_._impl_.executed_commission_;
  delete this_._impl_.initial_security_price_;
  delete this_._impl_.service_commission_;
  delete this_._impl_.order_date_;
  this_._impl_.~Impl_();
}

inline void* OrderState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderState(arena);
}
constexpr auto OrderState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderState, _impl_.stages_) +
          decltype(OrderState::_impl_.stages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OrderState), alignof(OrderState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderState::PlacementNew_,
                                 sizeof(OrderState),
                                 alignof(OrderState));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderState>(), &OrderState::ByteSizeLong,
            &OrderState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderState, _impl_._cached_size_),
        false,
    },
    &OrderState::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 20, 10, 123, 2> OrderState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderState, _impl_._has_bits_),
    0, // no _extensions_
    20, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293918720,  // skipmap
    offsetof(decltype(_table_), field_entries),
    20,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string order_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_id_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderState, _impl_.execution_report_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.execution_report_status_)}},
    // int64 lots_requested = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderState, _impl_.lots_requested_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.lots_requested_)}},
    // int64 lots_executed = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderState, _impl_.lots_executed_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.lots_executed_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_order_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.executed_order_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.total_order_amount_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.average_position_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.executed_commission_)}},
    // string figi = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderState, _impl_.direction_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.direction_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 6, 6, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_security_price_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderStage stages = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 7, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.stages_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 7, 8, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.service_commission_)}},
    // string currency = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.currency_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_type_)}},
    // .google.protobuf.Timestamp order_date = 18;
    {::_pbi::TcParser::FastMtS2,
     {402, 8, 9, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_date_)}},
    // string instrument_uid = 19;
    {::_pbi::TcParser::FastUS2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.instrument_uid_)}},
    // string order_request_id = 20;
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_request_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string order_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.execution_report_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 lots_requested = 3;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.lots_requested_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 lots_executed = 4;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.lots_executed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_order_price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.executed_order_price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.total_order_amount_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 8;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.average_position_price_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 9;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_commission_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 10;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.executed_commission_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string figi = 11;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_security_price_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderStage stages = 14;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.stages_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 15;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.service_commission_), _Internal::kHasBitsOffset + 7, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string currency = 16;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.currency_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 17;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp order_date = 18;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_date_), _Internal::kHasBitsOffset + 8, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string instrument_uid = 19;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_request_id = 20;
    {PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_request_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderStage>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\60\10\0\0\0\0\0\0\0\0\0\4\0\0\0\0\10\0\0\16\20\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OrderState"
    "order_id"
    "figi"
    "currency"
    "instrument_uid"
    "order_request_id"
  }},
};

PROTOBUF_NOINLINE void OrderState::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stages_.Clear();
  _impl_.order_id_.ClearToEmpty();
  _impl_.figi_.ClearToEmpty();
  _impl_.currency_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.order_request_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.initial_order_price_ != nullptr);
      _impl_.initial_order_price_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.executed_order_price_ != nullptr);
      _impl_.executed_order_price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.total_order_amount_ != nullptr);
      _impl_.total_order_amount_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.average_position_price_ != nullptr);
      _impl_.average_position_price_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.initial_commission_ != nullptr);
      _impl_.initial_commission_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.executed_commission_ != nullptr);
      _impl_.executed_commission_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.initial_security_price_ != nullptr);
      _impl_.initial_security_price_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.service_commission_ != nullptr);
      _impl_.service_commission_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(_impl_.order_date_ != nullptr);
    _impl_.order_date_->Clear();
  }
  ::memset(&_impl_.lots_requested_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.order_type_) -
      reinterpret_cast<char*>(&_impl_.lots_requested_)) + sizeof(_impl_.order_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderState& this_ = static_cast<const OrderState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string order_id = 1;
          if (!this_._internal_order_id().empty()) {
            const std::string& _s = this_._internal_order_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderState.order_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
          if (this_._internal_execution_report_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_execution_report_status(), target);
          }

          // int64 lots_requested = 3;
          if (this_._internal_lots_requested() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_lots_requested(), target);
          }

          // int64 lots_executed = 4;
          if (this_._internal_lots_executed() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_lots_executed(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.initial_order_price_, this_._impl_.initial_order_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.executed_order_price_, this_._impl_.executed_order_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.total_order_amount_, this_._impl_.total_order_amount_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 8;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.average_position_price_, this_._impl_.average_position_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 9;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.initial_commission_, this_._impl_.initial_commission_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 10;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.executed_commission_, this_._impl_.executed_commission_->GetCachedSize(), target,
                stream);
          }

          // string figi = 11;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderState.figi");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
          if (this_._internal_direction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                12, this_._internal_direction(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.initial_security_price_, this_._impl_.initial_security_price_->GetCachedSize(), target,
                stream);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.OrderStage stages = 14;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_stages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_stages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    14, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 15;
          if (cached_has_bits & 0x00000080u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.service_commission_, this_._impl_.service_commission_->GetCachedSize(), target,
                stream);
          }

          // string currency = 16;
          if (!this_._internal_currency().empty()) {
            const std::string& _s = this_._internal_currency();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderState.currency");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 17;
          if (this_._internal_order_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                17, this_._internal_order_type(), target);
          }

          // .google.protobuf.Timestamp order_date = 18;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                18, *this_._impl_.order_date_, this_._impl_.order_date_->GetCachedSize(), target,
                stream);
          }

          // string instrument_uid = 19;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderState.instrument_uid");
            target = stream->WriteStringMaybeAliased(19, _s, target);
          }

          // string order_request_id = 20;
          if (!this_._internal_order_request_id().empty()) {
            const std::string& _s = this_._internal_order_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderState.order_request_id");
            target = stream->WriteStringMaybeAliased(20, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderState::ByteSizeLong(const MessageLite& base) {
          const OrderState& this_ = static_cast<const OrderState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderState::ByteSizeLong() const {
          const OrderState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.OrderStage stages = 14;
            {
              total_size += 1UL * this_._internal_stages_size();
              for (const auto& msg : this_._internal_stages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string order_id = 1;
            if (!this_._internal_order_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_id());
            }
            // string figi = 11;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string currency = 16;
            if (!this_._internal_currency().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_currency());
            }
            // string instrument_uid = 19;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // string order_request_id = 20;
            if (!this_._internal_order_request_id().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_request_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_order_price_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 6;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.executed_order_price_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_order_amount_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue average_position_price = 8;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.average_position_price_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_commission = 9;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_commission_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 10;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.executed_commission_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_security_price = 13;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_security_price_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 15;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.service_commission_);
            }
          }
           {
            // .google.protobuf.Timestamp order_date = 18;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.order_date_);
            }
          }
           {
            // int64 lots_requested = 3;
            if (this_._internal_lots_requested() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_lots_requested());
            }
            // int64 lots_executed = 4;
            if (this_._internal_lots_executed() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_lots_executed());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 2;
            if (this_._internal_execution_report_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_execution_report_status());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
            if (this_._internal_direction() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 17;
            if (this_._internal_order_type() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_order_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderState*>(&to_msg);
  auto& from = static_cast<const OrderState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stages()->MergeFrom(
      from._internal_stages());
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_currency().empty()) {
    _this->_internal_set_currency(from._internal_currency());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_order_request_id().empty()) {
    _this->_internal_set_order_request_id(from._internal_order_request_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.initial_order_price_ != nullptr);
      if (_this->_impl_.initial_order_price_ == nullptr) {
        _this->_impl_.initial_order_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_order_price_);
      } else {
        _this->_impl_.initial_order_price_->MergeFrom(*from._impl_.initial_order_price_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.executed_order_price_ != nullptr);
      if (_this->_impl_.executed_order_price_ == nullptr) {
        _this->_impl_.executed_order_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.executed_order_price_);
      } else {
        _this->_impl_.executed_order_price_->MergeFrom(*from._impl_.executed_order_price_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.total_order_amount_ != nullptr);
      if (_this->_impl_.total_order_amount_ == nullptr) {
        _this->_impl_.total_order_amount_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_order_amount_);
      } else {
        _this->_impl_.total_order_amount_->MergeFrom(*from._impl_.total_order_amount_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.average_position_price_ != nullptr);
      if (_this->_impl_.average_position_price_ == nullptr) {
        _this->_impl_.average_position_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.average_position_price_);
      } else {
        _this->_impl_.average_position_price_->MergeFrom(*from._impl_.average_position_price_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.initial_commission_ != nullptr);
      if (_this->_impl_.initial_commission_ == nullptr) {
        _this->_impl_.initial_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_commission_);
      } else {
        _this->_impl_.initial_commission_->MergeFrom(*from._impl_.initial_commission_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.executed_commission_ != nullptr);
      if (_this->_impl_.executed_commission_ == nullptr) {
        _this->_impl_.executed_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.executed_commission_);
      } else {
        _this->_impl_.executed_commission_->MergeFrom(*from._impl_.executed_commission_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.initial_security_price_ != nullptr);
      if (_this->_impl_.initial_security_price_ == nullptr) {
        _this->_impl_.initial_security_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_security_price_);
      } else {
        _this->_impl_.initial_security_price_->MergeFrom(*from._impl_.initial_security_price_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.service_commission_ != nullptr);
      if (_this->_impl_.service_commission_ == nullptr) {
        _this->_impl_.service_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.service_commission_);
      } else {
        _this->_impl_.service_commission_->MergeFrom(*from._impl_.service_commission_);
      }
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(from._impl_.order_date_ != nullptr);
    if (_this->_impl_.order_date_ == nullptr) {
      _this->_impl_.order_date_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.order_date_);
    } else {
      _this->_impl_.order_date_->MergeFrom(*from._impl_.order_date_);
    }
  }
  if (from._internal_lots_requested() != 0) {
    _this->_impl_.lots_requested_ = from._impl_.lots_requested_;
  }
  if (from._internal_lots_executed() != 0) {
    _this->_impl_.lots_executed_ = from._impl_.lots_executed_;
  }
  if (from._internal_execution_report_status() != 0) {
    _this->_impl_.execution_report_status_ = from._impl_.execution_report_status_;
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  if (from._internal_order_type() != 0) {
    _this->_impl_.order_type_ = from._impl_.order_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderState::CopyFrom(const OrderState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderState::InternalSwap(OrderState* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stages_.InternalSwap(&other->_impl_.stages_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_request_id_, &other->_impl_.order_request_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderState, _impl_.order_type_)
      + sizeof(OrderState::_impl_.order_type_)
      - PROTOBUF_FIELD_OFFSET(OrderState, _impl_.initial_order_price_)>(
          reinterpret_cast<char*>(&_impl_.initial_order_price_),
          reinterpret_cast<char*>(&other->_impl_.initial_order_price_));
}

::google::protobuf::Metadata OrderState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderStage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OrderStage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderStage, _impl_._has_bits_);
};

void OrderStage::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OrderStage::clear_execution_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.execution_time_ != nullptr) _impl_.execution_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
OrderStage::OrderStage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderStage)
}
inline PROTOBUF_NDEBUG_INLINE OrderStage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::OrderStage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trade_id_(arena, from.trade_id_) {}

OrderStage::OrderStage(
    ::google::protobuf::Arena* arena,
    const OrderStage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderStage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.price_)
                        : nullptr;
  _impl_.execution_time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.execution_time_)
                        : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderStage)
}
inline PROTOBUF_NDEBUG_INLINE OrderStage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trade_id_(arena) {}

inline void OrderStage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::quantity_));
}
OrderStage::~OrderStage() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderStage)
  SharedDtor(*this);
}
inline void OrderStage::SharedDtor(MessageLite& self) {
  OrderStage& this_ = static_cast<OrderStage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.trade_id_.Destroy();
  delete this_._impl_.price_;
  delete this_._impl_.execution_time_;
  this_._impl_.~Impl_();
}

inline void* OrderStage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderStage(arena);
}
constexpr auto OrderStage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderStage),
                                            alignof(OrderStage));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderStage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderStage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderStage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderStage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderStage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderStage>(), &OrderStage::ByteSizeLong,
            &OrderStage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderStage, _impl_._cached_size_),
        false,
    },
    &OrderStage::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderStage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 2, 65, 2> OrderStage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderStage, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderStage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.price_)}},
    // int64 quantity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderStage, _impl_.quantity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.quantity_)}},
    // string trade_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.trade_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp execution_time = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.execution_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 1;
    {PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 2;
    {PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string trade_id = 3;
    {PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.trade_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp execution_time = 5;
    {PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.execution_time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\60\0\0\10\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OrderStage"
    "trade_id"
  }},
};

PROTOBUF_NOINLINE void OrderStage::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderStage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trade_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.execution_time_ != nullptr);
      _impl_.execution_time_->Clear();
    }
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderStage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderStage& this_ = static_cast<const OrderStage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderStage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderStage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderStage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // int64 quantity = 2;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_quantity(), target);
          }

          // string trade_id = 3;
          if (!this_._internal_trade_id().empty()) {
            const std::string& _s = this_._internal_trade_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStage.trade_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .google.protobuf.Timestamp execution_time = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.execution_time_, this_._impl_.execution_time_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderStage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderStage::ByteSizeLong(const MessageLite& base) {
          const OrderStage& this_ = static_cast<const OrderStage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderStage::ByteSizeLong() const {
          const OrderStage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderStage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string trade_id = 3;
            if (!this_._internal_trade_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_trade_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tinkoff.public.invest.api.contract.v1.MoneyValue price = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
            // .google.protobuf.Timestamp execution_time = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.execution_time_);
            }
          }
           {
            // int64 quantity = 2;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderStage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderStage*>(&to_msg);
  auto& from = static_cast<const OrderStage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderStage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trade_id().empty()) {
    _this->_internal_set_trade_id(from._internal_trade_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.execution_time_ != nullptr);
      if (_this->_impl_.execution_time_ == nullptr) {
        _this->_impl_.execution_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.execution_time_);
      } else {
        _this->_impl_.execution_time_->MergeFrom(*from._impl_.execution_time_);
      }
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderStage::CopyFrom(const OrderStage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderStage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderStage::InternalSwap(OrderStage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_id_, &other->_impl_.trade_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.quantity_)
      + sizeof(OrderStage::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(OrderStage, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata OrderStage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReplaceOrderRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ReplaceOrderRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_._has_bits_);
};

void ReplaceOrderRequest::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ReplaceOrderRequest::ReplaceOrderRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReplaceOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_),
        order_id_(arena, from.order_id_),
        idempotency_key_(arena, from.idempotency_key_) {}

ReplaceOrderRequest::ReplaceOrderRequest(
    ::google::protobuf::Arena* arena,
    const ReplaceOrderRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReplaceOrderRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.price_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, confirm_margin_trade_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::confirm_margin_trade_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReplaceOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena),
        order_id_(arena),
        idempotency_key_(arena) {}

inline void ReplaceOrderRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, confirm_margin_trade_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::confirm_margin_trade_));
}
ReplaceOrderRequest::~ReplaceOrderRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
  SharedDtor(*this);
}
inline void ReplaceOrderRequest::SharedDtor(MessageLite& self) {
  ReplaceOrderRequest& this_ = static_cast<ReplaceOrderRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.order_id_.Destroy();
  this_._impl_.idempotency_key_.Destroy();
  delete this_._impl_.price_;
  this_._impl_.~Impl_();
}

inline void* ReplaceOrderRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReplaceOrderRequest(arena);
}
constexpr auto ReplaceOrderRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReplaceOrderRequest),
                                            alignof(ReplaceOrderRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReplaceOrderRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReplaceOrderRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReplaceOrderRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReplaceOrderRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReplaceOrderRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReplaceOrderRequest>(), &ReplaceOrderRequest::ByteSizeLong,
            &ReplaceOrderRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_._cached_size_),
        false,
    },
    &ReplaceOrderRequest::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReplaceOrderRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 99, 2> ReplaceOrderRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_._has_bits_),
    0, // no _extensions_
    14, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294951838,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::ReplaceOrderRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.account_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 quantity = 11 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReplaceOrderRequest, _impl_.quantity_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.quantity_)}},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 0, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.price_)}},
    // optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReplaceOrderRequest, _impl_.price_type_), 1>(),
     {104, 1, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.price_type_)}},
    // string order_id = 6 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.order_id_)}},
    // string idempotency_key = 7 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.idempotency_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_id = 6 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string idempotency_key = 7 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.idempotency_key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 quantity = 11 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 12;
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 13;
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.price_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool confirm_margin_trade = 14;
    {PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.confirm_margin_trade_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\71\12\10\17\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest"
    "account_id"
    "order_id"
    "idempotency_key"
  }},
};

PROTOBUF_NOINLINE void ReplaceOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.order_id_.ClearToEmpty();
  _impl_.idempotency_key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.price_ != nullptr);
    _impl_.price_->Clear();
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_.price_type_ = 0;
  _impl_.confirm_margin_trade_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReplaceOrderRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReplaceOrderRequest& this_ = static_cast<const ReplaceOrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReplaceOrderRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReplaceOrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string order_id = 6 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_order_id().empty()) {
            const std::string& _s = this_._internal_order_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.order_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string idempotency_key = 7 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_idempotency_key().empty()) {
            const std::string& _s = this_._internal_idempotency_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest.idempotency_key");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // int64 quantity = 11 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<11>(
                    stream, this_._internal_quantity(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 12;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 13;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                13, this_._internal_price_type(), target);
          }

          // bool confirm_margin_trade = 14;
          if (this_._internal_confirm_margin_trade() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                14, this_._internal_confirm_margin_trade(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReplaceOrderRequest::ByteSizeLong(const MessageLite& base) {
          const ReplaceOrderRequest& this_ = static_cast<const ReplaceOrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReplaceOrderRequest::ByteSizeLong() const {
          const ReplaceOrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // string order_id = 6 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_order_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_id());
            }
            // string idempotency_key = 7 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_idempotency_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_idempotency_key());
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 12;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
          }
           {
            // int64 quantity = 11 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.PriceType price_type = 13;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_price_type());
            }
          }
           {
            // bool confirm_margin_trade = 14;
            if (this_._internal_confirm_margin_trade() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReplaceOrderRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReplaceOrderRequest*>(&to_msg);
  auto& from = static_cast<const ReplaceOrderRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (!from._internal_idempotency_key().empty()) {
    _this->_internal_set_idempotency_key(from._internal_idempotency_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.price_ != nullptr);
    if (_this->_impl_.price_ == nullptr) {
      _this->_impl_.price_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_);
    } else {
      _this->_impl_.price_->MergeFrom(*from._impl_.price_);
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  if (cached_has_bits & 0x00000002u) {
    _this->_impl_.price_type_ = from._impl_.price_type_;
  }
  if (from._internal_confirm_margin_trade() != 0) {
    _this->_impl_.confirm_margin_trade_ = from._impl_.confirm_margin_trade_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReplaceOrderRequest::CopyFrom(const ReplaceOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.ReplaceOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReplaceOrderRequest::InternalSwap(ReplaceOrderRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.idempotency_key_, &other->_impl_.idempotency_key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.confirm_margin_trade_)
      + sizeof(ReplaceOrderRequest::_impl_.confirm_margin_trade_)
      - PROTOBUF_FIELD_OFFSET(ReplaceOrderRequest, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata ReplaceOrderRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetMaxLotsRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetMaxLotsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetMaxLotsRequest, _impl_._has_bits_);
};

void GetMaxLotsRequest::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetMaxLotsRequest::GetMaxLotsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetMaxLotsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_),
        instrument_id_(arena, from.instrument_id_) {}

GetMaxLotsRequest::GetMaxLotsRequest(
    ::google::protobuf::Arena* arena,
    const GetMaxLotsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetMaxLotsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.price_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetMaxLotsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena),
        instrument_id_(arena) {}

inline void GetMaxLotsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.price_ = {};
}
GetMaxLotsRequest::~GetMaxLotsRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest)
  SharedDtor(*this);
}
inline void GetMaxLotsRequest::SharedDtor(MessageLite& self) {
  GetMaxLotsRequest& this_ = static_cast<GetMaxLotsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  delete this_._impl_.price_;
  this_._impl_.~Impl_();
}

inline void* GetMaxLotsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetMaxLotsRequest(arena);
}
constexpr auto GetMaxLotsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetMaxLotsRequest),
                                            alignof(GetMaxLotsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetMaxLotsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetMaxLotsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetMaxLotsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetMaxLotsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetMaxLotsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetMaxLotsRequest>(), &GetMaxLotsRequest::ByteSizeLong,
            &GetMaxLotsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetMaxLotsRequest, _impl_._cached_size_),
        false,
    },
    &GetMaxLotsRequest::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetMaxLotsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 87, 2> GetMaxLotsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetMaxLotsRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetMaxLotsRequest, _impl_.account_id_)}},
    // string instrument_id = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetMaxLotsRequest, _impl_.instrument_id_)}},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(GetMaxLotsRequest, _impl_.price_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_id = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsRequest, _impl_.instrument_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsRequest, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\67\12\15\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest"
    "account_id"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void GetMaxLotsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.instrument_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.price_ != nullptr);
    _impl_.price_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetMaxLotsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetMaxLotsRequest& this_ = static_cast<const GetMaxLotsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetMaxLotsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetMaxLotsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string instrument_id = 2 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_instrument_id().empty()) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest.instrument_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetMaxLotsRequest::ByteSizeLong(const MessageLite& base) {
          const GetMaxLotsRequest& this_ = static_cast<const GetMaxLotsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetMaxLotsRequest::ByteSizeLong() const {
          const GetMaxLotsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account_id = 1 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // string instrument_id = 2 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_instrument_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetMaxLotsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetMaxLotsRequest*>(&to_msg);
  auto& from = static_cast<const GetMaxLotsRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.price_ != nullptr);
    if (_this->_impl_.price_ == nullptr) {
      _this->_impl_.price_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_);
    } else {
      _this->_impl_.price_->MergeFrom(*from._impl_.price_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetMaxLotsRequest::CopyFrom(const GetMaxLotsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetMaxLotsRequest::InternalSwap(GetMaxLotsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
  swap(_impl_.price_, other->_impl_.price_);
}

::google::protobuf::Metadata GetMaxLotsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetMaxLotsResponse_BuyLimitsView::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetMaxLotsResponse_BuyLimitsView>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_BuyLimitsView, _impl_._has_bits_);
};

void GetMaxLotsResponse_BuyLimitsView::clear_buy_money_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.buy_money_amount_ != nullptr) _impl_.buy_money_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetMaxLotsResponse_BuyLimitsView::GetMaxLotsResponse_BuyLimitsView(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView)
}
inline PROTOBUF_NDEBUG_INLINE GetMaxLotsResponse_BuyLimitsView::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetMaxLotsResponse_BuyLimitsView::GetMaxLotsResponse_BuyLimitsView(
    ::google::protobuf::Arena* arena,
    const GetMaxLotsResponse_BuyLimitsView& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetMaxLotsResponse_BuyLimitsView* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.buy_money_amount_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.buy_money_amount_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buy_max_lots_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, buy_max_lots_),
           offsetof(Impl_, buy_max_market_lots_) -
               offsetof(Impl_, buy_max_lots_) +
               sizeof(Impl_::buy_max_market_lots_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView)
}
inline PROTOBUF_NDEBUG_INLINE GetMaxLotsResponse_BuyLimitsView::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetMaxLotsResponse_BuyLimitsView::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buy_money_amount_),
           0,
           offsetof(Impl_, buy_max_market_lots_) -
               offsetof(Impl_, buy_money_amount_) +
               sizeof(Impl_::buy_max_market_lots_));
}
GetMaxLotsResponse_BuyLimitsView::~GetMaxLotsResponse_BuyLimitsView() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView)
  SharedDtor(*this);
}
inline void GetMaxLotsResponse_BuyLimitsView::SharedDtor(MessageLite& self) {
  GetMaxLotsResponse_BuyLimitsView& this_ = static_cast<GetMaxLotsResponse_BuyLimitsView&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.buy_money_amount_;
  this_._impl_.~Impl_();
}

inline void* GetMaxLotsResponse_BuyLimitsView::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetMaxLotsResponse_BuyLimitsView(arena);
}
constexpr auto GetMaxLotsResponse_BuyLimitsView::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetMaxLotsResponse_BuyLimitsView),
                                            alignof(GetMaxLotsResponse_BuyLimitsView));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetMaxLotsResponse_BuyLimitsView::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetMaxLotsResponse_BuyLimitsView_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetMaxLotsResponse_BuyLimitsView::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetMaxLotsResponse_BuyLimitsView>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetMaxLotsResponse_BuyLimitsView::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetMaxLotsResponse_BuyLimitsView>(), &GetMaxLotsResponse_BuyLimitsView::ByteSizeLong,
            &GetMaxLotsResponse_BuyLimitsView::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_BuyLimitsView, _impl_._cached_size_),
        false,
    },
    &GetMaxLotsResponse_BuyLimitsView::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetMaxLotsResponse_BuyLimitsView::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> GetMaxLotsResponse_BuyLimitsView::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_BuyLimitsView, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.Quotation buy_money_amount = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_BuyLimitsView, _impl_.buy_money_amount_)}},
    // int64 buy_max_lots = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetMaxLotsResponse_BuyLimitsView, _impl_.buy_max_lots_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_BuyLimitsView, _impl_.buy_max_lots_)}},
    // int64 buy_max_market_lots = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetMaxLotsResponse_BuyLimitsView, _impl_.buy_max_market_lots_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_BuyLimitsView, _impl_.buy_max_market_lots_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.Quotation buy_money_amount = 1;
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_BuyLimitsView, _impl_.buy_money_amount_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 buy_max_lots = 2;
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_BuyLimitsView, _impl_.buy_max_lots_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 buy_max_market_lots = 3;
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_BuyLimitsView, _impl_.buy_max_market_lots_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetMaxLotsResponse_BuyLimitsView::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.buy_money_amount_ != nullptr);
    _impl_.buy_money_amount_->Clear();
  }
  ::memset(&_impl_.buy_max_lots_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.buy_max_market_lots_) -
      reinterpret_cast<char*>(&_impl_.buy_max_lots_)) + sizeof(_impl_.buy_max_market_lots_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetMaxLotsResponse_BuyLimitsView::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetMaxLotsResponse_BuyLimitsView& this_ = static_cast<const GetMaxLotsResponse_BuyLimitsView&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetMaxLotsResponse_BuyLimitsView::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetMaxLotsResponse_BuyLimitsView& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.Quotation buy_money_amount = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.buy_money_amount_, this_._impl_.buy_money_amount_->GetCachedSize(), target,
                stream);
          }

          // int64 buy_max_lots = 2;
          if (this_._internal_buy_max_lots() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_buy_max_lots(), target);
          }

          // int64 buy_max_market_lots = 3;
          if (this_._internal_buy_max_market_lots() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_buy_max_market_lots(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetMaxLotsResponse_BuyLimitsView::ByteSizeLong(const MessageLite& base) {
          const GetMaxLotsResponse_BuyLimitsView& this_ = static_cast<const GetMaxLotsResponse_BuyLimitsView&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetMaxLotsResponse_BuyLimitsView::ByteSizeLong() const {
          const GetMaxLotsResponse_BuyLimitsView& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .tinkoff.public.invest.api.contract.v1.Quotation buy_money_amount = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.buy_money_amount_);
            }
          }
           {
            // int64 buy_max_lots = 2;
            if (this_._internal_buy_max_lots() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_buy_max_lots());
            }
            // int64 buy_max_market_lots = 3;
            if (this_._internal_buy_max_market_lots() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_buy_max_market_lots());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetMaxLotsResponse_BuyLimitsView::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetMaxLotsResponse_BuyLimitsView*>(&to_msg);
  auto& from = static_cast<const GetMaxLotsResponse_BuyLimitsView&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.buy_money_amount_ != nullptr);
    if (_this->_impl_.buy_money_amount_ == nullptr) {
      _this->_impl_.buy_money_amount_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.buy_money_amount_);
    } else {
      _this->_impl_.buy_money_amount_->MergeFrom(*from._impl_.buy_money_amount_);
    }
  }
  if (from._internal_buy_max_lots() != 0) {
    _this->_impl_.buy_max_lots_ = from._impl_.buy_max_lots_;
  }
  if (from._internal_buy_max_market_lots() != 0) {
    _this->_impl_.buy_max_market_lots_ = from._impl_.buy_max_market_lots_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetMaxLotsResponse_BuyLimitsView::CopyFrom(const GetMaxLotsResponse_BuyLimitsView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetMaxLotsResponse_BuyLimitsView::InternalSwap(GetMaxLotsResponse_BuyLimitsView* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_BuyLimitsView, _impl_.buy_max_market_lots_)
      + sizeof(GetMaxLotsResponse_BuyLimitsView::_impl_.buy_max_market_lots_)
      - PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_BuyLimitsView, _impl_.buy_money_amount_)>(
          reinterpret_cast<char*>(&_impl_.buy_money_amount_),
          reinterpret_cast<char*>(&other->_impl_.buy_money_amount_));
}

::google::protobuf::Metadata GetMaxLotsResponse_BuyLimitsView::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetMaxLotsResponse_SellLimitsView::_Internal {
 public:
};

GetMaxLotsResponse_SellLimitsView::GetMaxLotsResponse_SellLimitsView(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView)
}
GetMaxLotsResponse_SellLimitsView::GetMaxLotsResponse_SellLimitsView(
    ::google::protobuf::Arena* arena, const GetMaxLotsResponse_SellLimitsView& from)
    : GetMaxLotsResponse_SellLimitsView(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetMaxLotsResponse_SellLimitsView::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetMaxLotsResponse_SellLimitsView::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sell_max_lots_ = {};
}
GetMaxLotsResponse_SellLimitsView::~GetMaxLotsResponse_SellLimitsView() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView)
  SharedDtor(*this);
}
inline void GetMaxLotsResponse_SellLimitsView::SharedDtor(MessageLite& self) {
  GetMaxLotsResponse_SellLimitsView& this_ = static_cast<GetMaxLotsResponse_SellLimitsView&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetMaxLotsResponse_SellLimitsView::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetMaxLotsResponse_SellLimitsView(arena);
}
constexpr auto GetMaxLotsResponse_SellLimitsView::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetMaxLotsResponse_SellLimitsView),
                                            alignof(GetMaxLotsResponse_SellLimitsView));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetMaxLotsResponse_SellLimitsView::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetMaxLotsResponse_SellLimitsView_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetMaxLotsResponse_SellLimitsView::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetMaxLotsResponse_SellLimitsView>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetMaxLotsResponse_SellLimitsView::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetMaxLotsResponse_SellLimitsView>(), &GetMaxLotsResponse_SellLimitsView::ByteSizeLong,
            &GetMaxLotsResponse_SellLimitsView::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_SellLimitsView, _impl_._cached_size_),
        false,
    },
    &GetMaxLotsResponse_SellLimitsView::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetMaxLotsResponse_SellLimitsView::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetMaxLotsResponse_SellLimitsView::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 sell_max_lots = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetMaxLotsResponse_SellLimitsView, _impl_.sell_max_lots_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_SellLimitsView, _impl_.sell_max_lots_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 sell_max_lots = 1;
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse_SellLimitsView, _impl_.sell_max_lots_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GetMaxLotsResponse_SellLimitsView::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sell_max_lots_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetMaxLotsResponse_SellLimitsView::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetMaxLotsResponse_SellLimitsView& this_ = static_cast<const GetMaxLotsResponse_SellLimitsView&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetMaxLotsResponse_SellLimitsView::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetMaxLotsResponse_SellLimitsView& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 sell_max_lots = 1;
          if (this_._internal_sell_max_lots() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_sell_max_lots(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetMaxLotsResponse_SellLimitsView::ByteSizeLong(const MessageLite& base) {
          const GetMaxLotsResponse_SellLimitsView& this_ = static_cast<const GetMaxLotsResponse_SellLimitsView&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetMaxLotsResponse_SellLimitsView::ByteSizeLong() const {
          const GetMaxLotsResponse_SellLimitsView& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int64 sell_max_lots = 1;
            if (this_._internal_sell_max_lots() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_sell_max_lots());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetMaxLotsResponse_SellLimitsView::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetMaxLotsResponse_SellLimitsView*>(&to_msg);
  auto& from = static_cast<const GetMaxLotsResponse_SellLimitsView&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sell_max_lots() != 0) {
    _this->_impl_.sell_max_lots_ = from._impl_.sell_max_lots_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetMaxLotsResponse_SellLimitsView::CopyFrom(const GetMaxLotsResponse_SellLimitsView& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetMaxLotsResponse_SellLimitsView::InternalSwap(GetMaxLotsResponse_SellLimitsView* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.sell_max_lots_, other->_impl_.sell_max_lots_);
}

::google::protobuf::Metadata GetMaxLotsResponse_SellLimitsView::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetMaxLotsResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetMaxLotsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_._has_bits_);
};

GetMaxLotsResponse::GetMaxLotsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetMaxLotsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        currency_(arena, from.currency_) {}

GetMaxLotsResponse::GetMaxLotsResponse(
    ::google::protobuf::Arena* arena,
    const GetMaxLotsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetMaxLotsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.buy_limits_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView>(
                              arena, *from._impl_.buy_limits_)
                        : nullptr;
  _impl_.buy_margin_limits_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView>(
                              arena, *from._impl_.buy_margin_limits_)
                        : nullptr;
  _impl_.sell_limits_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView>(
                              arena, *from._impl_.sell_limits_)
                        : nullptr;
  _impl_.sell_margin_limits_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView>(
                              arena, *from._impl_.sell_margin_limits_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetMaxLotsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        currency_(arena) {}

inline void GetMaxLotsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buy_limits_),
           0,
           offsetof(Impl_, sell_margin_limits_) -
               offsetof(Impl_, buy_limits_) +
               sizeof(Impl_::sell_margin_limits_));
}
GetMaxLotsResponse::~GetMaxLotsResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse)
  SharedDtor(*this);
}
inline void GetMaxLotsResponse::SharedDtor(MessageLite& self) {
  GetMaxLotsResponse& this_ = static_cast<GetMaxLotsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.currency_.Destroy();
  delete this_._impl_.buy_limits_;
  delete this_._impl_.buy_margin_limits_;
  delete this_._impl_.sell_limits_;
  delete this_._impl_.sell_margin_limits_;
  this_._impl_.~Impl_();
}

inline void* GetMaxLotsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetMaxLotsResponse(arena);
}
constexpr auto GetMaxLotsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetMaxLotsResponse),
                                            alignof(GetMaxLotsResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetMaxLotsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetMaxLotsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetMaxLotsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetMaxLotsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetMaxLotsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetMaxLotsResponse>(), &GetMaxLotsResponse::ByteSizeLong,
            &GetMaxLotsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_._cached_size_),
        false,
    },
    &GetMaxLotsResponse::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetMaxLotsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 73, 2> GetMaxLotsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string currency = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.currency_)}},
    // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_limits = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.buy_limits_)}},
    // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_margin_limits = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.buy_margin_limits_)}},
    // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_limits = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.sell_limits_)}},
    // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_margin_limits = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.sell_margin_limits_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string currency = 1;
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.currency_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_limits = 2;
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.buy_limits_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_margin_limits = 3;
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.buy_margin_limits_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_limits = 4;
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.sell_limits_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_margin_limits = 5;
    {PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.sell_margin_limits_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView>()},
  }}, {{
    "\70\10\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse"
    "currency"
  }},
};

PROTOBUF_NOINLINE void GetMaxLotsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.currency_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.buy_limits_ != nullptr);
      _impl_.buy_limits_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.buy_margin_limits_ != nullptr);
      _impl_.buy_margin_limits_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.sell_limits_ != nullptr);
      _impl_.sell_limits_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.sell_margin_limits_ != nullptr);
      _impl_.sell_margin_limits_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetMaxLotsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetMaxLotsResponse& this_ = static_cast<const GetMaxLotsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetMaxLotsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetMaxLotsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string currency = 1;
          if (!this_._internal_currency().empty()) {
            const std::string& _s = this_._internal_currency();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.currency");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_limits = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.buy_limits_, this_._impl_.buy_limits_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_margin_limits = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.buy_margin_limits_, this_._impl_.buy_margin_limits_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_limits = 4;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.sell_limits_, this_._impl_.sell_limits_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_margin_limits = 5;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.sell_margin_limits_, this_._impl_.sell_margin_limits_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetMaxLotsResponse::ByteSizeLong(const MessageLite& base) {
          const GetMaxLotsResponse& this_ = static_cast<const GetMaxLotsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetMaxLotsResponse::ByteSizeLong() const {
          const GetMaxLotsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string currency = 1;
            if (!this_._internal_currency().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_currency());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_limits = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.buy_limits_);
            }
            // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.BuyLimitsView buy_margin_limits = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.buy_margin_limits_);
            }
            // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_limits = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sell_limits_);
            }
            // .tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse.SellLimitsView sell_margin_limits = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.sell_margin_limits_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetMaxLotsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetMaxLotsResponse*>(&to_msg);
  auto& from = static_cast<const GetMaxLotsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_currency().empty()) {
    _this->_internal_set_currency(from._internal_currency());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.buy_limits_ != nullptr);
      if (_this->_impl_.buy_limits_ == nullptr) {
        _this->_impl_.buy_limits_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView>(arena, *from._impl_.buy_limits_);
      } else {
        _this->_impl_.buy_limits_->MergeFrom(*from._impl_.buy_limits_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.buy_margin_limits_ != nullptr);
      if (_this->_impl_.buy_margin_limits_ == nullptr) {
        _this->_impl_.buy_margin_limits_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_BuyLimitsView>(arena, *from._impl_.buy_margin_limits_);
      } else {
        _this->_impl_.buy_margin_limits_->MergeFrom(*from._impl_.buy_margin_limits_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.sell_limits_ != nullptr);
      if (_this->_impl_.sell_limits_ == nullptr) {
        _this->_impl_.sell_limits_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView>(arena, *from._impl_.sell_limits_);
      } else {
        _this->_impl_.sell_limits_->MergeFrom(*from._impl_.sell_limits_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.sell_margin_limits_ != nullptr);
      if (_this->_impl_.sell_margin_limits_ == nullptr) {
        _this->_impl_.sell_margin_limits_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetMaxLotsResponse_SellLimitsView>(arena, *from._impl_.sell_margin_limits_);
      } else {
        _this->_impl_.sell_margin_limits_->MergeFrom(*from._impl_.sell_margin_limits_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetMaxLotsResponse::CopyFrom(const GetMaxLotsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetMaxLotsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetMaxLotsResponse::InternalSwap(GetMaxLotsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.sell_margin_limits_)
      + sizeof(GetMaxLotsResponse::_impl_.sell_margin_limits_)
      - PROTOBUF_FIELD_OFFSET(GetMaxLotsResponse, _impl_.buy_limits_)>(
          reinterpret_cast<char*>(&_impl_.buy_limits_),
          reinterpret_cast<char*>(&other->_impl_.buy_limits_));
}

::google::protobuf::Metadata GetMaxLotsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetOrderPriceRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetOrderPriceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_._has_bits_);
};

void GetOrderPriceRequest::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetOrderPriceRequest::GetOrderPriceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderPriceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_),
        instrument_id_(arena, from.instrument_id_) {}

GetOrderPriceRequest::GetOrderPriceRequest(
    ::google::protobuf::Arena* arena,
    const GetOrderPriceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetOrderPriceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.price_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, direction_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::direction_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderPriceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_id_(arena),
        instrument_id_(arena) {}

inline void GetOrderPriceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::direction_));
}
GetOrderPriceRequest::~GetOrderPriceRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest)
  SharedDtor(*this);
}
inline void GetOrderPriceRequest::SharedDtor(MessageLite& self) {
  GetOrderPriceRequest& this_ = static_cast<GetOrderPriceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  delete this_._impl_.price_;
  this_._impl_.~Impl_();
}

inline void* GetOrderPriceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetOrderPriceRequest(arena);
}
constexpr auto GetOrderPriceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetOrderPriceRequest),
                                            alignof(GetOrderPriceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetOrderPriceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetOrderPriceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetOrderPriceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetOrderPriceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetOrderPriceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetOrderPriceRequest>(), &GetOrderPriceRequest::ByteSizeLong,
            &GetOrderPriceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_._cached_size_),
        false,
    },
    &GetOrderPriceRequest::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetOrderPriceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 90, 2> GetOrderPriceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_._has_bits_),
    0, // no _extensions_
    13, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294961144,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.account_id_)}},
    // string instrument_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.instrument_id_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.price_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetOrderPriceRequest, _impl_.direction_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.direction_)}},
    // int64 quantity = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetOrderPriceRequest, _impl_.quantity_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.quantity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_id = 2;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.instrument_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 quantity = 13;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\72\12\15\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest"
    "account_id"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void GetOrderPriceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_id_.ClearToEmpty();
  _impl_.instrument_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.price_ != nullptr);
    _impl_.price_->Clear();
  }
  ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.direction_) -
      reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.direction_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetOrderPriceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetOrderPriceRequest& this_ = static_cast<const GetOrderPriceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetOrderPriceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetOrderPriceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string account_id = 1;
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.account_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string instrument_id = 2;
          if (!this_._internal_instrument_id().empty()) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest.instrument_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
          if (this_._internal_direction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                12, this_._internal_direction(), target);
          }

          // int64 quantity = 13;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<13>(
                    stream, this_._internal_quantity(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetOrderPriceRequest::ByteSizeLong(const MessageLite& base) {
          const GetOrderPriceRequest& this_ = static_cast<const GetOrderPriceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetOrderPriceRequest::ByteSizeLong() const {
          const GetOrderPriceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account_id = 1;
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // string instrument_id = 2;
            if (!this_._internal_instrument_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
          }
           {
            // int64 quantity = 13;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 12;
            if (this_._internal_direction() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetOrderPriceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetOrderPriceRequest*>(&to_msg);
  auto& from = static_cast<const GetOrderPriceRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.price_ != nullptr);
    if (_this->_impl_.price_ == nullptr) {
      _this->_impl_.price_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_);
    } else {
      _this->_impl_.price_->MergeFrom(*from._impl_.price_);
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrderPriceRequest::CopyFrom(const GetOrderPriceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetOrderPriceRequest::InternalSwap(GetOrderPriceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.direction_)
      + sizeof(GetOrderPriceRequest::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(GetOrderPriceRequest, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata GetOrderPriceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetOrderPriceResponse_ExtraBond::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetOrderPriceResponse_ExtraBond>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraBond, _impl_._has_bits_);
};

void GetOrderPriceResponse_ExtraBond::clear_aci_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.aci_value_ != nullptr) _impl_.aci_value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetOrderPriceResponse_ExtraBond::clear_nominal_conversion_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.nominal_conversion_rate_ != nullptr) _impl_.nominal_conversion_rate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetOrderPriceResponse_ExtraBond::GetOrderPriceResponse_ExtraBond(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderPriceResponse_ExtraBond::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetOrderPriceResponse_ExtraBond::GetOrderPriceResponse_ExtraBond(
    ::google::protobuf::Arena* arena,
    const GetOrderPriceResponse_ExtraBond& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetOrderPriceResponse_ExtraBond* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.aci_value_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.aci_value_)
                        : nullptr;
  _impl_.nominal_conversion_rate_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.nominal_conversion_rate_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderPriceResponse_ExtraBond::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetOrderPriceResponse_ExtraBond::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, aci_value_),
           0,
           offsetof(Impl_, nominal_conversion_rate_) -
               offsetof(Impl_, aci_value_) +
               sizeof(Impl_::nominal_conversion_rate_));
}
GetOrderPriceResponse_ExtraBond::~GetOrderPriceResponse_ExtraBond() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond)
  SharedDtor(*this);
}
inline void GetOrderPriceResponse_ExtraBond::SharedDtor(MessageLite& self) {
  GetOrderPriceResponse_ExtraBond& this_ = static_cast<GetOrderPriceResponse_ExtraBond&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.aci_value_;
  delete this_._impl_.nominal_conversion_rate_;
  this_._impl_.~Impl_();
}

inline void* GetOrderPriceResponse_ExtraBond::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetOrderPriceResponse_ExtraBond(arena);
}
constexpr auto GetOrderPriceResponse_ExtraBond::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetOrderPriceResponse_ExtraBond),
                                            alignof(GetOrderPriceResponse_ExtraBond));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetOrderPriceResponse_ExtraBond::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetOrderPriceResponse_ExtraBond_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetOrderPriceResponse_ExtraBond::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetOrderPriceResponse_ExtraBond>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetOrderPriceResponse_ExtraBond::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetOrderPriceResponse_ExtraBond>(), &GetOrderPriceResponse_ExtraBond::ByteSizeLong,
            &GetOrderPriceResponse_ExtraBond::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraBond, _impl_._cached_size_),
        false,
    },
    &GetOrderPriceResponse_ExtraBond::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetOrderPriceResponse_ExtraBond::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GetOrderPriceResponse_ExtraBond::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraBond, _impl_._has_bits_),
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraBond, _impl_.aci_value_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation nominal_conversion_rate = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraBond, _impl_.nominal_conversion_rate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 2;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraBond, _impl_.aci_value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation nominal_conversion_rate = 3;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraBond, _impl_.nominal_conversion_rate_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetOrderPriceResponse_ExtraBond::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.aci_value_ != nullptr);
      _impl_.aci_value_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.nominal_conversion_rate_ != nullptr);
      _impl_.nominal_conversion_rate_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetOrderPriceResponse_ExtraBond::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetOrderPriceResponse_ExtraBond& this_ = static_cast<const GetOrderPriceResponse_ExtraBond&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetOrderPriceResponse_ExtraBond::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetOrderPriceResponse_ExtraBond& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.aci_value_, this_._impl_.aci_value_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation nominal_conversion_rate = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.nominal_conversion_rate_, this_._impl_.nominal_conversion_rate_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetOrderPriceResponse_ExtraBond::ByteSizeLong(const MessageLite& base) {
          const GetOrderPriceResponse_ExtraBond& this_ = static_cast<const GetOrderPriceResponse_ExtraBond&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetOrderPriceResponse_ExtraBond::ByteSizeLong() const {
          const GetOrderPriceResponse_ExtraBond& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tinkoff.public.invest.api.contract.v1.MoneyValue aci_value = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.aci_value_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation nominal_conversion_rate = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.nominal_conversion_rate_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetOrderPriceResponse_ExtraBond::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetOrderPriceResponse_ExtraBond*>(&to_msg);
  auto& from = static_cast<const GetOrderPriceResponse_ExtraBond&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.aci_value_ != nullptr);
      if (_this->_impl_.aci_value_ == nullptr) {
        _this->_impl_.aci_value_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.aci_value_);
      } else {
        _this->_impl_.aci_value_->MergeFrom(*from._impl_.aci_value_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.nominal_conversion_rate_ != nullptr);
      if (_this->_impl_.nominal_conversion_rate_ == nullptr) {
        _this->_impl_.nominal_conversion_rate_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.nominal_conversion_rate_);
      } else {
        _this->_impl_.nominal_conversion_rate_->MergeFrom(*from._impl_.nominal_conversion_rate_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrderPriceResponse_ExtraBond::CopyFrom(const GetOrderPriceResponse_ExtraBond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetOrderPriceResponse_ExtraBond::InternalSwap(GetOrderPriceResponse_ExtraBond* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraBond, _impl_.nominal_conversion_rate_)
      + sizeof(GetOrderPriceResponse_ExtraBond::_impl_.nominal_conversion_rate_)
      - PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraBond, _impl_.aci_value_)>(
          reinterpret_cast<char*>(&_impl_.aci_value_),
          reinterpret_cast<char*>(&other->_impl_.aci_value_));
}

::google::protobuf::Metadata GetOrderPriceResponse_ExtraBond::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetOrderPriceResponse_ExtraFuture::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetOrderPriceResponse_ExtraFuture>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraFuture, _impl_._has_bits_);
};

void GetOrderPriceResponse_ExtraFuture::clear_initial_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_margin_ != nullptr) _impl_.initial_margin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetOrderPriceResponse_ExtraFuture::GetOrderPriceResponse_ExtraFuture(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderPriceResponse_ExtraFuture::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetOrderPriceResponse_ExtraFuture::GetOrderPriceResponse_ExtraFuture(
    ::google::protobuf::Arena* arena,
    const GetOrderPriceResponse_ExtraFuture& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetOrderPriceResponse_ExtraFuture* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.initial_margin_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.initial_margin_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderPriceResponse_ExtraFuture::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetOrderPriceResponse_ExtraFuture::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.initial_margin_ = {};
}
GetOrderPriceResponse_ExtraFuture::~GetOrderPriceResponse_ExtraFuture() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture)
  SharedDtor(*this);
}
inline void GetOrderPriceResponse_ExtraFuture::SharedDtor(MessageLite& self) {
  GetOrderPriceResponse_ExtraFuture& this_ = static_cast<GetOrderPriceResponse_ExtraFuture&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.initial_margin_;
  this_._impl_.~Impl_();
}

inline void* GetOrderPriceResponse_ExtraFuture::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetOrderPriceResponse_ExtraFuture(arena);
}
constexpr auto GetOrderPriceResponse_ExtraFuture::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetOrderPriceResponse_ExtraFuture),
                                            alignof(GetOrderPriceResponse_ExtraFuture));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetOrderPriceResponse_ExtraFuture::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetOrderPriceResponse_ExtraFuture_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetOrderPriceResponse_ExtraFuture::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetOrderPriceResponse_ExtraFuture>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetOrderPriceResponse_ExtraFuture::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetOrderPriceResponse_ExtraFuture>(), &GetOrderPriceResponse_ExtraFuture::ByteSizeLong,
            &GetOrderPriceResponse_ExtraFuture::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraFuture, _impl_._cached_size_),
        false,
    },
    &GetOrderPriceResponse_ExtraFuture::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetOrderPriceResponse_ExtraFuture::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetOrderPriceResponse_ExtraFuture::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraFuture, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_margin = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraFuture, _impl_.initial_margin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_margin = 2;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse_ExtraFuture, _impl_.initial_margin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetOrderPriceResponse_ExtraFuture::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.initial_margin_ != nullptr);
    _impl_.initial_margin_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetOrderPriceResponse_ExtraFuture::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetOrderPriceResponse_ExtraFuture& this_ = static_cast<const GetOrderPriceResponse_ExtraFuture&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetOrderPriceResponse_ExtraFuture::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetOrderPriceResponse_ExtraFuture& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_margin = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.initial_margin_, this_._impl_.initial_margin_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetOrderPriceResponse_ExtraFuture::ByteSizeLong(const MessageLite& base) {
          const GetOrderPriceResponse_ExtraFuture& this_ = static_cast<const GetOrderPriceResponse_ExtraFuture&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetOrderPriceResponse_ExtraFuture::ByteSizeLong() const {
          const GetOrderPriceResponse_ExtraFuture& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_margin = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_margin_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetOrderPriceResponse_ExtraFuture::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetOrderPriceResponse_ExtraFuture*>(&to_msg);
  auto& from = static_cast<const GetOrderPriceResponse_ExtraFuture&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.initial_margin_ != nullptr);
    if (_this->_impl_.initial_margin_ == nullptr) {
      _this->_impl_.initial_margin_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_margin_);
    } else {
      _this->_impl_.initial_margin_->MergeFrom(*from._impl_.initial_margin_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrderPriceResponse_ExtraFuture::CopyFrom(const GetOrderPriceResponse_ExtraFuture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetOrderPriceResponse_ExtraFuture::InternalSwap(GetOrderPriceResponse_ExtraFuture* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.initial_margin_, other->_impl_.initial_margin_);
}

::google::protobuf::Metadata GetOrderPriceResponse_ExtraFuture::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetOrderPriceResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetOrderPriceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse, _impl_._oneof_case_);
};

void GetOrderPriceResponse::clear_total_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_order_amount_ != nullptr) _impl_.total_order_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetOrderPriceResponse::clear_initial_order_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_order_amount_ != nullptr) _impl_.initial_order_amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GetOrderPriceResponse::clear_executed_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_commission_ != nullptr) _impl_.executed_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GetOrderPriceResponse::clear_executed_commission_rub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_commission_rub_ != nullptr) _impl_.executed_commission_rub_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void GetOrderPriceResponse::clear_service_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.service_commission_ != nullptr) _impl_.service_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void GetOrderPriceResponse::clear_deal_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deal_commission_ != nullptr) _impl_.deal_commission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void GetOrderPriceResponse::set_allocated_extra_bond(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond* extra_bond) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_instrument_extra();
  if (extra_bond) {
    ::google::protobuf::Arena* submessage_arena = extra_bond->GetArena();
    if (message_arena != submessage_arena) {
      extra_bond = ::google::protobuf::internal::GetOwnedMessage(message_arena, extra_bond, submessage_arena);
    }
    set_has_extra_bond();
    _impl_.instrument_extra_.extra_bond_ = extra_bond;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_bond)
}
void GetOrderPriceResponse::set_allocated_extra_future(::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture* extra_future) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_instrument_extra();
  if (extra_future) {
    ::google::protobuf::Arena* submessage_arena = extra_future->GetArena();
    if (message_arena != submessage_arena) {
      extra_future = ::google::protobuf::internal::GetOwnedMessage(message_arena, extra_future, submessage_arena);
    }
    set_has_extra_future();
    _impl_.instrument_extra_.extra_future_ = extra_future;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.extra_future)
}
GetOrderPriceResponse::GetOrderPriceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderPriceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        instrument_extra_{},
        _oneof_case_{from._oneof_case_[0]} {}

GetOrderPriceResponse::GetOrderPriceResponse(
    ::google::protobuf::Arena* arena,
    const GetOrderPriceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetOrderPriceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.total_order_amount_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.total_order_amount_)
                        : nullptr;
  _impl_.initial_order_amount_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.initial_order_amount_)
                        : nullptr;
  _impl_.executed_commission_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.executed_commission_)
                        : nullptr;
  _impl_.executed_commission_rub_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.executed_commission_rub_)
                        : nullptr;
  _impl_.service_commission_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.service_commission_)
                        : nullptr;
  _impl_.deal_commission_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.deal_commission_)
                        : nullptr;
  _impl_.lots_requested_ = from._impl_.lots_requested_;
  switch (instrument_extra_case()) {
    case INSTRUMENT_EXTRA_NOT_SET:
      break;
      case kExtraBond:
        _impl_.instrument_extra_.extra_bond_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond>(arena, *from._impl_.instrument_extra_.extra_bond_);
        break;
      case kExtraFuture:
        _impl_.instrument_extra_.extra_future_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture>(arena, *from._impl_.instrument_extra_.extra_future_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderPriceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        instrument_extra_{},
        _oneof_case_{} {}

inline void GetOrderPriceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_order_amount_),
           0,
           offsetof(Impl_, lots_requested_) -
               offsetof(Impl_, total_order_amount_) +
               sizeof(Impl_::lots_requested_));
}
GetOrderPriceResponse::~GetOrderPriceResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse)
  SharedDtor(*this);
}
inline void GetOrderPriceResponse::SharedDtor(MessageLite& self) {
  GetOrderPriceResponse& this_ = static_cast<GetOrderPriceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.total_order_amount_;
  delete this_._impl_.initial_order_amount_;
  delete this_._impl_.executed_commission_;
  delete this_._impl_.executed_commission_rub_;
  delete this_._impl_.service_commission_;
  delete this_._impl_.deal_commission_;
  if (this_.has_instrument_extra()) {
    this_.clear_instrument_extra();
  }
  this_._impl_.~Impl_();
}

void GetOrderPriceResponse::clear_instrument_extra() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (instrument_extra_case()) {
    case kExtraBond: {
      if (GetArena() == nullptr) {
        delete _impl_.instrument_extra_.extra_bond_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.instrument_extra_.extra_bond_);
      }
      break;
    }
    case kExtraFuture: {
      if (GetArena() == nullptr) {
        delete _impl_.instrument_extra_.extra_future_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.instrument_extra_.extra_future_);
      }
      break;
    }
    case INSTRUMENT_EXTRA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = INSTRUMENT_EXTRA_NOT_SET;
}


inline void* GetOrderPriceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetOrderPriceResponse(arena);
}
constexpr auto GetOrderPriceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetOrderPriceResponse),
                                            alignof(GetOrderPriceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetOrderPriceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetOrderPriceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetOrderPriceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetOrderPriceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetOrderPriceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetOrderPriceResponse>(), &GetOrderPriceResponse::ByteSizeLong,
            &GetOrderPriceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_._cached_size_),
        false,
    },
    &GetOrderPriceResponse::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetOrderPriceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 8, 0, 2> GetOrderPriceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294960170,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.total_order_amount_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 lots_requested = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetOrderPriceResponse, _impl_.lots_requested_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.lots_requested_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_amount = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.initial_order_amount_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.executed_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission_rub = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.executed_commission_rub_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 4, PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.service_commission_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue deal_commission = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 5, PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.deal_commission_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 1;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.total_order_amount_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 lots_requested = 3;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.lots_requested_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_amount = 5;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.initial_order_amount_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 7;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.executed_commission_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission_rub = 8;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.executed_commission_rub_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 9;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.service_commission_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue deal_commission = 10;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.deal_commission_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond extra_bond = 12;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.instrument_extra_.extra_bond_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture extra_future = 13;
    {PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.instrument_extra_.extra_future_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetOrderPriceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.total_order_amount_ != nullptr);
      _impl_.total_order_amount_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.initial_order_amount_ != nullptr);
      _impl_.initial_order_amount_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.executed_commission_ != nullptr);
      _impl_.executed_commission_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.executed_commission_rub_ != nullptr);
      _impl_.executed_commission_rub_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.service_commission_ != nullptr);
      _impl_.service_commission_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.deal_commission_ != nullptr);
      _impl_.deal_commission_->Clear();
    }
  }
  _impl_.lots_requested_ = ::int64_t{0};
  clear_instrument_extra();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetOrderPriceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetOrderPriceResponse& this_ = static_cast<const GetOrderPriceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetOrderPriceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetOrderPriceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.total_order_amount_, this_._impl_.total_order_amount_->GetCachedSize(), target,
                stream);
          }

          // int64 lots_requested = 3;
          if (this_._internal_lots_requested() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_lots_requested(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_amount = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.initial_order_amount_, this_._impl_.initial_order_amount_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 7;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.executed_commission_, this_._impl_.executed_commission_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission_rub = 8;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.executed_commission_rub_, this_._impl_.executed_commission_rub_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 9;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.service_commission_, this_._impl_.service_commission_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue deal_commission = 10;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.deal_commission_, this_._impl_.deal_commission_->GetCachedSize(), target,
                stream);
          }

          switch (this_.instrument_extra_case()) {
            case kExtraBond: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.instrument_extra_.extra_bond_, this_._impl_.instrument_extra_.extra_bond_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kExtraFuture: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  13, *this_._impl_.instrument_extra_.extra_future_, this_._impl_.instrument_extra_.extra_future_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetOrderPriceResponse::ByteSizeLong(const MessageLite& base) {
          const GetOrderPriceResponse& this_ = static_cast<const GetOrderPriceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetOrderPriceResponse::ByteSizeLong() const {
          const GetOrderPriceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // .tinkoff.public.invest.api.contract.v1.MoneyValue total_order_amount = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.total_order_amount_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_amount = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_order_amount_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.executed_commission_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_commission_rub = 8;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.executed_commission_rub_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue service_commission = 9;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.service_commission_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue deal_commission = 10;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.deal_commission_);
            }
          }
           {
            // int64 lots_requested = 3;
            if (this_._internal_lots_requested() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_lots_requested());
            }
          }
          switch (this_.instrument_extra_case()) {
            // .tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraBond extra_bond = 12;
            case kExtraBond: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.instrument_extra_.extra_bond_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse.ExtraFuture extra_future = 13;
            case kExtraFuture: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.instrument_extra_.extra_future_);
              break;
            }
            case INSTRUMENT_EXTRA_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetOrderPriceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetOrderPriceResponse*>(&to_msg);
  auto& from = static_cast<const GetOrderPriceResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.total_order_amount_ != nullptr);
      if (_this->_impl_.total_order_amount_ == nullptr) {
        _this->_impl_.total_order_amount_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.total_order_amount_);
      } else {
        _this->_impl_.total_order_amount_->MergeFrom(*from._impl_.total_order_amount_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.initial_order_amount_ != nullptr);
      if (_this->_impl_.initial_order_amount_ == nullptr) {
        _this->_impl_.initial_order_amount_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_order_amount_);
      } else {
        _this->_impl_.initial_order_amount_->MergeFrom(*from._impl_.initial_order_amount_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.executed_commission_ != nullptr);
      if (_this->_impl_.executed_commission_ == nullptr) {
        _this->_impl_.executed_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.executed_commission_);
      } else {
        _this->_impl_.executed_commission_->MergeFrom(*from._impl_.executed_commission_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.executed_commission_rub_ != nullptr);
      if (_this->_impl_.executed_commission_rub_ == nullptr) {
        _this->_impl_.executed_commission_rub_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.executed_commission_rub_);
      } else {
        _this->_impl_.executed_commission_rub_->MergeFrom(*from._impl_.executed_commission_rub_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.service_commission_ != nullptr);
      if (_this->_impl_.service_commission_ == nullptr) {
        _this->_impl_.service_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.service_commission_);
      } else {
        _this->_impl_.service_commission_->MergeFrom(*from._impl_.service_commission_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.deal_commission_ != nullptr);
      if (_this->_impl_.deal_commission_ == nullptr) {
        _this->_impl_.deal_commission_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.deal_commission_);
      } else {
        _this->_impl_.deal_commission_->MergeFrom(*from._impl_.deal_commission_);
      }
    }
  }
  if (from._internal_lots_requested() != 0) {
    _this->_impl_.lots_requested_ = from._impl_.lots_requested_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_instrument_extra();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kExtraBond: {
        if (oneof_needs_init) {
          _this->_impl_.instrument_extra_.extra_bond_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraBond>(arena, *from._impl_.instrument_extra_.extra_bond_);
        } else {
          _this->_impl_.instrument_extra_.extra_bond_->MergeFrom(from._internal_extra_bond());
        }
        break;
      }
      case kExtraFuture: {
        if (oneof_needs_init) {
          _this->_impl_.instrument_extra_.extra_future_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetOrderPriceResponse_ExtraFuture>(arena, *from._impl_.instrument_extra_.extra_future_);
        } else {
          _this->_impl_.instrument_extra_.extra_future_->MergeFrom(from._internal_extra_future());
        }
        break;
      }
      case INSTRUMENT_EXTRA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrderPriceResponse::CopyFrom(const GetOrderPriceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrderPriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetOrderPriceResponse::InternalSwap(GetOrderPriceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.lots_requested_)
      + sizeof(GetOrderPriceResponse::_impl_.lots_requested_)
      - PROTOBUF_FIELD_OFFSET(GetOrderPriceResponse, _impl_.total_order_amount_)>(
          reinterpret_cast<char*>(&_impl_.total_order_amount_),
          reinterpret_cast<char*>(&other->_impl_.total_order_amount_));
  swap(_impl_.instrument_extra_, other->_impl_.instrument_extra_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GetOrderPriceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderStateStreamRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OrderStateStreamRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderStateStreamRequest, _impl_._has_bits_);
};

OrderStateStreamRequest::OrderStateStreamRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE OrderStateStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accounts_{visibility, arena, from.accounts_} {}

OrderStateStreamRequest::OrderStateStreamRequest(
    ::google::protobuf::Arena* arena,
    const OrderStateStreamRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderStateStreamRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.ping_delay_millis_ = from._impl_.ping_delay_millis_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE OrderStateStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        accounts_{visibility, arena} {}

inline void OrderStateStreamRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ping_delay_millis_ = {};
}
OrderStateStreamRequest::~OrderStateStreamRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest)
  SharedDtor(*this);
}
inline void OrderStateStreamRequest::SharedDtor(MessageLite& self) {
  OrderStateStreamRequest& this_ = static_cast<OrderStateStreamRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* OrderStateStreamRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderStateStreamRequest(arena);
}
constexpr auto OrderStateStreamRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderStateStreamRequest, _impl_.accounts_) +
          decltype(OrderStateStreamRequest::_impl_.accounts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(OrderStateStreamRequest), alignof(OrderStateStreamRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderStateStreamRequest::PlacementNew_,
                                 sizeof(OrderStateStreamRequest),
                                 alignof(OrderStateStreamRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderStateStreamRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderStateStreamRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderStateStreamRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderStateStreamRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderStateStreamRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderStateStreamRequest>(), &OrderStateStreamRequest::ByteSizeLong,
            &OrderStateStreamRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderStateStreamRequest, _impl_._cached_size_),
        false,
    },
    &OrderStateStreamRequest::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderStateStreamRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 78, 2> OrderStateStreamRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderStateStreamRequest, _impl_._has_bits_),
    0, // no _extensions_
    15, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950910,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string accounts = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamRequest, _impl_.accounts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 ping_delay_millis = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderStateStreamRequest, _impl_.ping_delay_millis_), 0>(),
     {120, 0, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamRequest, _impl_.ping_delay_millis_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string accounts = 1;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamRequest, _impl_.accounts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // optional int32 ping_delay_millis = 15;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamRequest, _impl_.ping_delay_millis_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\75\10\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest"
    "accounts"
  }},
};

PROTOBUF_NOINLINE void OrderStateStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _impl_.ping_delay_millis_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderStateStreamRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderStateStreamRequest& this_ = static_cast<const OrderStateStreamRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderStateStreamRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderStateStreamRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string accounts = 1;
          for (int i = 0, n = this_._internal_accounts_size(); i < n; ++i) {
            const auto& s = this_._internal_accounts().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest.accounts");
            target = stream->WriteString(1, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 ping_delay_millis = 15;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<15>(
                    stream, this_._internal_ping_delay_millis(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderStateStreamRequest::ByteSizeLong(const MessageLite& base) {
          const OrderStateStreamRequest& this_ = static_cast<const OrderStateStreamRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderStateStreamRequest::ByteSizeLong() const {
          const OrderStateStreamRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string accounts = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_accounts().size());
              for (int i = 0, n = this_._internal_accounts().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_accounts().Get(i));
              }
            }
          }
           {
            // optional int32 ping_delay_millis = 15;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_ping_delay_millis());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderStateStreamRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderStateStreamRequest*>(&to_msg);
  auto& from = static_cast<const OrderStateStreamRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(from._internal_accounts());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.ping_delay_millis_ = from._impl_.ping_delay_millis_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderStateStreamRequest::CopyFrom(const OrderStateStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderStateStreamRequest::InternalSwap(OrderStateStreamRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
        swap(_impl_.ping_delay_millis_, other->_impl_.ping_delay_millis_);
}

::google::protobuf::Metadata OrderStateStreamRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscriptionResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SubscriptionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_._has_bits_);
};

void SubscriptionResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.error_ != nullptr) _impl_.error_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SubscriptionResponse::SubscriptionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.SubscriptionResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscriptionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        accounts_{visibility, arena, from.accounts_},
        tracking_id_(arena, from.tracking_id_),
        stream_id_(arena, from.stream_id_) {}

SubscriptionResponse::SubscriptionResponse(
    ::google::protobuf::Arena* arena,
    const SubscriptionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscriptionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.error_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::ErrorDetail>(
                              arena, *from._impl_.error_)
                        : nullptr;
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.SubscriptionResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscriptionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        accounts_{visibility, arena},
        tracking_id_(arena),
        stream_id_(arena) {}

inline void SubscriptionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, error_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, error_) +
               sizeof(Impl_::status_));
}
SubscriptionResponse::~SubscriptionResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.SubscriptionResponse)
  SharedDtor(*this);
}
inline void SubscriptionResponse::SharedDtor(MessageLite& self) {
  SubscriptionResponse& this_ = static_cast<SubscriptionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tracking_id_.Destroy();
  this_._impl_.stream_id_.Destroy();
  delete this_._impl_.error_;
  this_._impl_.~Impl_();
}

inline void* SubscriptionResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscriptionResponse(arena);
}
constexpr auto SubscriptionResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.accounts_) +
          decltype(SubscriptionResponse::_impl_.accounts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubscriptionResponse), alignof(SubscriptionResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscriptionResponse::PlacementNew_,
                                 sizeof(SubscriptionResponse),
                                 alignof(SubscriptionResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscriptionResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscriptionResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscriptionResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscriptionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscriptionResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscriptionResponse>(), &SubscriptionResponse::ByteSizeLong,
            &SubscriptionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_._cached_size_),
        false,
    },
    &SubscriptionResponse::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscriptionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 95, 2> SubscriptionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967204,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string tracking_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.tracking_id_)}},
    // .tinkoff.public.invest.api.contract.v1.ResultSubscriptionStatus status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscriptionResponse, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string stream_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.stream_id_)}},
    // repeated string accounts = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.accounts_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .tinkoff.public.invest.api.contract.v1.ErrorDetail error = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.error_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tracking_id = 1;
    {PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.tracking_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.ResultSubscriptionStatus status = 2;
    {PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string stream_id = 4;
    {PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.stream_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string accounts = 5;
    {PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.accounts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // optional .tinkoff.public.invest.api.contract.v1.ErrorDetail error = 7;
    {PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.error_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::ErrorDetail>()},
  }}, {{
    "\72\13\0\11\10\0\0\0"
    "tinkoff.public.invest.api.contract.v1.SubscriptionResponse"
    "tracking_id"
    "stream_id"
    "accounts"
  }},
};

PROTOBUF_NOINLINE void SubscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.SubscriptionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _impl_.tracking_id_.ClearToEmpty();
  _impl_.stream_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.error_ != nullptr);
    _impl_.error_->Clear();
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscriptionResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscriptionResponse& this_ = static_cast<const SubscriptionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscriptionResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscriptionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.SubscriptionResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string tracking_id = 1;
          if (!this_._internal_tracking_id().empty()) {
            const std::string& _s = this_._internal_tracking_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.SubscriptionResponse.tracking_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.ResultSubscriptionStatus status = 2;
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_status(), target);
          }

          // string stream_id = 4;
          if (!this_._internal_stream_id().empty()) {
            const std::string& _s = this_._internal_stream_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.SubscriptionResponse.stream_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // repeated string accounts = 5;
          for (int i = 0, n = this_._internal_accounts_size(); i < n; ++i) {
            const auto& s = this_._internal_accounts().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.SubscriptionResponse.accounts");
            target = stream->WriteString(5, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .tinkoff.public.invest.api.contract.v1.ErrorDetail error = 7;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.error_, this_._impl_.error_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.SubscriptionResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscriptionResponse::ByteSizeLong(const MessageLite& base) {
          const SubscriptionResponse& this_ = static_cast<const SubscriptionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscriptionResponse::ByteSizeLong() const {
          const SubscriptionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.SubscriptionResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string accounts = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_accounts().size());
              for (int i = 0, n = this_._internal_accounts().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_accounts().Get(i));
              }
            }
          }
           {
            // string tracking_id = 1;
            if (!this_._internal_tracking_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tracking_id());
            }
            // string stream_id = 4;
            if (!this_._internal_stream_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stream_id());
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.ErrorDetail error = 7;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.error_);
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.ResultSubscriptionStatus status = 2;
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscriptionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscriptionResponse*>(&to_msg);
  auto& from = static_cast<const SubscriptionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.SubscriptionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(from._internal_accounts());
  if (!from._internal_tracking_id().empty()) {
    _this->_internal_set_tracking_id(from._internal_tracking_id());
  }
  if (!from._internal_stream_id().empty()) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.error_ != nullptr);
    if (_this->_impl_.error_ == nullptr) {
      _this->_impl_.error_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::ErrorDetail>(arena, *from._impl_.error_);
    } else {
      _this->_impl_.error_->MergeFrom(*from._impl_.error_);
    }
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscriptionResponse::CopyFrom(const SubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.SubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscriptionResponse::InternalSwap(SubscriptionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tracking_id_, &other->_impl_.tracking_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stream_id_, &other->_impl_.stream_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.status_)
      + sizeof(SubscriptionResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.error_)>(
          reinterpret_cast<char*>(&_impl_.error_),
          reinterpret_cast<char*>(&other->_impl_.error_));
}

::google::protobuf::Metadata SubscriptionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderStateStreamResponse_OrderState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OrderStateStreamResponse_OrderState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_._has_bits_);
};

void OrderStateStreamResponse_OrderState::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OrderStateStreamResponse_OrderState::clear_initial_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.initial_order_price_ != nullptr) _impl_.initial_order_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void OrderStateStreamResponse_OrderState::clear_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.order_price_ != nullptr) _impl_.order_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void OrderStateStreamResponse_OrderState::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void OrderStateStreamResponse_OrderState::clear_executed_order_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.executed_order_price_ != nullptr) _impl_.executed_order_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void OrderStateStreamResponse_OrderState::clear_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.completion_time_ != nullptr) _impl_.completion_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
OrderStateStreamResponse_OrderState::OrderStateStreamResponse_OrderState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState)
}
inline PROTOBUF_NDEBUG_INLINE OrderStateStreamResponse_OrderState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trades_{visibility, arena, from.trades_},
        order_id_(arena, from.order_id_),
        order_request_id_(arena, from.order_request_id_),
        client_code_(arena, from.client_code_),
        ticker_(arena, from.ticker_),
        class_code_(arena, from.class_code_),
        account_id_(arena, from.account_id_),
        currency_(arena, from.currency_),
        exchange_(arena, from.exchange_),
        instrument_uid_(arena, from.instrument_uid_) {}

OrderStateStreamResponse_OrderState::OrderStateStreamResponse_OrderState(
    ::google::protobuf::Arena* arena,
    const OrderStateStreamResponse_OrderState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderStateStreamResponse_OrderState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.created_at_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.created_at_)
                        : nullptr;
  _impl_.initial_order_price_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.initial_order_price_)
                        : nullptr;
  _impl_.order_price_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.order_price_)
                        : nullptr;
  _impl_.amount_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.amount_)
                        : nullptr;
  _impl_.executed_order_price_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(
                              arena, *from._impl_.executed_order_price_)
                        : nullptr;
  _impl_.completion_time_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.completion_time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, execution_report_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, execution_report_status_),
           offsetof(Impl_, marker_) -
               offsetof(Impl_, execution_report_status_) +
               sizeof(Impl_::marker_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState)
}
inline PROTOBUF_NDEBUG_INLINE OrderStateStreamResponse_OrderState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        trades_{visibility, arena},
        order_id_(arena),
        order_request_id_(arena),
        client_code_(arena),
        ticker_(arena),
        class_code_(arena),
        account_id_(arena),
        currency_(arena),
        exchange_(arena),
        instrument_uid_(arena) {}

inline void OrderStateStreamResponse_OrderState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_at_),
           0,
           offsetof(Impl_, marker_) -
               offsetof(Impl_, created_at_) +
               sizeof(Impl_::marker_));
}
OrderStateStreamResponse_OrderState::~OrderStateStreamResponse_OrderState() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState)
  SharedDtor(*this);
}
inline void OrderStateStreamResponse_OrderState::SharedDtor(MessageLite& self) {
  OrderStateStreamResponse_OrderState& this_ = static_cast<OrderStateStreamResponse_OrderState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.order_id_.Destroy();
  this_._impl_.order_request_id_.Destroy();
  this_._impl_.client_code_.Destroy();
  this_._impl_.ticker_.Destroy();
  this_._impl_.class_code_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.currency_.Destroy();
  this_._impl_.exchange_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.created_at_;
  delete this_._impl_.initial_order_price_;
  delete this_._impl_.order_price_;
  delete this_._impl_.amount_;
  delete this_._impl_.executed_order_price_;
  delete this_._impl_.completion_time_;
  this_._impl_.~Impl_();
}

inline void* OrderStateStreamResponse_OrderState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderStateStreamResponse_OrderState(arena);
}
constexpr auto OrderStateStreamResponse_OrderState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.trades_) +
          decltype(OrderStateStreamResponse_OrderState::_impl_.trades_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OrderStateStreamResponse_OrderState), alignof(OrderStateStreamResponse_OrderState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderStateStreamResponse_OrderState::PlacementNew_,
                                 sizeof(OrderStateStreamResponse_OrderState),
                                 alignof(OrderStateStreamResponse_OrderState));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderStateStreamResponse_OrderState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderStateStreamResponse_OrderState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderStateStreamResponse_OrderState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderStateStreamResponse_OrderState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderStateStreamResponse_OrderState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderStateStreamResponse_OrderState>(), &OrderStateStreamResponse_OrderState::ByteSizeLong,
            &OrderStateStreamResponse_OrderState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_._cached_size_),
        false,
    },
    &OrderStateStreamResponse_OrderState::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderStateStreamResponse_OrderState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 27, 7, 197, 7> OrderStateStreamResponse_OrderState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_._has_bits_),
    0, // no _extensions_
    41, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    2149572608,  // skipmap
    offsetof(decltype(_table_), field_entries),
    27,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string order_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.order_id_)}},
    // optional string order_request_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.order_request_id_)}},
    // string client_code = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.client_code_)}},
    // .google.protobuf.Timestamp created_at = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.created_at_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderStateStreamResponse_OrderState, _impl_.execution_report_status_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.execution_report_status_)}},
    // optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.StatusCauseInfo status_info = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderStateStreamResponse_OrderState, _impl_.status_info_), 7>(),
     {48, 7, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.status_info_)}},
    // string ticker = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.ticker_)}},
    // string class_code = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.class_code_)}},
    // int32 lot_size = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderStateStreamResponse_OrderState, _impl_.lot_size_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.lot_size_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderStateStreamResponse_OrderState, _impl_.direction_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.direction_)}},
    // .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderStateStreamResponse_OrderState, _impl_.time_in_force_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.time_in_force_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderStateStreamResponse_OrderState, _impl_.order_type_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.order_type_)}},
    // string account_id = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.account_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 33;
    {::_pbi::TcParser::FastMtR2,
     {650, 63, 5, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.trades_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp completion_time = 35;
    {::_pbi::TcParser::FastMtS2,
     {666, 6, 6, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.completion_time_)}},
    // string exchange = 36;
    {::_pbi::TcParser::FastUS2,
     {674, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.exchange_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 22;
    {::_pbi::TcParser::FastMtS2,
     {434, 2, 1, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.initial_order_price_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue order_price = 23;
    {::_pbi::TcParser::FastMtS2,
     {442, 3, 2, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.order_price_)}},
    // optional .tinkoff.public.invest.api.contract.v1.MoneyValue amount = 24;
    {::_pbi::TcParser::FastMtS2,
     {450, 4, 3, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.amount_)}},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 25;
    {::_pbi::TcParser::FastMtS2,
     {458, 5, 4, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.executed_order_price_)}},
    // string currency = 26;
    {::_pbi::TcParser::FastUS2,
     {466, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.currency_)}},
    // int64 lots_requested = 27;
    {::_pbi::TcParser::FastV64S2,
     {472, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.lots_requested_)}},
    // int64 lots_executed = 28;
    {::_pbi::TcParser::FastV64S2,
     {480, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.lots_executed_)}},
    // int64 lots_left = 29;
    {::_pbi::TcParser::FastV64S2,
     {488, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.lots_left_)}},
    // int64 lots_cancelled = 30;
    {::_pbi::TcParser::FastV64S2,
     {496, 63, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.lots_cancelled_)}},
    // optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.MarkerType marker = 31;
    {::_pbi::TcParser::FastV32S2,
     {504, 8, 0, PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.marker_)}},
  }}, {{
    33, 0, 1,
    65266, 23,
    65535, 65535
  }}, {{
    // string order_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.order_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string order_request_id = 2;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.order_request_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string client_code = 3;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.client_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp created_at = 4;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.created_at_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 5;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.execution_report_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.StatusCauseInfo status_info = 6;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.status_info_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string ticker = 7;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.ticker_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string class_code = 8;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.class_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 lot_size = 9;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.lot_size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 10;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 11;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.time_in_force_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 12;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.order_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string account_id = 13;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.account_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 22;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.initial_order_price_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue order_price = 23;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.order_price_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tinkoff.public.invest.api.contract.v1.MoneyValue amount = 24;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.amount_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 25;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.executed_order_price_), _Internal::kHasBitsOffset + 5, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string currency = 26;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.currency_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 lots_requested = 27;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.lots_requested_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 lots_executed = 28;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.lots_executed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 lots_left = 29;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.lots_left_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 lots_cancelled = 30;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.lots_cancelled_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.MarkerType marker = 31;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.marker_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 33;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.trades_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp completion_time = 35;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.completion_time_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string exchange = 36;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.exchange_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 41;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MoneyValue>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderTrade>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\111\10\20\13\0\0\0\6\12\0\0\0\0\12\0\0\0\0\10\0\0\0\0\0\0\0\10\16\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState"
    "order_id"
    "order_request_id"
    "client_code"
    "ticker"
    "class_code"
    "account_id"
    "currency"
    "exchange"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void OrderStateStreamResponse_OrderState::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trades_.Clear();
  _impl_.order_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.order_request_id_.ClearNonDefaultToEmpty();
  }
  _impl_.client_code_.ClearToEmpty();
  _impl_.ticker_.ClearToEmpty();
  _impl_.class_code_.ClearToEmpty();
  _impl_.account_id_.ClearToEmpty();
  _impl_.currency_.ClearToEmpty();
  _impl_.exchange_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  if (cached_has_bits & 0x0000007eu) {
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.created_at_ != nullptr);
      _impl_.created_at_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.initial_order_price_ != nullptr);
      _impl_.initial_order_price_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.order_price_ != nullptr);
      _impl_.order_price_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.amount_ != nullptr);
      _impl_.amount_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.executed_order_price_ != nullptr);
      _impl_.executed_order_price_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.completion_time_ != nullptr);
      _impl_.completion_time_->Clear();
    }
  }
  _impl_.execution_report_status_ = 0;
  _impl_.status_info_ = 0;
  ::memset(&_impl_.lot_size_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lots_cancelled_) -
      reinterpret_cast<char*>(&_impl_.lot_size_)) + sizeof(_impl_.lots_cancelled_));
  _impl_.marker_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderStateStreamResponse_OrderState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderStateStreamResponse_OrderState& this_ = static_cast<const OrderStateStreamResponse_OrderState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderStateStreamResponse_OrderState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderStateStreamResponse_OrderState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string order_id = 1;
          if (!this_._internal_order_id().empty()) {
            const std::string& _s = this_._internal_order_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string order_request_id = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_order_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.order_request_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string client_code = 3;
          if (!this_._internal_client_code().empty()) {
            const std::string& _s = this_._internal_client_code();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.client_code");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .google.protobuf.Timestamp created_at = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.created_at_, this_._impl_.created_at_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 5;
          if (this_._internal_execution_report_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_execution_report_status(), target);
          }

          // optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.StatusCauseInfo status_info = 6;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_status_info(), target);
          }

          // string ticker = 7;
          if (!this_._internal_ticker().empty()) {
            const std::string& _s = this_._internal_ticker();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.ticker");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string class_code = 8;
          if (!this_._internal_class_code().empty()) {
            const std::string& _s = this_._internal_class_code();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.class_code");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // int32 lot_size = 9;
          if (this_._internal_lot_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_lot_size(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 10;
          if (this_._internal_direction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                10, this_._internal_direction(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 11;
          if (this_._internal_time_in_force() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                11, this_._internal_time_in_force(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 12;
          if (this_._internal_order_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                12, this_._internal_order_type(), target);
          }

          // string account_id = 13;
          if (!this_._internal_account_id().empty()) {
            const std::string& _s = this_._internal_account_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.account_id");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 22;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                22, *this_._impl_.initial_order_price_, this_._impl_.initial_order_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue order_price = 23;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                23, *this_._impl_.order_price_, this_._impl_.order_price_->GetCachedSize(), target,
                stream);
          }

          // optional .tinkoff.public.invest.api.contract.v1.MoneyValue amount = 24;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                24, *this_._impl_.amount_, this_._impl_.amount_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 25;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                25, *this_._impl_.executed_order_price_, this_._impl_.executed_order_price_->GetCachedSize(), target,
                stream);
          }

          // string currency = 26;
          if (!this_._internal_currency().empty()) {
            const std::string& _s = this_._internal_currency();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.currency");
            target = stream->WriteStringMaybeAliased(26, _s, target);
          }

          // int64 lots_requested = 27;
          if (this_._internal_lots_requested() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                27, this_._internal_lots_requested(), target);
          }

          // int64 lots_executed = 28;
          if (this_._internal_lots_executed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                28, this_._internal_lots_executed(), target);
          }

          // int64 lots_left = 29;
          if (this_._internal_lots_left() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                29, this_._internal_lots_left(), target);
          }

          // int64 lots_cancelled = 30;
          if (this_._internal_lots_cancelled() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt64ToArray(
                30, this_._internal_lots_cancelled(), target);
          }

          // optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.MarkerType marker = 31;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                31, this_._internal_marker(), target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 33;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_trades_size());
               i < n; i++) {
            const auto& repfield = this_._internal_trades().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    33, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .google.protobuf.Timestamp completion_time = 35;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                35, *this_._impl_.completion_time_, this_._impl_.completion_time_->GetCachedSize(), target,
                stream);
          }

          // string exchange = 36;
          if (!this_._internal_exchange().empty()) {
            const std::string& _s = this_._internal_exchange();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.exchange");
            target = stream->WriteStringMaybeAliased(36, _s, target);
          }

          // string instrument_uid = 41;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState.instrument_uid");
            target = stream->WriteStringMaybeAliased(41, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderStateStreamResponse_OrderState::ByteSizeLong(const MessageLite& base) {
          const OrderStateStreamResponse_OrderState& this_ = static_cast<const OrderStateStreamResponse_OrderState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderStateStreamResponse_OrderState::ByteSizeLong() const {
          const OrderStateStreamResponse_OrderState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.OrderTrade trades = 33;
            {
              total_size += 2UL * this_._internal_trades_size();
              for (const auto& msg : this_._internal_trades()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string order_id = 1;
            if (!this_._internal_order_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_id());
            }
          }
           {
            // optional string order_request_id = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_order_request_id());
            }
          }
           {
            // string client_code = 3;
            if (!this_._internal_client_code().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_code());
            }
            // string ticker = 7;
            if (!this_._internal_ticker().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ticker());
            }
            // string class_code = 8;
            if (!this_._internal_class_code().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_class_code());
            }
            // string account_id = 13;
            if (!this_._internal_account_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account_id());
            }
            // string currency = 26;
            if (!this_._internal_currency().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_currency());
            }
            // string exchange = 36;
            if (!this_._internal_exchange().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_exchange());
            }
            // string instrument_uid = 41;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
          if (cached_has_bits & 0x0000007eu) {
            // .google.protobuf.Timestamp created_at = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.created_at_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue initial_order_price = 22;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.initial_order_price_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue order_price = 23;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.order_price_);
            }
            // optional .tinkoff.public.invest.api.contract.v1.MoneyValue amount = 24;
            if (cached_has_bits & 0x00000010u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.amount_);
            }
            // .tinkoff.public.invest.api.contract.v1.MoneyValue executed_order_price = 25;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.executed_order_price_);
            }
            // .google.protobuf.Timestamp completion_time = 35;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.completion_time_);
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.OrderExecutionReportStatus execution_report_status = 5;
            if (this_._internal_execution_report_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_execution_report_status());
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.StatusCauseInfo status_info = 6;
            if (cached_has_bits & 0x00000080u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status_info());
            }
          }
           {
            // int32 lot_size = 9;
            if (this_._internal_lot_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_lot_size());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderDirection direction = 10;
            if (this_._internal_direction() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
            // .tinkoff.public.invest.api.contract.v1.TimeInForceType time_in_force = 11;
            if (this_._internal_time_in_force() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_time_in_force());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderType order_type = 12;
            if (this_._internal_order_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_order_type());
            }
            // int64 lots_requested = 27;
            if (this_._internal_lots_requested() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_lots_requested());
            }
            // int64 lots_executed = 28;
            if (this_._internal_lots_executed() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_lots_executed());
            }
            // int64 lots_left = 29;
            if (this_._internal_lots_left() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_lots_left());
            }
            // int64 lots_cancelled = 30;
            if (this_._internal_lots_cancelled() != 0) {
              total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                              this_._internal_lots_cancelled());
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.MarkerType marker = 31;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_marker());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderStateStreamResponse_OrderState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderStateStreamResponse_OrderState*>(&to_msg);
  auto& from = static_cast<const OrderStateStreamResponse_OrderState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trades()->MergeFrom(
      from._internal_trades());
  if (!from._internal_order_id().empty()) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_order_request_id(from._internal_order_request_id());
  }
  if (!from._internal_client_code().empty()) {
    _this->_internal_set_client_code(from._internal_client_code());
  }
  if (!from._internal_ticker().empty()) {
    _this->_internal_set_ticker(from._internal_ticker());
  }
  if (!from._internal_class_code().empty()) {
    _this->_internal_set_class_code(from._internal_class_code());
  }
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_currency().empty()) {
    _this->_internal_set_currency(from._internal_currency());
  }
  if (!from._internal_exchange().empty()) {
    _this->_internal_set_exchange(from._internal_exchange());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (cached_has_bits & 0x0000007eu) {
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.created_at_ != nullptr);
      if (_this->_impl_.created_at_ == nullptr) {
        _this->_impl_.created_at_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.created_at_);
      } else {
        _this->_impl_.created_at_->MergeFrom(*from._impl_.created_at_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.initial_order_price_ != nullptr);
      if (_this->_impl_.initial_order_price_ == nullptr) {
        _this->_impl_.initial_order_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.initial_order_price_);
      } else {
        _this->_impl_.initial_order_price_->MergeFrom(*from._impl_.initial_order_price_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.order_price_ != nullptr);
      if (_this->_impl_.order_price_ == nullptr) {
        _this->_impl_.order_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.order_price_);
      } else {
        _this->_impl_.order_price_->MergeFrom(*from._impl_.order_price_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.amount_ != nullptr);
      if (_this->_impl_.amount_ == nullptr) {
        _this->_impl_.amount_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.amount_);
      } else {
        _this->_impl_.amount_->MergeFrom(*from._impl_.amount_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.executed_order_price_ != nullptr);
      if (_this->_impl_.executed_order_price_ == nullptr) {
        _this->_impl_.executed_order_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::MoneyValue>(arena, *from._impl_.executed_order_price_);
      } else {
        _this->_impl_.executed_order_price_->MergeFrom(*from._impl_.executed_order_price_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.completion_time_ != nullptr);
      if (_this->_impl_.completion_time_ == nullptr) {
        _this->_impl_.completion_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.completion_time_);
      } else {
        _this->_impl_.completion_time_->MergeFrom(*from._impl_.completion_time_);
      }
    }
  }
  if (from._internal_execution_report_status() != 0) {
    _this->_impl_.execution_report_status_ = from._impl_.execution_report_status_;
  }
  if (cached_has_bits & 0x00000080u) {
    _this->_impl_.status_info_ = from._impl_.status_info_;
  }
  if (from._internal_lot_size() != 0) {
    _this->_impl_.lot_size_ = from._impl_.lot_size_;
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  if (from._internal_time_in_force() != 0) {
    _this->_impl_.time_in_force_ = from._impl_.time_in_force_;
  }
  if (from._internal_order_type() != 0) {
    _this->_impl_.order_type_ = from._impl_.order_type_;
  }
  if (from._internal_lots_requested() != 0) {
    _this->_impl_.lots_requested_ = from._impl_.lots_requested_;
  }
  if (from._internal_lots_executed() != 0) {
    _this->_impl_.lots_executed_ = from._impl_.lots_executed_;
  }
  if (from._internal_lots_left() != 0) {
    _this->_impl_.lots_left_ = from._impl_.lots_left_;
  }
  if (from._internal_lots_cancelled() != 0) {
    _this->_impl_.lots_cancelled_ = from._impl_.lots_cancelled_;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.marker_ = from._impl_.marker_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderStateStreamResponse_OrderState::CopyFrom(const OrderStateStreamResponse_OrderState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderStateStreamResponse_OrderState::InternalSwap(OrderStateStreamResponse_OrderState* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.trades_.InternalSwap(&other->_impl_.trades_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_id_, &other->_impl_.order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_request_id_, &other->_impl_.order_request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_code_, &other->_impl_.client_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ticker_, &other->_impl_.ticker_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.class_code_, &other->_impl_.class_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_, &other->_impl_.exchange_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.marker_)
      + sizeof(OrderStateStreamResponse_OrderState::_impl_.marker_)
      - PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse_OrderState, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::google::protobuf::Metadata OrderStateStreamResponse_OrderState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderStateStreamResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse, _impl_._oneof_case_);
};

void OrderStateStreamResponse::set_allocated_order_state(::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState* order_state) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_state) {
    ::google::protobuf::Arena* submessage_arena = order_state->GetArena();
    if (message_arena != submessage_arena) {
      order_state = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_state, submessage_arena);
    }
    set_has_order_state();
    _impl_.payload_.order_state_ = order_state;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.order_state)
}
void OrderStateStreamResponse::set_allocated_ping(::tinkoff::public_::invest::api::contract::v1::Ping* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(ping)->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.payload_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.ping)
}
void OrderStateStreamResponse::clear_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kPing) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.ping_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
    }
    clear_has_payload();
  }
}
void OrderStateStreamResponse::set_allocated_subscription(::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse* subscription) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscription) {
    ::google::protobuf::Arena* submessage_arena = subscription->GetArena();
    if (message_arena != submessage_arena) {
      subscription = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscription, submessage_arena);
    }
    set_has_subscription();
    _impl_.payload_.subscription_ = subscription;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.subscription)
}
OrderStateStreamResponse::OrderStateStreamResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE OrderStateStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

OrderStateStreamResponse::OrderStateStreamResponse(
    ::google::protobuf::Arena* arena,
    const OrderStateStreamResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderStateStreamResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kOrderState:
        _impl_.payload_.order_state_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState>(arena, *from._impl_.payload_.order_state_);
        break;
      case kPing:
        _impl_.payload_.ping_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        break;
      case kSubscription:
        _impl_.payload_.subscription_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse>(arena, *from._impl_.payload_.subscription_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse)
}
inline PROTOBUF_NDEBUG_INLINE OrderStateStreamResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void OrderStateStreamResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OrderStateStreamResponse::~OrderStateStreamResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse)
  SharedDtor(*this);
}
inline void OrderStateStreamResponse::SharedDtor(MessageLite& self) {
  OrderStateStreamResponse& this_ = static_cast<OrderStateStreamResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void OrderStateStreamResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kOrderState: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_state_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_state_);
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.ping_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
      }
      break;
    }
    case kSubscription: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscription_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscription_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* OrderStateStreamResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderStateStreamResponse(arena);
}
constexpr auto OrderStateStreamResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OrderStateStreamResponse),
                                            alignof(OrderStateStreamResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderStateStreamResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderStateStreamResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderStateStreamResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderStateStreamResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderStateStreamResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderStateStreamResponse>(), &OrderStateStreamResponse::ByteSizeLong,
            &OrderStateStreamResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse, _impl_._cached_size_),
        false,
    },
    &OrderStateStreamResponse::kDescriptorMethods,
    &descriptor_table_orders_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderStateStreamResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> OrderStateStreamResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState order_state = 1;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse, _impl_.payload_.order_state_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Ping ping = 2;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse, _impl_.payload_.ping_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionResponse subscription = 3;
    {PROTOBUF_FIELD_OFFSET(OrderStateStreamResponse, _impl_.payload_.subscription_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Ping>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void OrderStateStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderStateStreamResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderStateStreamResponse& this_ = static_cast<const OrderStateStreamResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderStateStreamResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderStateStreamResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            case kOrderState: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.payload_.order_state_, this_._impl_.payload_.order_state_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPing: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.payload_.ping_, this_._impl_.payload_.ping_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubscription: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.payload_.subscription_, this_._impl_.payload_.subscription_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderStateStreamResponse::ByteSizeLong(const MessageLite& base) {
          const OrderStateStreamResponse& this_ = static_cast<const OrderStateStreamResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderStateStreamResponse::ByteSizeLong() const {
          const OrderStateStreamResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            // .tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse.OrderState order_state = 1;
            case kOrderState: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_state_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.Ping ping = 2;
            case kPing: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.ping_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.SubscriptionResponse subscription = 3;
            case kSubscription: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscription_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderStateStreamResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderStateStreamResponse*>(&to_msg);
  auto& from = static_cast<const OrderStateStreamResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kOrderState: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_state_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::OrderStateStreamResponse_OrderState>(arena, *from._impl_.payload_.order_state_);
        } else {
          _this->_impl_.payload_.order_state_->MergeFrom(from._internal_order_state());
        }
        break;
      }
      case kPing: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.ping_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        } else {
          _this->_impl_.payload_.ping_->MergeFrom(from._internal_ping());
        }
        break;
      }
      case kSubscription: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscription_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscriptionResponse>(arena, *from._impl_.payload_.subscription_);
        } else {
          _this->_impl_.payload_.subscription_->MergeFrom(from._internal_subscription());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderStateStreamResponse::CopyFrom(const OrderStateStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderStateStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderStateStreamResponse::InternalSwap(OrderStateStreamResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata OrderStateStreamResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_orders_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
