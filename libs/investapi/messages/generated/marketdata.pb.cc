// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: marketdata.proto
// Protobuf C++ Version: 5.29.3

#include "marketdata.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {

inline constexpr TradeSubscription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stream_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TradeSubscription::TradeSubscription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TradeSubscriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradeSubscriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradeSubscriptionDefaultTypeInternal() {}
  union {
    TradeSubscription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradeSubscriptionDefaultTypeInternal _TradeSubscription_default_instance_;

inline constexpr TradeInstrument::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TradeInstrument::TradeInstrument(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TradeInstrumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradeInstrumentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradeInstrumentDefaultTypeInternal() {}
  union {
    TradeInstrument _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradeInstrumentDefaultTypeInternal _TradeInstrument_default_instance_;

inline constexpr OrderBookSubscription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stream_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        depth_{0},
        subscription_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionStatus >(0)},
        order_book_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderBookType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderBookSubscription::OrderBookSubscription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderBookSubscriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderBookSubscriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderBookSubscriptionDefaultTypeInternal() {}
  union {
    OrderBookSubscription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderBookSubscriptionDefaultTypeInternal _OrderBookSubscription_default_instance_;

inline constexpr OrderBookInstrument::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        depth_{0},
        order_book_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderBookType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderBookInstrument::OrderBookInstrument(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderBookInstrumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderBookInstrumentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderBookInstrumentDefaultTypeInternal() {}
  union {
    OrderBookInstrument _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderBookInstrumentDefaultTypeInternal _OrderBookInstrument_default_instance_;

inline constexpr LastPriceSubscription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stream_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LastPriceSubscription::LastPriceSubscription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LastPriceSubscriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LastPriceSubscriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LastPriceSubscriptionDefaultTypeInternal() {}
  union {
    LastPriceSubscription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LastPriceSubscriptionDefaultTypeInternal _LastPriceSubscription_default_instance_;

inline constexpr LastPriceInstrument::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LastPriceInstrument::LastPriceInstrument(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LastPriceInstrumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LastPriceInstrumentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LastPriceInstrumentDefaultTypeInternal() {}
  union {
    LastPriceInstrument _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LastPriceInstrumentDefaultTypeInternal _LastPriceInstrument_default_instance_;

inline constexpr InstrumentClosePriceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InstrumentClosePriceRequest::InstrumentClosePriceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InstrumentClosePriceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstrumentClosePriceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstrumentClosePriceRequestDefaultTypeInternal() {}
  union {
    InstrumentClosePriceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstrumentClosePriceRequestDefaultTypeInternal _InstrumentClosePriceRequest_default_instance_;

inline constexpr InfoSubscription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stream_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InfoSubscription::InfoSubscription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InfoSubscriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoSubscriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoSubscriptionDefaultTypeInternal() {}
  union {
    InfoSubscription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoSubscriptionDefaultTypeInternal _InfoSubscription_default_instance_;

inline constexpr InfoInstrument::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InfoInstrument::InfoInstrument(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InfoInstrumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoInstrumentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoInstrumentDefaultTypeInternal() {}
  union {
    InfoInstrument _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoInstrumentDefaultTypeInternal _InfoInstrument_default_instance_;

inline constexpr GetTradingStatusesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instrument_id_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTradingStatusesRequest::GetTradingStatusesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTradingStatusesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTradingStatusesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTradingStatusesRequestDefaultTypeInternal() {}
  union {
    GetTradingStatusesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTradingStatusesRequestDefaultTypeInternal _GetTradingStatusesRequest_default_instance_;

inline constexpr GetTradingStatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trading_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SecurityTradingStatus >(0)},
        limit_order_available_flag_{false},
        market_order_available_flag_{false},
        api_trade_available_flag_{false},
        bestprice_order_available_flag_{false},
        only_best_price_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTradingStatusResponse::GetTradingStatusResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTradingStatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTradingStatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTradingStatusResponseDefaultTypeInternal() {}
  union {
    GetTradingStatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTradingStatusResponseDefaultTypeInternal _GetTradingStatusResponse_default_instance_;

inline constexpr GetTradingStatusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetTradingStatusRequest::GetTradingStatusRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTradingStatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTradingStatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTradingStatusRequestDefaultTypeInternal() {}
  union {
    GetTradingStatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTradingStatusRequestDefaultTypeInternal _GetTradingStatusRequest_default_instance_;

inline constexpr GetTechAnalysisRequest_Smoothing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : fast_length_{0},
        slow_length_{0},
        signal_smoothing_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTechAnalysisRequest_Smoothing::GetTechAnalysisRequest_Smoothing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTechAnalysisRequest_SmoothingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTechAnalysisRequest_SmoothingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTechAnalysisRequest_SmoothingDefaultTypeInternal() {}
  union {
    GetTechAnalysisRequest_Smoothing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTechAnalysisRequest_SmoothingDefaultTypeInternal _GetTechAnalysisRequest_Smoothing_default_instance_;

inline constexpr GetOrderBookRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        depth_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrderBookRequest::GetOrderBookRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetOrderBookRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrderBookRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrderBookRequestDefaultTypeInternal() {}
  union {
    GetOrderBookRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrderBookRequestDefaultTypeInternal _GetOrderBookRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR GetMySubscriptions::GetMySubscriptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GetMySubscriptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetMySubscriptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetMySubscriptionsDefaultTypeInternal() {}
  union {
    GetMySubscriptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetMySubscriptionsDefaultTypeInternal _GetMySubscriptions_default_instance_;

inline constexpr GetLastPricesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_{},
        instrument_id_{},
        last_price_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::LastPriceType >(0)},
        instrument_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::InstrumentStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetLastPricesRequest::GetLastPricesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetLastPricesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLastPricesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLastPricesRequestDefaultTypeInternal() {}
  union {
    GetLastPricesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLastPricesRequestDefaultTypeInternal _GetLastPricesRequest_default_instance_;

inline constexpr CandleSubscription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stream_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscription_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        interval_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionInterval >(0)},
        subscription_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionStatus >(0)},
        waiting_close_{false},
        candle_source_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest_CandleSource >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CandleSubscription::CandleSubscription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CandleSubscriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CandleSubscriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CandleSubscriptionDefaultTypeInternal() {}
  union {
    CandleSubscription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CandleSubscriptionDefaultTypeInternal _CandleSubscription_default_instance_;

inline constexpr CandleInstrument::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        interval_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionInterval >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CandleInstrument::CandleInstrument(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CandleInstrumentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CandleInstrumentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CandleInstrumentDefaultTypeInternal() {}
  union {
    CandleInstrument _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CandleInstrumentDefaultTypeInternal _CandleInstrument_default_instance_;

inline constexpr TradingStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{nullptr},
        trading_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SecurityTradingStatus >(0)},
        limit_order_available_flag_{false},
        market_order_available_flag_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TradingStatus::TradingStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TradingStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradingStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradingStatusDefaultTypeInternal() {}
  union {
    TradingStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradingStatusDefaultTypeInternal _TradingStatus_default_instance_;

inline constexpr Trade::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        time_{nullptr},
        quantity_{::int64_t{0}},
        direction_{static_cast< ::tinkoff::public_::invest::api::contract::v1::TradeDirection >(0)},
        trade_source_{static_cast< ::tinkoff::public_::invest::api::contract::v1::TradeSourceType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Trade::Trade(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradeDefaultTypeInternal() {}
  union {
    Trade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradeDefaultTypeInternal _Trade_default_instance_;

inline constexpr SubscribeTradesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trade_subscriptions_{},
        tracking_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trade_source_{static_cast< ::tinkoff::public_::invest::api::contract::v1::TradeSourceType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeTradesResponse::SubscribeTradesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeTradesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeTradesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeTradesResponseDefaultTypeInternal() {}
  union {
    SubscribeTradesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeTradesResponseDefaultTypeInternal _SubscribeTradesResponse_default_instance_;

inline constexpr SubscribeTradesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instruments_{},
        subscription_action_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionAction >(0)},
        trade_source_{static_cast< ::tinkoff::public_::invest::api::contract::v1::TradeSourceType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeTradesRequest::SubscribeTradesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeTradesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeTradesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeTradesRequestDefaultTypeInternal() {}
  union {
    SubscribeTradesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeTradesRequestDefaultTypeInternal _SubscribeTradesRequest_default_instance_;

inline constexpr SubscribeOrderBookResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : order_book_subscriptions_{},
        tracking_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeOrderBookResponse::SubscribeOrderBookResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeOrderBookResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeOrderBookResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeOrderBookResponseDefaultTypeInternal() {}
  union {
    SubscribeOrderBookResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeOrderBookResponseDefaultTypeInternal _SubscribeOrderBookResponse_default_instance_;

inline constexpr SubscribeOrderBookRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instruments_{},
        subscription_action_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionAction >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeOrderBookRequest::SubscribeOrderBookRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeOrderBookRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeOrderBookRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeOrderBookRequestDefaultTypeInternal() {}
  union {
    SubscribeOrderBookRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeOrderBookRequestDefaultTypeInternal _SubscribeOrderBookRequest_default_instance_;

inline constexpr SubscribeLastPriceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : last_price_subscriptions_{},
        tracking_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeLastPriceResponse::SubscribeLastPriceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeLastPriceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeLastPriceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeLastPriceResponseDefaultTypeInternal() {}
  union {
    SubscribeLastPriceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeLastPriceResponseDefaultTypeInternal _SubscribeLastPriceResponse_default_instance_;

inline constexpr SubscribeLastPriceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instruments_{},
        subscription_action_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionAction >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeLastPriceRequest::SubscribeLastPriceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeLastPriceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeLastPriceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeLastPriceRequestDefaultTypeInternal() {}
  union {
    SubscribeLastPriceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeLastPriceRequestDefaultTypeInternal _SubscribeLastPriceRequest_default_instance_;

inline constexpr SubscribeInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : info_subscriptions_{},
        tracking_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeInfoResponse::SubscribeInfoResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeInfoResponseDefaultTypeInternal() {}
  union {
    SubscribeInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeInfoResponseDefaultTypeInternal _SubscribeInfoResponse_default_instance_;

inline constexpr SubscribeInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : instruments_{},
        subscription_action_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionAction >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeInfoRequest::SubscribeInfoRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeInfoRequestDefaultTypeInternal() {}
  union {
    SubscribeInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeInfoRequestDefaultTypeInternal _SubscribeInfoRequest_default_instance_;

inline constexpr SubscribeCandlesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : candles_subscriptions_{},
        tracking_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeCandlesResponse::SubscribeCandlesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeCandlesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeCandlesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeCandlesResponseDefaultTypeInternal() {}
  union {
    SubscribeCandlesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeCandlesResponseDefaultTypeInternal _SubscribeCandlesResponse_default_instance_;

inline constexpr SubscribeCandlesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        instruments_{},
        subscription_action_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionAction >(0)},
        waiting_close_{false},
        candle_source_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest_CandleSource >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeCandlesRequest::SubscribeCandlesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeCandlesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeCandlesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeCandlesRequestDefaultTypeInternal() {}
  union {
    SubscribeCandlesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeCandlesRequestDefaultTypeInternal _SubscribeCandlesRequest_default_instance_;

inline constexpr Order::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        price_{nullptr},
        quantity_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Order::Order(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderDefaultTypeInternal() {}
  union {
    Order _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderDefaultTypeInternal _Order_default_instance_;

inline constexpr LastPrice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        time_{nullptr},
        last_price_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::LastPriceType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR LastPrice::LastPrice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LastPriceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LastPriceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LastPriceDefaultTypeInternal() {}
  union {
    LastPrice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LastPriceDefaultTypeInternal _LastPrice_default_instance_;

inline constexpr InstrumentClosePriceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        evening_session_price_{nullptr},
        time_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR InstrumentClosePriceResponse::InstrumentClosePriceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InstrumentClosePriceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstrumentClosePriceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstrumentClosePriceResponseDefaultTypeInternal() {}
  union {
    InstrumentClosePriceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstrumentClosePriceResponseDefaultTypeInternal _InstrumentClosePriceResponse_default_instance_;

inline constexpr HistoricCandle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        open_{nullptr},
        high_{nullptr},
        low_{nullptr},
        close_{nullptr},
        time_{nullptr},
        volume_{::int64_t{0}},
        is_complete_{false},
        candle_source_{static_cast< ::tinkoff::public_::invest::api::contract::v1::CandleSource >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR HistoricCandle::HistoricCandle(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoricCandleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoricCandleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoricCandleDefaultTypeInternal() {}
  union {
    HistoricCandle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoricCandleDefaultTypeInternal _HistoricCandle_default_instance_;

inline constexpr GetTradingStatusesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trading_statuses_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTradingStatusesResponse::GetTradingStatusesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTradingStatusesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTradingStatusesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTradingStatusesResponseDefaultTypeInternal() {}
  union {
    GetTradingStatusesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTradingStatusesResponseDefaultTypeInternal _GetTradingStatusesResponse_default_instance_;

inline constexpr GetTechAnalysisResponse_TechAnalysisItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{nullptr},
        middle_band_{nullptr},
        upper_band_{nullptr},
        lower_band_{nullptr},
        signal_{nullptr},
        macd_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetTechAnalysisResponse_TechAnalysisItem::GetTechAnalysisResponse_TechAnalysisItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTechAnalysisResponse_TechAnalysisItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTechAnalysisResponse_TechAnalysisItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTechAnalysisResponse_TechAnalysisItemDefaultTypeInternal() {}
  union {
    GetTechAnalysisResponse_TechAnalysisItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTechAnalysisResponse_TechAnalysisItemDefaultTypeInternal _GetTechAnalysisResponse_TechAnalysisItem_default_instance_;

inline constexpr GetTechAnalysisRequest_Deviation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        deviation_multiplier_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetTechAnalysisRequest_Deviation::GetTechAnalysisRequest_Deviation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTechAnalysisRequest_DeviationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTechAnalysisRequest_DeviationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTechAnalysisRequest_DeviationDefaultTypeInternal() {}
  union {
    GetTechAnalysisRequest_Deviation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTechAnalysisRequest_DeviationDefaultTypeInternal _GetTechAnalysisRequest_Deviation_default_instance_;

inline constexpr GetLastTradesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr},
        trade_source_{static_cast< ::tinkoff::public_::invest::api::contract::v1::TradeSourceType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetLastTradesRequest::GetLastTradesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetLastTradesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLastTradesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLastTradesRequestDefaultTypeInternal() {}
  union {
    GetLastTradesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLastTradesRequestDefaultTypeInternal _GetLastTradesRequest_default_instance_;

inline constexpr GetClosePricesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        instruments_{},
        instrument_status_{static_cast< ::tinkoff::public_::invest::api::contract::v1::InstrumentStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR GetClosePricesRequest::GetClosePricesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetClosePricesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetClosePricesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetClosePricesRequestDefaultTypeInternal() {}
  union {
    GetClosePricesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetClosePricesRequestDefaultTypeInternal _GetClosePricesRequest_default_instance_;

inline constexpr GetCandlesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr},
        interval_{static_cast< ::tinkoff::public_::invest::api::contract::v1::CandleInterval >(0)},
        candle_source_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest_CandleSource >(0)},
        limit_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetCandlesRequest::GetCandlesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetCandlesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCandlesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCandlesRequestDefaultTypeInternal() {}
  union {
    GetCandlesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCandlesRequestDefaultTypeInternal _GetCandlesRequest_default_instance_;

inline constexpr Candle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        open_{nullptr},
        high_{nullptr},
        low_{nullptr},
        close_{nullptr},
        time_{nullptr},
        last_trade_ts_{nullptr},
        volume_{::int64_t{0}},
        interval_{static_cast< ::tinkoff::public_::invest::api::contract::v1::SubscriptionInterval >(0)},
        candle_source_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::CandleSource >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Candle::Candle(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CandleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CandleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CandleDefaultTypeInternal() {}
  union {
    Candle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CandleDefaultTypeInternal _Candle_default_instance_;

inline constexpr OrderBook::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bids_{},
        asks_{},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{nullptr},
        limit_up_{nullptr},
        limit_down_{nullptr},
        depth_{0},
        is_consistent_{false},
        order_book_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::OrderBookType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OrderBook::OrderBook(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderBookDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderBookDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderBookDefaultTypeInternal() {}
  union {
    OrderBook _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderBookDefaultTypeInternal _OrderBook_default_instance_;

inline constexpr MarketDataServerSideStreamRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subscribe_candles_request_{nullptr},
        subscribe_order_book_request_{nullptr},
        subscribe_trades_request_{nullptr},
        subscribe_info_request_{nullptr},
        subscribe_last_price_request_{nullptr},
        ping_settings_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR MarketDataServerSideStreamRequest::MarketDataServerSideStreamRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MarketDataServerSideStreamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketDataServerSideStreamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketDataServerSideStreamRequestDefaultTypeInternal() {}
  union {
    MarketDataServerSideStreamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketDataServerSideStreamRequestDefaultTypeInternal _MarketDataServerSideStreamRequest_default_instance_;

inline constexpr MarketDataRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MarketDataRequest::MarketDataRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MarketDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketDataRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketDataRequestDefaultTypeInternal() {}
  union {
    MarketDataRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketDataRequestDefaultTypeInternal _MarketDataRequest_default_instance_;

inline constexpr GetTechAnalysisResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : technical_indicators_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTechAnalysisResponse::GetTechAnalysisResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTechAnalysisResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTechAnalysisResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTechAnalysisResponseDefaultTypeInternal() {}
  union {
    GetTechAnalysisResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTechAnalysisResponseDefaultTypeInternal _GetTechAnalysisResponse_default_instance_;

inline constexpr GetTechAnalysisRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_{nullptr},
        to_{nullptr},
        deviation_{nullptr},
        smoothing_{nullptr},
        indicator_type_{static_cast< ::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_IndicatorType >(0)},
        interval_{static_cast< ::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_IndicatorInterval >(0)},
        type_of_price_{static_cast< ::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_TypeOfPrice >(0)},
        length_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetTechAnalysisRequest::GetTechAnalysisRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTechAnalysisRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTechAnalysisRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTechAnalysisRequestDefaultTypeInternal() {}
  union {
    GetTechAnalysisRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTechAnalysisRequestDefaultTypeInternal _GetTechAnalysisRequest_default_instance_;

inline constexpr GetOrderBookResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bids_{},
        asks_{},
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instrument_uid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_price_{nullptr},
        close_price_{nullptr},
        limit_up_{nullptr},
        limit_down_{nullptr},
        last_price_ts_{nullptr},
        close_price_ts_{nullptr},
        orderbook_ts_{nullptr},
        depth_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetOrderBookResponse::GetOrderBookResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetOrderBookResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetOrderBookResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetOrderBookResponseDefaultTypeInternal() {}
  union {
    GetOrderBookResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetOrderBookResponseDefaultTypeInternal _GetOrderBookResponse_default_instance_;

inline constexpr GetLastTradesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trades_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetLastTradesResponse::GetLastTradesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetLastTradesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLastTradesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLastTradesResponseDefaultTypeInternal() {}
  union {
    GetLastTradesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLastTradesResponseDefaultTypeInternal _GetLastTradesResponse_default_instance_;

inline constexpr GetLastPricesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : last_prices_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetLastPricesResponse::GetLastPricesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetLastPricesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLastPricesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLastPricesResponseDefaultTypeInternal() {}
  union {
    GetLastPricesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLastPricesResponseDefaultTypeInternal _GetLastPricesResponse_default_instance_;

inline constexpr GetClosePricesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : close_prices_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetClosePricesResponse::GetClosePricesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetClosePricesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetClosePricesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetClosePricesResponseDefaultTypeInternal() {}
  union {
    GetClosePricesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetClosePricesResponseDefaultTypeInternal _GetClosePricesResponse_default_instance_;

inline constexpr GetCandlesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : candles_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetCandlesResponse::GetCandlesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetCandlesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCandlesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCandlesResponseDefaultTypeInternal() {}
  union {
    GetCandlesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCandlesResponseDefaultTypeInternal _GetCandlesResponse_default_instance_;

inline constexpr MarketDataResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MarketDataResponse::MarketDataResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MarketDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketDataResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketDataResponseDefaultTypeInternal() {}
  union {
    MarketDataResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketDataResponseDefaultTypeInternal _MarketDataResponse_default_instance_;
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_marketdata_2eproto[13];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_marketdata_2eproto = nullptr;
const ::uint32_t
    TableStruct_marketdata_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataRequest, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataServerSideStreamRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataServerSideStreamRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataServerSideStreamRequest, _impl_.subscribe_candles_request_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataServerSideStreamRequest, _impl_.subscribe_order_book_request_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataServerSideStreamRequest, _impl_.subscribe_trades_request_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataServerSideStreamRequest, _impl_.subscribe_info_request_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataServerSideStreamRequest, _impl_.subscribe_last_price_request_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataServerSideStreamRequest, _impl_.ping_settings_),
        0,
        1,
        2,
        3,
        4,
        5,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataResponse, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest, _impl_.subscription_action_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest, _impl_.instruments_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest, _impl_.waiting_close_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest, _impl_.candle_source_type_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleInstrument, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleInstrument, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleInstrument, _impl_.interval_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleInstrument, _impl_.instrument_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesResponse, _impl_.tracking_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesResponse, _impl_.candles_subscriptions_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleSubscription, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleSubscription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleSubscription, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleSubscription, _impl_.interval_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleSubscription, _impl_.subscription_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleSubscription, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleSubscription, _impl_.waiting_close_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleSubscription, _impl_.stream_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleSubscription, _impl_.subscription_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::CandleSubscription, _impl_.candle_source_type_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest, _impl_.subscription_action_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest, _impl_.instruments_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookInstrument, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookInstrument, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookInstrument, _impl_.depth_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookInstrument, _impl_.instrument_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookInstrument, _impl_.order_book_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookResponse, _impl_.tracking_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookResponse, _impl_.order_book_subscriptions_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription, _impl_.depth_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription, _impl_.subscription_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription, _impl_.stream_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription, _impl_.subscription_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription, _impl_.order_book_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest, _impl_.subscription_action_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest, _impl_.instruments_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest, _impl_.trade_source_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradeInstrument, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradeInstrument, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradeInstrument, _impl_.instrument_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesResponse, _impl_.tracking_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesResponse, _impl_.trade_subscriptions_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesResponse, _impl_.trade_source_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradeSubscription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradeSubscription, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradeSubscription, _impl_.subscription_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradeSubscription, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradeSubscription, _impl_.stream_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradeSubscription, _impl_.subscription_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest, _impl_.subscription_action_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest, _impl_.instruments_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InfoInstrument, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InfoInstrument, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InfoInstrument, _impl_.instrument_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeInfoResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeInfoResponse, _impl_.tracking_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeInfoResponse, _impl_.info_subscriptions_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InfoSubscription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InfoSubscription, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InfoSubscription, _impl_.subscription_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InfoSubscription, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InfoSubscription, _impl_.stream_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InfoSubscription, _impl_.subscription_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest, _impl_.subscription_action_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest, _impl_.instruments_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPriceInstrument, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPriceInstrument, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPriceInstrument, _impl_.instrument_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceResponse, _impl_.tracking_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceResponse, _impl_.last_price_subscriptions_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPriceSubscription, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPriceSubscription, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPriceSubscription, _impl_.subscription_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPriceSubscription, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPriceSubscription, _impl_.stream_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPriceSubscription, _impl_.subscription_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_.interval_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_.open_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_.high_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_.low_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_.close_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_.last_trade_ts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Candle, _impl_.candle_source_type_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        3,
        ~0u,
        4,
        5,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _impl_.depth_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _impl_.is_consistent_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _impl_.bids_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _impl_.asks_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _impl_.limit_up_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _impl_.limit_down_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::OrderBook, _impl_.order_book_type_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Order, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Order, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Order, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Order, _impl_.quantity_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Trade, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Trade, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Trade, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Trade, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Trade, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Trade, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Trade, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Trade, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::Trade, _impl_.trade_source_),
        ~0u,
        ~0u,
        0,
        ~0u,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradingStatus, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradingStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradingStatus, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradingStatus, _impl_.trading_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradingStatus, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradingStatus, _impl_.limit_order_available_flag_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradingStatus, _impl_.market_order_available_flag_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::TradingStatus, _impl_.instrument_uid_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest, _impl_.from_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest, _impl_.to_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest, _impl_.interval_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest, _impl_.instrument_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest, _impl_.candle_source_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest, _impl_.limit_),
        0,
        2,
        3,
        ~0u,
        1,
        4,
        5,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetCandlesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetCandlesResponse, _impl_.candles_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::HistoricCandle, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::HistoricCandle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::HistoricCandle, _impl_.open_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::HistoricCandle, _impl_.high_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::HistoricCandle, _impl_.low_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::HistoricCandle, _impl_.close_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::HistoricCandle, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::HistoricCandle, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::HistoricCandle, _impl_.is_complete_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::HistoricCandle, _impl_.candle_source_),
        0,
        1,
        2,
        3,
        ~0u,
        4,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastPricesRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastPricesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastPricesRequest, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastPricesRequest, _impl_.instrument_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastPricesRequest, _impl_.last_price_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastPricesRequest, _impl_.instrument_status_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastPricesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastPricesResponse, _impl_.last_prices_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPrice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPrice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPrice, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPrice, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPrice, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPrice, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::LastPrice, _impl_.last_price_type_),
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookRequest, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookRequest, _impl_.depth_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookRequest, _impl_.instrument_id_),
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.depth_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.bids_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.asks_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.last_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.close_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.limit_up_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.limit_down_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.last_price_ts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.close_price_ts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.orderbook_ts_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse, _impl_.instrument_uid_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusRequest, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusRequest, _impl_.instrument_id_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusesRequest, _impl_.instrument_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusesResponse, _impl_.trading_statuses_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse, _impl_.trading_status_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse, _impl_.limit_order_available_flag_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse, _impl_.market_order_available_flag_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse, _impl_.api_trade_available_flag_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse, _impl_.bestprice_order_available_flag_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse, _impl_.only_best_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastTradesRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastTradesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastTradesRequest, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastTradesRequest, _impl_.from_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastTradesRequest, _impl_.to_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastTradesRequest, _impl_.instrument_id_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastTradesRequest, _impl_.trade_source_),
        0,
        2,
        3,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastTradesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetLastTradesResponse, _impl_.trades_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetMySubscriptions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetClosePricesRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetClosePricesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetClosePricesRequest, _impl_.instruments_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetClosePricesRequest, _impl_.instrument_status_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceRequest, _impl_.instrument_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetClosePricesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetClosePricesResponse, _impl_.close_prices_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceResponse, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceResponse, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceResponse, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceResponse, _impl_.evening_session_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceResponse, _impl_.time_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Smoothing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Smoothing, _impl_.fast_length_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Smoothing, _impl_.slow_length_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Smoothing, _impl_.signal_smoothing_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Deviation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Deviation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Deviation, _impl_.deviation_multiplier_),
        0,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest, _impl_.indicator_type_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest, _impl_.instrument_uid_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest, _impl_.from_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest, _impl_.to_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest, _impl_.interval_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest, _impl_.type_of_price_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest, _impl_.length_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest, _impl_.deviation_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest, _impl_.smoothing_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem, _impl_.middle_band_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem, _impl_.upper_band_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem, _impl_.lower_band_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem, _impl_.signal_),
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem, _impl_.macd_),
        0,
        1,
        2,
        3,
        4,
        5,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse, _impl_.technical_indicators_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::MarketDataRequest)},
        {17, 31, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::MarketDataServerSideStreamRequest)},
        {37, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::MarketDataResponse)},
        {57, 69, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest)},
        {73, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::CandleInstrument)},
        {84, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesResponse)},
        {94, 110, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::CandleSubscription)},
        {118, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest)},
        {128, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OrderBookInstrument)},
        {140, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookResponse)},
        {150, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription)},
        {165, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest)},
        {176, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::TradeInstrument)},
        {186, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesResponse)},
        {197, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::TradeSubscription)},
        {210, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest)},
        {220, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::InfoInstrument)},
        {230, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SubscribeInfoResponse)},
        {240, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::InfoSubscription)},
        {253, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest)},
        {263, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::LastPriceInstrument)},
        {273, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceResponse)},
        {283, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::LastPriceSubscription)},
        {296, 315, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::Candle)},
        {326, 344, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::OrderBook)},
        {354, 364, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::Order)},
        {366, 381, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::Trade)},
        {388, 402, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::TradingStatus)},
        {408, 423, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest)},
        {430, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetCandlesResponse)},
        {439, 455, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::HistoricCandle)},
        {463, 475, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetLastPricesRequest)},
        {479, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetLastPricesResponse)},
        {488, 501, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::LastPrice)},
        {506, 517, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetOrderBookRequest)},
        {520, 540, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse)},
        {552, 562, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusRequest)},
        {564, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusesRequest)},
        {573, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusesResponse)},
        {582, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse)},
        {598, 611, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetLastTradesRequest)},
        {616, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetLastTradesResponse)},
        {625, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetMySubscriptions)},
        {633, 643, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetClosePricesRequest)},
        {645, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceRequest)},
        {654, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetClosePricesResponse)},
        {663, 676, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceResponse)},
        {681, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Smoothing)},
        {692, 701, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Deviation)},
        {702, 719, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest)},
        {728, 742, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem)},
        {748, -1, -1, sizeof(::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tinkoff::public_::invest::api::contract::v1::_MarketDataRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_MarketDataServerSideStreamRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_MarketDataResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SubscribeCandlesRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_CandleInstrument_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SubscribeCandlesResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_CandleSubscription_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SubscribeOrderBookRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_OrderBookInstrument_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SubscribeOrderBookResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_OrderBookSubscription_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SubscribeTradesRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_TradeInstrument_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SubscribeTradesResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_TradeSubscription_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SubscribeInfoRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_InfoInstrument_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SubscribeInfoResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_InfoSubscription_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SubscribeLastPriceRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_LastPriceInstrument_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_SubscribeLastPriceResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_LastPriceSubscription_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_Candle_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_OrderBook_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_Order_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_Trade_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_TradingStatus_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetCandlesRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetCandlesResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_HistoricCandle_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetLastPricesRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetLastPricesResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_LastPrice_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetOrderBookRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetOrderBookResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetTradingStatusRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetTradingStatusesRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetTradingStatusesResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetTradingStatusResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetLastTradesRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetLastTradesResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetMySubscriptions_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetClosePricesRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_InstrumentClosePriceRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetClosePricesResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_InstrumentClosePriceResponse_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetTechAnalysisRequest_Smoothing_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetTechAnalysisRequest_Deviation_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetTechAnalysisRequest_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetTechAnalysisResponse_TechAnalysisItem_default_instance_._instance,
    &::tinkoff::public_::invest::api::contract::v1::_GetTechAnalysisResponse_default_instance_._instance,
};
const char descriptor_table_protodef_marketdata_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020marketdata.proto\022%tinkoff.public.inves"
    "t.api.contract.v1\032\037google/protobuf/times"
    "tamp.proto\032\014common.proto\032\037google/api/fie"
    "ld_behavior.proto\"\213\006\n\021MarketDataRequest\022"
    "c\n\031subscribe_candles_request\030\001 \001(\0132>.tin"
    "koff.public.invest.api.contract.v1.Subsc"
    "ribeCandlesRequestH\000\022h\n\034subscribe_order_"
    "book_request\030\002 \001(\0132@.tinkoff.public.inve"
    "st.api.contract.v1.SubscribeOrderBookReq"
    "uestH\000\022a\n\030subscribe_trades_request\030\003 \001(\013"
    "2=.tinkoff.public.invest.api.contract.v1"
    ".SubscribeTradesRequestH\000\022]\n\026subscribe_i"
    "nfo_request\030\004 \001(\0132;.tinkoff.public.inves"
    "t.api.contract.v1.SubscribeInfoRequestH\000"
    "\022h\n\034subscribe_last_price_request\030\005 \001(\0132@"
    ".tinkoff.public.invest.api.contract.v1.S"
    "ubscribeLastPriceRequestH\000\022Y\n\024get_my_sub"
    "scriptions\030\006 \001(\01329.tinkoff.public.invest"
    ".api.contract.v1.GetMySubscriptionsH\000\022B\n"
    "\004ping\030\007 \001(\01322.tinkoff.public.invest.api."
    "contract.v1.PingRequestH\000\022Q\n\rping_settin"
    "gs\030\017 \001(\01328.tinkoff.public.invest.api.con"
    "tract.v1.PingDelaySettingsH\000B\t\n\007payload\""
    "\345\004\n!MarketDataServerSideStreamRequest\022a\n"
    "\031subscribe_candles_request\030\001 \001(\0132>.tinko"
    "ff.public.invest.api.contract.v1.Subscri"
    "beCandlesRequest\022f\n\034subscribe_order_book"
    "_request\030\002 \001(\0132@.tinkoff.public.invest.a"
    "pi.contract.v1.SubscribeOrderBookRequest"
    "\022_\n\030subscribe_trades_request\030\003 \001(\0132=.tin"
    "koff.public.invest.api.contract.v1.Subsc"
    "ribeTradesRequest\022[\n\026subscribe_info_requ"
    "est\030\004 \001(\0132;.tinkoff.public.invest.api.co"
    "ntract.v1.SubscribeInfoRequest\022f\n\034subscr"
    "ibe_last_price_request\030\005 \001(\0132@.tinkoff.p"
    "ublic.invest.api.contract.v1.SubscribeLa"
    "stPriceRequest\022O\n\rping_settings\030\017 \001(\01328."
    "tinkoff.public.invest.api.contract.v1.Pi"
    "ngDelaySettings\"\300\007\n\022MarketDataResponse\022e"
    "\n\032subscribe_candles_response\030\001 \001(\0132\?.tin"
    "koff.public.invest.api.contract.v1.Subsc"
    "ribeCandlesResponseH\000\022j\n\035subscribe_order"
    "_book_response\030\002 \001(\0132A.tinkoff.public.in"
    "vest.api.contract.v1.SubscribeOrderBookR"
    "esponseH\000\022c\n\031subscribe_trades_response\030\003"
    " \001(\0132>.tinkoff.public.invest.api.contrac"
    "t.v1.SubscribeTradesResponseH\000\022_\n\027subscr"
    "ibe_info_response\030\004 \001(\0132<.tinkoff.public"
    ".invest.api.contract.v1.SubscribeInfoRes"
    "ponseH\000\022\?\n\006candle\030\005 \001(\0132-.tinkoff.public"
    ".invest.api.contract.v1.CandleH\000\022=\n\005trad"
    "e\030\006 \001(\0132,.tinkoff.public.invest.api.cont"
    "ract.v1.TradeH\000\022E\n\torderbook\030\007 \001(\01320.tin"
    "koff.public.invest.api.contract.v1.Order"
    "BookH\000\022N\n\016trading_status\030\010 \001(\01324.tinkoff"
    ".public.invest.api.contract.v1.TradingSt"
    "atusH\000\022;\n\004ping\030\t \001(\0132+.tinkoff.public.in"
    "vest.api.contract.v1.PingH\000\022j\n\035subscribe"
    "_last_price_response\030\n \001(\0132A.tinkoff.pub"
    "lic.invest.api.contract.v1.SubscribeLast"
    "PriceResponseH\000\022F\n\nlast_price\030\013 \001(\01320.ti"
    "nkoff.public.invest.api.contract.v1.Last"
    "PriceH\000B\t\n\007payload\"\325\002\n\027SubscribeCandlesR"
    "equest\022V\n\023subscription_action\030\001 \001(\01629.ti"
    "nkoff.public.invest.api.contract.v1.Subs"
    "criptionAction\022L\n\013instruments\030\002 \003(\01327.ti"
    "nkoff.public.invest.api.contract.v1.Cand"
    "leInstrument\022\025\n\rwaiting_close\030\003 \001(\010\022f\n\022c"
    "andle_source_type\030\t \001(\0162E.tinkoff.public"
    ".invest.api.contract.v1.GetCandlesReques"
    "t.CandleSourceH\000\210\001\001B\025\n\023_candle_source_ty"
    "pe\"\212\001\n\020CandleInstrument\022\020\n\004figi\030\001 \001(\tB\002\030"
    "\001\022M\n\010interval\030\002 \001(\0162;.tinkoff.public.inv"
    "est.api.contract.v1.SubscriptionInterval"
    "\022\025\n\rinstrument_id\030\003 \001(\t\"\211\001\n\030SubscribeCan"
    "dlesResponse\022\023\n\013tracking_id\030\001 \001(\t\022X\n\025can"
    "dles_subscriptions\030\002 \003(\01329.tinkoff.publi"
    "c.invest.api.contract.v1.CandleSubscript"
    "ion\"\243\003\n\022CandleSubscription\022\014\n\004figi\030\001 \001(\t"
    "\022M\n\010interval\030\002 \001(\0162;.tinkoff.public.inve"
    "st.api.contract.v1.SubscriptionInterval\022"
    "V\n\023subscription_status\030\003 \001(\01629.tinkoff.p"
    "ublic.invest.api.contract.v1.Subscriptio"
    "nStatus\022\026\n\016instrument_uid\030\004 \001(\t\022\025\n\rwaiti"
    "ng_close\030\005 \001(\010\022\021\n\tstream_id\030\006 \001(\t\022\027\n\017sub"
    "scription_id\030\007 \001(\t\022f\n\022candle_source_type"
    "\030\t \001(\0162E.tinkoff.public.invest.api.contr"
    "act.v1.GetCandlesRequest.CandleSourceH\000\210"
    "\001\001B\025\n\023_candle_source_type\"\304\001\n\031SubscribeO"
    "rderBookRequest\022V\n\023subscription_action\030\001"
    " \001(\01629.tinkoff.public.invest.api.contrac"
    "t.v1.SubscriptionAction\022O\n\013instruments\030\002"
    " \003(\0132:.tinkoff.public.invest.api.contrac"
    "t.v1.OrderBookInstrument\"\234\001\n\023OrderBookIn"
    "strument\022\020\n\004figi\030\001 \001(\tB\002\030\001\022\r\n\005depth\030\002 \001("
    "\005\022\025\n\rinstrument_id\030\003 \001(\t\022M\n\017order_book_t"
    "ype\030\004 \001(\01624.tinkoff.public.invest.api.co"
    "ntract.v1.OrderBookType\"\221\001\n\032SubscribeOrd"
    "erBookResponse\022\023\n\013tracking_id\030\001 \001(\t\022^\n\030o"
    "rder_book_subscriptions\030\002 \003(\0132<.tinkoff."
    "public.invest.api.contract.v1.OrderBookS"
    "ubscription\"\237\002\n\025OrderBookSubscription\022\014\n"
    "\004figi\030\001 \001(\t\022\r\n\005depth\030\002 \001(\005\022V\n\023subscripti"
    "on_status\030\003 \001(\01629.tinkoff.public.invest."
    "api.contract.v1.SubscriptionStatus\022\026\n\016in"
    "strument_uid\030\004 \001(\t\022\021\n\tstream_id\030\005 \001(\t\022\027\n"
    "\017subscription_id\030\006 \001(\t\022M\n\017order_book_typ"
    "e\030\007 \001(\01624.tinkoff.public.invest.api.cont"
    "ract.v1.OrderBookType\"\213\002\n\026SubscribeTrade"
    "sRequest\022V\n\023subscription_action\030\001 \001(\01629."
    "tinkoff.public.invest.api.contract.v1.Su"
    "bscriptionAction\022K\n\013instruments\030\002 \003(\01326."
    "tinkoff.public.invest.api.contract.v1.Tr"
    "adeInstrument\022L\n\014trade_source\030\003 \001(\01626.ti"
    "nkoff.public.invest.api.contract.v1.Trad"
    "eSourceType\":\n\017TradeInstrument\022\020\n\004figi\030\001"
    " \001(\tB\002\030\001\022\025\n\rinstrument_id\030\002 \001(\t\"\323\001\n\027Subs"
    "cribeTradesResponse\022\023\n\013tracking_id\030\001 \001(\t"
    "\022U\n\023trade_subscriptions\030\002 \003(\01328.tinkoff."
    "public.invest.api.contract.v1.TradeSubsc"
    "ription\022L\n\014trade_source\030\003 \001(\01626.tinkoff."
    "public.invest.api.contract.v1.TradeSourc"
    "eType\"\275\001\n\021TradeSubscription\022\014\n\004figi\030\001 \001("
    "\t\022V\n\023subscription_status\030\002 \001(\01629.tinkoff"
    ".public.invest.api.contract.v1.Subscript"
    "ionStatus\022\026\n\016instrument_uid\030\003 \001(\t\022\021\n\tstr"
    "eam_id\030\004 \001(\t\022\027\n\017subscription_id\030\005 \001(\t\"\272\001"
    "\n\024SubscribeInfoRequest\022V\n\023subscription_a"
    "ction\030\001 \001(\01629.tinkoff.public.invest.api."
    "contract.v1.SubscriptionAction\022J\n\013instru"
    "ments\030\002 \003(\01325.tinkoff.public.invest.api."
    "contract.v1.InfoInstrument\"9\n\016InfoInstru"
    "ment\022\020\n\004figi\030\001 \001(\tB\002\030\001\022\025\n\rinstrument_id\030"
    "\002 \001(\t\"\201\001\n\025SubscribeInfoResponse\022\023\n\013track"
    "ing_id\030\001 \001(\t\022S\n\022info_subscriptions\030\002 \003(\013"
    "27.tinkoff.public.invest.api.contract.v1"
    ".InfoSubscription\"\274\001\n\020InfoSubscription\022\014"
    "\n\004figi\030\001 \001(\t\022V\n\023subscription_status\030\002 \001("
    "\01629.tinkoff.public.invest.api.contract.v"
    "1.SubscriptionStatus\022\026\n\016instrument_uid\030\003"
    " \001(\t\022\021\n\tstream_id\030\004 \001(\t\022\027\n\017subscription_"
    "id\030\005 \001(\t\"\304\001\n\031SubscribeLastPriceRequest\022V"
    "\n\023subscription_action\030\001 \001(\01629.tinkoff.pu"
    "blic.invest.api.contract.v1.Subscription"
    "Action\022O\n\013instruments\030\002 \003(\0132:.tinkoff.pu"
    "blic.invest.api.contract.v1.LastPriceIns"
    "trument\">\n\023LastPriceInstrument\022\020\n\004figi\030\001"
    " \001(\tB\002\030\001\022\025\n\rinstrument_id\030\002 \001(\t\"\221\001\n\032Subs"
    "cribeLastPriceResponse\022\023\n\013tracking_id\030\001 "
    "\001(\t\022^\n\030last_price_subscriptions\030\002 \003(\0132<."
    "tinkoff.public.invest.api.contract.v1.La"
    "stPriceSubscription\"\301\001\n\025LastPriceSubscri"
    "ption\022\014\n\004figi\030\001 \001(\t\022V\n\023subscription_stat"
    "us\030\002 \001(\01629.tinkoff.public.invest.api.con"
    "tract.v1.SubscriptionStatus\022\026\n\016instrumen"
    "t_uid\030\003 \001(\t\022\021\n\tstream_id\030\004 \001(\t\022\027\n\017subscr"
    "iption_id\030\005 \001(\t\"\273\004\n\006Candle\022\014\n\004figi\030\001 \001(\t"
    "\022M\n\010interval\030\002 \001(\0162;.tinkoff.public.inve"
    "st.api.contract.v1.SubscriptionInterval\022"
    ">\n\004open\030\003 \001(\01320.tinkoff.public.invest.ap"
    "i.contract.v1.Quotation\022>\n\004high\030\004 \001(\01320."
    "tinkoff.public.invest.api.contract.v1.Qu"
    "otation\022=\n\003low\030\005 \001(\01320.tinkoff.public.in"
    "vest.api.contract.v1.Quotation\022\?\n\005close\030"
    "\006 \001(\01320.tinkoff.public.invest.api.contra"
    "ct.v1.Quotation\022\016\n\006volume\030\007 \001(\003\022(\n\004time\030"
    "\010 \001(\0132\032.google.protobuf.Timestamp\0221\n\rlas"
    "t_trade_ts\030\t \001(\0132\032.google.protobuf.Times"
    "tamp\022\026\n\016instrument_uid\030\n \001(\t\022O\n\022candle_s"
    "ource_type\030\023 \001(\01623.tinkoff.public.invest"
    ".api.contract.v1.CandleSource\"\322\003\n\tOrderB"
    "ook\022\014\n\004figi\030\001 \001(\t\022\r\n\005depth\030\002 \001(\005\022\025\n\ris_c"
    "onsistent\030\003 \001(\010\022:\n\004bids\030\004 \003(\0132,.tinkoff."
    "public.invest.api.contract.v1.Order\022:\n\004a"
    "sks\030\005 \003(\0132,.tinkoff.public.invest.api.co"
    "ntract.v1.Order\022(\n\004time\030\006 \001(\0132\032.google.p"
    "rotobuf.Timestamp\022B\n\010limit_up\030\007 \001(\01320.ti"
    "nkoff.public.invest.api.contract.v1.Quot"
    "ation\022D\n\nlimit_down\030\010 \001(\01320.tinkoff.publ"
    "ic.invest.api.contract.v1.Quotation\022\026\n\016i"
    "nstrument_uid\030\t \001(\t\022M\n\017order_book_type\030\n"
    " \001(\01624.tinkoff.public.invest.api.contrac"
    "t.v1.OrderBookType\"Z\n\005Order\022\?\n\005price\030\001 \001"
    "(\01320.tinkoff.public.invest.api.contract."
    "v1.Quotation\022\020\n\010quantity\030\002 \001(\003\"\302\002\n\005Trade"
    "\022\014\n\004figi\030\001 \001(\t\022H\n\tdirection\030\002 \001(\01625.tink"
    "off.public.invest.api.contract.v1.TradeD"
    "irection\022\?\n\005price\030\003 \001(\01320.tinkoff.public"
    ".invest.api.contract.v1.Quotation\022\020\n\010qua"
    "ntity\030\004 \001(\003\022(\n\004time\030\005 \001(\0132\032.google.proto"
    "buf.Timestamp\022\026\n\016instrument_uid\030\006 \001(\t\022L\n"
    "\014trade_source\030\007 \001(\01626.tinkoff.public.inv"
    "est.api.contract.v1.TradeSourceType\"\376\001\n\r"
    "TradingStatus\022\014\n\004figi\030\001 \001(\t\022T\n\016trading_s"
    "tatus\030\002 \001(\0162<.tinkoff.public.invest.api."
    "contract.v1.SecurityTradingStatus\022(\n\004tim"
    "e\030\003 \001(\0132\032.google.protobuf.Timestamp\022\"\n\032l"
    "imit_order_available_flag\030\004 \001(\010\022#\n\033marke"
    "t_order_available_flag\030\005 \001(\010\022\026\n\016instrume"
    "nt_uid\030\006 \001(\t\"\231\004\n\021GetCandlesRequest\022\025\n\004fi"
    "gi\030\001 \001(\tB\002\030\001H\000\210\001\001\022.\n\004from\030\002 \001(\0132\032.google"
    ".protobuf.TimestampB\004\342A\001\002\022,\n\002to\030\003 \001(\0132\032."
    "google.protobuf.TimestampB\004\342A\001\002\022M\n\010inter"
    "val\030\004 \001(\01625.tinkoff.public.invest.api.co"
    "ntract.v1.CandleIntervalB\004\342A\001\002\022\032\n\rinstru"
    "ment_id\030\005 \001(\tH\001\210\001\001\022f\n\022candle_source_type"
    "\030\007 \001(\0162E.tinkoff.public.invest.api.contr"
    "act.v1.GetCandlesRequest.CandleSourceH\002\210"
    "\001\001\022\022\n\005limit\030\n \001(\005H\003\210\001\001\"l\n\014CandleSource\022\035"
    "\n\031CANDLE_SOURCE_UNSPECIFIED\020\000\022\032\n\026CANDLE_"
    "SOURCE_EXCHANGE\020\001\022!\n\035CANDLE_SOURCE_INCLU"
    "DE_WEEKEND\020\003B\007\n\005_figiB\020\n\016_instrument_idB"
    "\025\n\023_candle_source_typeB\010\n\006_limit\"\\\n\022GetC"
    "andlesResponse\022F\n\007candles\030\001 \003(\01325.tinkof"
    "f.public.invest.api.contract.v1.Historic"
    "Candle\"\253\003\n\016HistoricCandle\022>\n\004open\030\001 \001(\0132"
    "0.tinkoff.public.invest.api.contract.v1."
    "Quotation\022>\n\004high\030\002 \001(\01320.tinkoff.public"
    ".invest.api.contract.v1.Quotation\022=\n\003low"
    "\030\003 \001(\01320.tinkoff.public.invest.api.contr"
    "act.v1.Quotation\022\?\n\005close\030\004 \001(\01320.tinkof"
    "f.public.invest.api.contract.v1.Quotatio"
    "n\022\016\n\006volume\030\005 \001(\003\022(\n\004time\030\006 \001(\0132\032.google"
    ".protobuf.Timestamp\022\023\n\013is_complete\030\007 \001(\010"
    "\022J\n\rcandle_source\030\t \001(\01623.tinkoff.public"
    ".invest.api.contract.v1.CandleSource\"\375\001\n"
    "\024GetLastPricesRequest\022\020\n\004figi\030\001 \003(\tB\002\030\001\022"
    "\025\n\rinstrument_id\030\002 \003(\t\022M\n\017last_price_typ"
    "e\030\003 \001(\01624.tinkoff.public.invest.api.cont"
    "ract.v1.LastPriceType\022W\n\021instrument_stat"
    "us\030\t \001(\01627.tinkoff.public.invest.api.con"
    "tract.v1.InstrumentStatusH\000\210\001\001B\024\n\022_instr"
    "ument_status\"^\n\025GetLastPricesResponse\022E\n"
    "\013last_prices\030\001 \003(\01320.tinkoff.public.inve"
    "st.api.contract.v1.LastPrice\"\353\001\n\tLastPri"
    "ce\022\014\n\004figi\030\001 \001(\t\022\?\n\005price\030\002 \001(\01320.tinkof"
    "f.public.invest.api.contract.v1.Quotatio"
    "n\022(\n\004time\030\003 \001(\0132\032.google.protobuf.Timest"
    "amp\022\026\n\016instrument_uid\030\013 \001(\t\022M\n\017last_pric"
    "e_type\030\014 \001(\01624.tinkoff.public.invest.api"
    ".contract.v1.LastPriceType\"x\n\023GetOrderBo"
    "okRequest\022\025\n\004figi\030\001 \001(\tB\002\030\001H\000\210\001\001\022\023\n\005dept"
    "h\030\002 \001(\005B\004\342A\001\002\022\032\n\rinstrument_id\030\003 \001(\tH\001\210\001"
    "\001B\007\n\005_figiB\020\n\016_instrument_id\"\363\004\n\024GetOrde"
    "rBookResponse\022\014\n\004figi\030\001 \001(\t\022\r\n\005depth\030\002 \001"
    "(\005\022:\n\004bids\030\003 \003(\0132,.tinkoff.public.invest"
    ".api.contract.v1.Order\022:\n\004asks\030\004 \003(\0132,.t"
    "inkoff.public.invest.api.contract.v1.Ord"
    "er\022D\n\nlast_price\030\005 \001(\01320.tinkoff.public."
    "invest.api.contract.v1.Quotation\022E\n\013clos"
    "e_price\030\006 \001(\01320.tinkoff.public.invest.ap"
    "i.contract.v1.Quotation\022B\n\010limit_up\030\007 \001("
    "\01320.tinkoff.public.invest.api.contract.v"
    "1.Quotation\022D\n\nlimit_down\030\010 \001(\01320.tinkof"
    "f.public.invest.api.contract.v1.Quotatio"
    "n\0221\n\rlast_price_ts\030\025 \001(\0132\032.google.protob"
    "uf.Timestamp\0222\n\016close_price_ts\030\026 \001(\0132\032.g"
    "oogle.protobuf.Timestamp\0220\n\014orderbook_ts"
    "\030\027 \001(\0132\032.google.protobuf.Timestamp\022\026\n\016in"
    "strument_uid\030\t \001(\t\"g\n\027GetTradingStatusRe"
    "quest\022\025\n\004figi\030\001 \001(\tB\002\030\001H\000\210\001\001\022\032\n\rinstrume"
    "nt_id\030\002 \001(\tH\001\210\001\001B\007\n\005_figiB\020\n\016_instrument"
    "_id\"2\n\031GetTradingStatusesRequest\022\025\n\rinst"
    "rument_id\030\001 \003(\t\"w\n\032GetTradingStatusesRes"
    "ponse\022Y\n\020trading_statuses\030\001 \003(\0132\?.tinkof"
    "f.public.invest.api.contract.v1.GetTradi"
    "ngStatusResponse\"\302\002\n\030GetTradingStatusRes"
    "ponse\022\014\n\004figi\030\001 \001(\t\022T\n\016trading_status\030\002 "
    "\001(\0162<.tinkoff.public.invest.api.contract"
    ".v1.SecurityTradingStatus\022\"\n\032limit_order"
    "_available_flag\030\003 \001(\010\022#\n\033market_order_av"
    "ailable_flag\030\004 \001(\010\022 \n\030api_trade_availabl"
    "e_flag\030\005 \001(\010\022\026\n\016instrument_uid\030\006 \001(\t\022&\n\036"
    "bestprice_order_available_flag\030\010 \001(\010\022\027\n\017"
    "only_best_price\030\t \001(\010\"\220\002\n\024GetLastTradesR"
    "equest\022\025\n\004figi\030\001 \001(\tB\002\030\001H\000\210\001\001\022.\n\004from\030\002 "
    "\001(\0132\032.google.protobuf.TimestampB\004\342A\001\002\022,\n"
    "\002to\030\003 \001(\0132\032.google.protobuf.TimestampB\004\342"
    "A\001\002\022\032\n\rinstrument_id\030\004 \001(\tH\001\210\001\001\022L\n\014trade"
    "_source\030\005 \001(\01626.tinkoff.public.invest.ap"
    "i.contract.v1.TradeSourceTypeB\007\n\005_figiB\020"
    "\n\016_instrument_id\"U\n\025GetLastTradesRespons"
    "e\022<\n\006trades\030\001 \003(\0132,.tinkoff.public.inves"
    "t.api.contract.v1.Trade\"\024\n\022GetMySubscrip"
    "tions\"\345\001\n\025GetClosePricesRequest\022]\n\013instr"
    "uments\030\001 \003(\0132B.tinkoff.public.invest.api"
    ".contract.v1.InstrumentClosePriceRequest"
    "B\004\342A\001\002\022W\n\021instrument_status\030\t \001(\01627.tink"
    "off.public.invest.api.contract.v1.Instru"
    "mentStatusH\000\210\001\001B\024\n\022_instrument_status\"4\n"
    "\033InstrumentClosePriceRequest\022\025\n\rinstrume"
    "nt_id\030\001 \001(\t\"s\n\026GetClosePricesResponse\022Y\n"
    "\014close_prices\030\001 \003(\0132C.tinkoff.public.inv"
    "est.api.contract.v1.InstrumentClosePrice"
    "Response\"\200\002\n\034InstrumentClosePriceRespons"
    "e\022\014\n\004figi\030\001 \001(\t\022\026\n\016instrument_uid\030\002 \001(\t\022"
    "\?\n\005price\030\013 \001(\01320.tinkoff.public.invest.a"
    "pi.contract.v1.Quotation\022O\n\025evening_sess"
    "ion_price\030\014 \001(\01320.tinkoff.public.invest."
    "api.contract.v1.Quotation\022(\n\004time\030\025 \001(\0132"
    "\032.google.protobuf.Timestamp\"\364\014\n\026GetTechA"
    "nalysisRequest\022i\n\016indicator_type\030\001 \001(\0162K"
    ".tinkoff.public.invest.api.contract.v1.G"
    "etTechAnalysisRequest.IndicatorTypeB\004\342A\001"
    "\002\022\034\n\016instrument_uid\030\002 \001(\tB\004\342A\001\002\022.\n\004from\030"
    "\003 \001(\0132\032.google.protobuf.TimestampB\004\342A\001\002\022"
    ",\n\002to\030\004 \001(\0132\032.google.protobuf.TimestampB"
    "\004\342A\001\002\022g\n\010interval\030\005 \001(\0162O.tinkoff.public"
    ".invest.api.contract.v1.GetTechAnalysisR"
    "equest.IndicatorIntervalB\004\342A\001\002\022f\n\rtype_o"
    "f_price\030\006 \001(\0162I.tinkoff.public.invest.ap"
    "i.contract.v1.GetTechAnalysisRequest.Typ"
    "eOfPriceB\004\342A\001\002\022\016\n\006length\030\007 \001(\005\022Z\n\tdeviat"
    "ion\030\010 \001(\0132G.tinkoff.public.invest.api.co"
    "ntract.v1.GetTechAnalysisRequest.Deviati"
    "on\022Z\n\tsmoothing\030\t \001(\0132G.tinkoff.public.i"
    "nvest.api.contract.v1.GetTechAnalysisReq"
    "uest.Smoothing\032O\n\tSmoothing\022\023\n\013fast_leng"
    "th\030\001 \001(\005\022\023\n\013slow_length\030\002 \001(\005\022\030\n\020signal_"
    "smoothing\030\003 \001(\005\032[\n\tDeviation\022N\n\024deviatio"
    "n_multiplier\030\001 \001(\01320.tinkoff.public.inve"
    "st.api.contract.v1.Quotation\"\333\003\n\021Indicat"
    "orInterval\022\"\n\036INDICATOR_INTERVAL_UNSPECI"
    "FIED\020\000\022!\n\035INDICATOR_INTERVAL_ONE_MINUTE\020"
    "\001\022#\n\037INDICATOR_INTERVAL_FIVE_MINUTES\020\002\022&"
    "\n\"INDICATOR_INTERVAL_FIFTEEN_MINUTES\020\003\022\037"
    "\n\033INDICATOR_INTERVAL_ONE_HOUR\020\004\022\036\n\032INDIC"
    "ATOR_INTERVAL_ONE_DAY\020\005\022\034\n\030INDICATOR_INT"
    "ERVAL_2_MIN\020\006\022\034\n\030INDICATOR_INTERVAL_3_MI"
    "N\020\007\022\035\n\031INDICATOR_INTERVAL_10_MIN\020\010\022\035\n\031IN"
    "DICATOR_INTERVAL_30_MIN\020\t\022\035\n\031INDICATOR_I"
    "NTERVAL_2_HOUR\020\n\022\035\n\031INDICATOR_INTERVAL_4"
    "_HOUR\020\013\022\033\n\027INDICATOR_INTERVAL_WEEK\020\014\022\034\n\030"
    "INDICATOR_INTERVAL_MONTH\020\r\"\243\001\n\013TypeOfPri"
    "ce\022\035\n\031TYPE_OF_PRICE_UNSPECIFIED\020\000\022\027\n\023TYP"
    "E_OF_PRICE_CLOSE\020\001\022\026\n\022TYPE_OF_PRICE_OPEN"
    "\020\002\022\026\n\022TYPE_OF_PRICE_HIGH\020\003\022\025\n\021TYPE_OF_PR"
    "ICE_LOW\020\004\022\025\n\021TYPE_OF_PRICE_AVG\020\005\"\247\001\n\rInd"
    "icatorType\022\036\n\032INDICATOR_TYPE_UNSPECIFIED"
    "\020\000\022\025\n\021INDICATOR_TYPE_BB\020\001\022\026\n\022INDICATOR_T"
    "YPE_EMA\020\002\022\026\n\022INDICATOR_TYPE_RSI\020\003\022\027\n\023IND"
    "ICATOR_TYPE_MACD\020\004\022\026\n\022INDICATOR_TYPE_SMA"
    "\020\005\"\374\004\n\027GetTechAnalysisResponse\022m\n\024techni"
    "cal_indicators\030\001 \003(\0132O.tinkoff.public.in"
    "vest.api.contract.v1.GetTechAnalysisResp"
    "onse.TechAnalysisItem\032\361\003\n\020TechAnalysisIt"
    "em\022-\n\ttimestamp\030\001 \001(\0132\032.google.protobuf."
    "Timestamp\022J\n\013middle_band\030\002 \001(\01320.tinkoff"
    ".public.invest.api.contract.v1.Quotation"
    "H\000\210\001\001\022I\n\nupper_band\030\003 \001(\01320.tinkoff.publ"
    "ic.invest.api.contract.v1.QuotationH\001\210\001\001"
    "\022I\n\nlower_band\030\004 \001(\01320.tinkoff.public.in"
    "vest.api.contract.v1.QuotationH\002\210\001\001\022E\n\006s"
    "ignal\030\005 \001(\01320.tinkoff.public.invest.api."
    "contract.v1.QuotationH\003\210\001\001\022C\n\004macd\030\006 \001(\013"
    "20.tinkoff.public.invest.api.contract.v1"
    ".QuotationH\004\210\001\001B\016\n\014_middle_bandB\r\n\013_uppe"
    "r_bandB\r\n\013_lower_bandB\t\n\007_signalB\007\n\005_mac"
    "d*\201\001\n\022SubscriptionAction\022#\n\037SUBSCRIPTION"
    "_ACTION_UNSPECIFIED\020\000\022!\n\035SUBSCRIPTION_AC"
    "TION_SUBSCRIBE\020\001\022#\n\037SUBSCRIPTION_ACTION_"
    "UNSUBSCRIBE\020\002*\210\004\n\024SubscriptionInterval\022%"
    "\n!SUBSCRIPTION_INTERVAL_UNSPECIFIED\020\000\022$\n"
    " SUBSCRIPTION_INTERVAL_ONE_MINUTE\020\001\022&\n\"S"
    "UBSCRIPTION_INTERVAL_FIVE_MINUTES\020\002\022)\n%S"
    "UBSCRIPTION_INTERVAL_FIFTEEN_MINUTES\020\003\022\""
    "\n\036SUBSCRIPTION_INTERVAL_ONE_HOUR\020\004\022!\n\035SU"
    "BSCRIPTION_INTERVAL_ONE_DAY\020\005\022\037\n\033SUBSCRI"
    "PTION_INTERVAL_2_MIN\020\006\022\037\n\033SUBSCRIPTION_I"
    "NTERVAL_3_MIN\020\007\022 \n\034SUBSCRIPTION_INTERVAL"
    "_10_MIN\020\010\022 \n\034SUBSCRIPTION_INTERVAL_30_MI"
    "N\020\t\022 \n\034SUBSCRIPTION_INTERVAL_2_HOUR\020\n\022 \n"
    "\034SUBSCRIPTION_INTERVAL_4_HOUR\020\013\022\036\n\032SUBSC"
    "RIPTION_INTERVAL_WEEK\020\014\022\037\n\033SUBSCRIPTION_"
    "INTERVAL_MONTH\020\r*\360\003\n\022SubscriptionStatus\022"
    "#\n\037SUBSCRIPTION_STATUS_UNSPECIFIED\020\000\022\037\n\033"
    "SUBSCRIPTION_STATUS_SUCCESS\020\001\022,\n(SUBSCRI"
    "PTION_STATUS_INSTRUMENT_NOT_FOUND\020\002\0226\n2S"
    "UBSCRIPTION_STATUS_SUBSCRIPTION_ACTION_I"
    "S_INVALID\020\003\022(\n$SUBSCRIPTION_STATUS_DEPTH"
    "_IS_INVALID\020\004\022+\n\'SUBSCRIPTION_STATUS_INT"
    "ERVAL_IS_INVALID\020\005\022)\n%SUBSCRIPTION_STATU"
    "S_LIMIT_IS_EXCEEDED\020\006\022&\n\"SUBSCRIPTION_ST"
    "ATUS_INTERNAL_ERROR\020\007\022)\n%SUBSCRIPTION_ST"
    "ATUS_TOO_MANY_REQUESTS\020\010\022.\n*SUBSCRIPTION"
    "_STATUS_SUBSCRIPTION_NOT_FOUND\020\t\022)\n%SUBS"
    "CRIPTION_STATUS_SOURCE_IS_INVALID\020\n*y\n\017T"
    "radeSourceType\022\034\n\030TRADE_SOURCE_UNSPECIFI"
    "ED\020\000\022\031\n\025TRADE_SOURCE_EXCHANGE\020\001\022\027\n\023TRADE"
    "_SOURCE_DEALER\020\002\022\024\n\020TRADE_SOURCE_ALL\020\003*d"
    "\n\016TradeDirection\022\037\n\033TRADE_DIRECTION_UNSP"
    "ECIFIED\020\000\022\027\n\023TRADE_DIRECTION_BUY\020\001\022\030\n\024TR"
    "ADE_DIRECTION_SELL\020\002*\344\003\n\016CandleInterval\022"
    "\037\n\033CANDLE_INTERVAL_UNSPECIFIED\020\000\022\031\n\025CAND"
    "LE_INTERVAL_1_MIN\020\001\022\031\n\025CANDLE_INTERVAL_5"
    "_MIN\020\002\022\032\n\026CANDLE_INTERVAL_15_MIN\020\003\022\030\n\024CA"
    "NDLE_INTERVAL_HOUR\020\004\022\027\n\023CANDLE_INTERVAL_"
    "DAY\020\005\022\031\n\025CANDLE_INTERVAL_2_MIN\020\006\022\031\n\025CAND"
    "LE_INTERVAL_3_MIN\020\007\022\032\n\026CANDLE_INTERVAL_1"
    "0_MIN\020\010\022\032\n\026CANDLE_INTERVAL_30_MIN\020\t\022\032\n\026C"
    "ANDLE_INTERVAL_2_HOUR\020\n\022\032\n\026CANDLE_INTERV"
    "AL_4_HOUR\020\013\022\030\n\024CANDLE_INTERVAL_WEEK\020\014\022\031\n"
    "\025CANDLE_INTERVAL_MONTH\020\r\022\031\n\025CANDLE_INTER"
    "VAL_5_SEC\020\016\022\032\n\026CANDLE_INTERVAL_10_SEC\020\017\022"
    "\032\n\026CANDLE_INTERVAL_30_SEC\020\020*k\n\014CandleSou"
    "rce\022\035\n\031CANDLE_SOURCE_UNSPECIFIED\020\000\022\032\n\026CA"
    "NDLE_SOURCE_EXCHANGE\020\001\022 \n\034CANDLE_SOURCE_"
    "DEALER_WEEKEND\020\002*\177\n\rOrderBookType\022\036\n\032ORD"
    "ERBOOK_TYPE_UNSPECIFIED\020\000\022\033\n\027ORDERBOOK_T"
    "YPE_EXCHANGE\020\001\022\031\n\025ORDERBOOK_TYPE_DEALER\020"
    "\002\022\026\n\022ORDERBOOK_TYPE_ALL\020\003*[\n\rLastPriceTy"
    "pe\022\032\n\026LAST_PRICE_UNSPECIFIED\020\000\022\027\n\023LAST_P"
    "RICE_EXCHANGE\020\001\022\025\n\021LAST_PRICE_DEALER\020\0022\220"
    "\t\n\021MarketDataService\022\201\001\n\nGetCandles\0228.ti"
    "nkoff.public.invest.api.contract.v1.GetC"
    "andlesRequest\0329.tinkoff.public.invest.ap"
    "i.contract.v1.GetCandlesResponse\022\212\001\n\rGet"
    "LastPrices\022;.tinkoff.public.invest.api.c"
    "ontract.v1.GetLastPricesRequest\032<.tinkof"
    "f.public.invest.api.contract.v1.GetLastP"
    "ricesResponse\022\207\001\n\014GetOrderBook\022:.tinkoff"
    ".public.invest.api.contract.v1.GetOrderB"
    "ookRequest\032;.tinkoff.public.invest.api.c"
    "ontract.v1.GetOrderBookResponse\022\223\001\n\020GetT"
    "radingStatus\022>.tinkoff.public.invest.api"
    ".contract.v1.GetTradingStatusRequest\032\?.t"
    "inkoff.public.invest.api.contract.v1.Get"
    "TradingStatusResponse\022\231\001\n\022GetTradingStat"
    "uses\022@.tinkoff.public.invest.api.contrac"
    "t.v1.GetTradingStatusesRequest\032A.tinkoff"
    ".public.invest.api.contract.v1.GetTradin"
    "gStatusesResponse\022\212\001\n\rGetLastTrades\022;.ti"
    "nkoff.public.invest.api.contract.v1.GetL"
    "astTradesRequest\032<.tinkoff.public.invest"
    ".api.contract.v1.GetLastTradesResponse\022\215"
    "\001\n\016GetClosePrices\022<.tinkoff.public.inves"
    "t.api.contract.v1.GetClosePricesRequest\032"
    "=.tinkoff.public.invest.api.contract.v1."
    "GetClosePricesResponse\022\220\001\n\017GetTechAnalys"
    "is\022=.tinkoff.public.invest.api.contract."
    "v1.GetTechAnalysisRequest\032>.tinkoff.publ"
    "ic.invest.api.contract.v1.GetTechAnalysi"
    "sResponse2\315\002\n\027MarketDataStreamService\022\213\001"
    "\n\020MarketDataStream\0228.tinkoff.public.inve"
    "st.api.contract.v1.MarketDataRequest\0329.t"
    "inkoff.public.invest.api.contract.v1.Mar"
    "ketDataResponse(\0010\001\022\243\001\n\032MarketDataServer"
    "SideStream\022H.tinkoff.public.invest.api.c"
    "ontract.v1.MarketDataServerSideStreamReq"
    "uest\0329.tinkoff.public.invest.api.contrac"
    "t.v1.MarketDataResponse0\001Ba\n\034ru.tinkoff."
    "piapi.contract.v1P\001Z\014./;investapi\242\002\005TIAP"
    "I\252\002\024Tinkoff.InvestApi.V1\312\002\021Tinkoff\\Inves"
    "t\\V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_marketdata_2eproto_deps[3] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_marketdata_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_marketdata_2eproto = {
    false,
    false,
    18132,
    descriptor_table_protodef_marketdata_2eproto,
    "marketdata.proto",
    &descriptor_table_marketdata_2eproto_once,
    descriptor_table_marketdata_2eproto_deps,
    3,
    52,
    schemas,
    file_default_instances,
    TableStruct_marketdata_2eproto::offsets,
    file_level_enum_descriptors_marketdata_2eproto,
    file_level_service_descriptors_marketdata_2eproto,
};
namespace tinkoff {
namespace public_ {
namespace invest {
namespace api {
namespace contract {
namespace v1 {
const ::google::protobuf::EnumDescriptor* GetCandlesRequest_CandleSource_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t GetCandlesRequest_CandleSource_internal_data_[] = {
    131072u, 32u, 2u, };
bool GetCandlesRequest_CandleSource_IsValid(int value) {
  return 0 <= value && value <= 3 && ((11u >> value) & 1) != 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr GetCandlesRequest_CandleSource GetCandlesRequest::CANDLE_SOURCE_UNSPECIFIED;
constexpr GetCandlesRequest_CandleSource GetCandlesRequest::CANDLE_SOURCE_EXCHANGE;
constexpr GetCandlesRequest_CandleSource GetCandlesRequest::CANDLE_SOURCE_INCLUDE_WEEKEND;
constexpr GetCandlesRequest_CandleSource GetCandlesRequest::CandleSource_MIN;
constexpr GetCandlesRequest_CandleSource GetCandlesRequest::CandleSource_MAX;
constexpr int GetCandlesRequest::CandleSource_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* GetTechAnalysisRequest_IndicatorInterval_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t GetTechAnalysisRequest_IndicatorInterval_internal_data_[] = {
    917504u, 0u, };
bool GetTechAnalysisRequest_IndicatorInterval_IsValid(int value) {
  return 0 <= value && value <= 13;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_UNSPECIFIED;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_ONE_MINUTE;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_FIVE_MINUTES;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_FIFTEEN_MINUTES;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_ONE_HOUR;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_ONE_DAY;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_2_MIN;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_3_MIN;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_10_MIN;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_30_MIN;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_2_HOUR;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_4_HOUR;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_WEEK;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::INDICATOR_INTERVAL_MONTH;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::IndicatorInterval_MIN;
constexpr GetTechAnalysisRequest_IndicatorInterval GetTechAnalysisRequest::IndicatorInterval_MAX;
constexpr int GetTechAnalysisRequest::IndicatorInterval_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* GetTechAnalysisRequest_TypeOfPrice_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t GetTechAnalysisRequest_TypeOfPrice_internal_data_[] = {
    393216u, 0u, };
bool GetTechAnalysisRequest_TypeOfPrice_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr GetTechAnalysisRequest_TypeOfPrice GetTechAnalysisRequest::TYPE_OF_PRICE_UNSPECIFIED;
constexpr GetTechAnalysisRequest_TypeOfPrice GetTechAnalysisRequest::TYPE_OF_PRICE_CLOSE;
constexpr GetTechAnalysisRequest_TypeOfPrice GetTechAnalysisRequest::TYPE_OF_PRICE_OPEN;
constexpr GetTechAnalysisRequest_TypeOfPrice GetTechAnalysisRequest::TYPE_OF_PRICE_HIGH;
constexpr GetTechAnalysisRequest_TypeOfPrice GetTechAnalysisRequest::TYPE_OF_PRICE_LOW;
constexpr GetTechAnalysisRequest_TypeOfPrice GetTechAnalysisRequest::TYPE_OF_PRICE_AVG;
constexpr GetTechAnalysisRequest_TypeOfPrice GetTechAnalysisRequest::TypeOfPrice_MIN;
constexpr GetTechAnalysisRequest_TypeOfPrice GetTechAnalysisRequest::TypeOfPrice_MAX;
constexpr int GetTechAnalysisRequest::TypeOfPrice_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* GetTechAnalysisRequest_IndicatorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t GetTechAnalysisRequest_IndicatorType_internal_data_[] = {
    393216u, 0u, };
bool GetTechAnalysisRequest_IndicatorType_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr GetTechAnalysisRequest_IndicatorType GetTechAnalysisRequest::INDICATOR_TYPE_UNSPECIFIED;
constexpr GetTechAnalysisRequest_IndicatorType GetTechAnalysisRequest::INDICATOR_TYPE_BB;
constexpr GetTechAnalysisRequest_IndicatorType GetTechAnalysisRequest::INDICATOR_TYPE_EMA;
constexpr GetTechAnalysisRequest_IndicatorType GetTechAnalysisRequest::INDICATOR_TYPE_RSI;
constexpr GetTechAnalysisRequest_IndicatorType GetTechAnalysisRequest::INDICATOR_TYPE_MACD;
constexpr GetTechAnalysisRequest_IndicatorType GetTechAnalysisRequest::INDICATOR_TYPE_SMA;
constexpr GetTechAnalysisRequest_IndicatorType GetTechAnalysisRequest::IndicatorType_MIN;
constexpr GetTechAnalysisRequest_IndicatorType GetTechAnalysisRequest::IndicatorType_MAX;
constexpr int GetTechAnalysisRequest::IndicatorType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SubscriptionAction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t SubscriptionAction_internal_data_[] = {
    196608u, 0u, };
bool SubscriptionAction_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* SubscriptionInterval_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t SubscriptionInterval_internal_data_[] = {
    917504u, 0u, };
bool SubscriptionInterval_IsValid(int value) {
  return 0 <= value && value <= 13;
}
const ::google::protobuf::EnumDescriptor* SubscriptionStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t SubscriptionStatus_internal_data_[] = {
    720896u, 0u, };
bool SubscriptionStatus_IsValid(int value) {
  return 0 <= value && value <= 10;
}
const ::google::protobuf::EnumDescriptor* TradeSourceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t TradeSourceType_internal_data_[] = {
    262144u, 0u, };
bool TradeSourceType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* TradeDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t TradeDirection_internal_data_[] = {
    196608u, 0u, };
bool TradeDirection_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* CandleInterval_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t CandleInterval_internal_data_[] = {
    1114112u, 0u, };
bool CandleInterval_IsValid(int value) {
  return 0 <= value && value <= 16;
}
const ::google::protobuf::EnumDescriptor* CandleSource_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[10];
}
PROTOBUF_CONSTINIT const uint32_t CandleSource_internal_data_[] = {
    196608u, 0u, };
bool CandleSource_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* OrderBookType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[11];
}
PROTOBUF_CONSTINIT const uint32_t OrderBookType_internal_data_[] = {
    262144u, 0u, };
bool OrderBookType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* LastPriceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_marketdata_2eproto);
  return file_level_enum_descriptors_marketdata_2eproto[12];
}
PROTOBUF_CONSTINIT const uint32_t LastPriceType_internal_data_[] = {
    196608u, 0u, };
bool LastPriceType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class MarketDataRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataRequest, _impl_._oneof_case_);
};

void MarketDataRequest::set_allocated_subscribe_candles_request(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest* subscribe_candles_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscribe_candles_request) {
    ::google::protobuf::Arena* submessage_arena = subscribe_candles_request->GetArena();
    if (message_arena != submessage_arena) {
      subscribe_candles_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscribe_candles_request, submessage_arena);
    }
    set_has_subscribe_candles_request();
    _impl_.payload_.subscribe_candles_request_ = subscribe_candles_request;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataRequest.subscribe_candles_request)
}
void MarketDataRequest::set_allocated_subscribe_order_book_request(::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest* subscribe_order_book_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscribe_order_book_request) {
    ::google::protobuf::Arena* submessage_arena = subscribe_order_book_request->GetArena();
    if (message_arena != submessage_arena) {
      subscribe_order_book_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscribe_order_book_request, submessage_arena);
    }
    set_has_subscribe_order_book_request();
    _impl_.payload_.subscribe_order_book_request_ = subscribe_order_book_request;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataRequest.subscribe_order_book_request)
}
void MarketDataRequest::set_allocated_subscribe_trades_request(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest* subscribe_trades_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscribe_trades_request) {
    ::google::protobuf::Arena* submessage_arena = subscribe_trades_request->GetArena();
    if (message_arena != submessage_arena) {
      subscribe_trades_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscribe_trades_request, submessage_arena);
    }
    set_has_subscribe_trades_request();
    _impl_.payload_.subscribe_trades_request_ = subscribe_trades_request;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataRequest.subscribe_trades_request)
}
void MarketDataRequest::set_allocated_subscribe_info_request(::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest* subscribe_info_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscribe_info_request) {
    ::google::protobuf::Arena* submessage_arena = subscribe_info_request->GetArena();
    if (message_arena != submessage_arena) {
      subscribe_info_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscribe_info_request, submessage_arena);
    }
    set_has_subscribe_info_request();
    _impl_.payload_.subscribe_info_request_ = subscribe_info_request;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataRequest.subscribe_info_request)
}
void MarketDataRequest::set_allocated_subscribe_last_price_request(::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest* subscribe_last_price_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscribe_last_price_request) {
    ::google::protobuf::Arena* submessage_arena = subscribe_last_price_request->GetArena();
    if (message_arena != submessage_arena) {
      subscribe_last_price_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscribe_last_price_request, submessage_arena);
    }
    set_has_subscribe_last_price_request();
    _impl_.payload_.subscribe_last_price_request_ = subscribe_last_price_request;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataRequest.subscribe_last_price_request)
}
void MarketDataRequest::set_allocated_get_my_subscriptions(::tinkoff::public_::invest::api::contract::v1::GetMySubscriptions* get_my_subscriptions) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (get_my_subscriptions) {
    ::google::protobuf::Arena* submessage_arena = get_my_subscriptions->GetArena();
    if (message_arena != submessage_arena) {
      get_my_subscriptions = ::google::protobuf::internal::GetOwnedMessage(message_arena, get_my_subscriptions, submessage_arena);
    }
    set_has_get_my_subscriptions();
    _impl_.payload_.get_my_subscriptions_ = get_my_subscriptions;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataRequest.get_my_subscriptions)
}
void MarketDataRequest::set_allocated_ping(::tinkoff::public_::invest::api::contract::v1::PingRequest* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(ping)->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.payload_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataRequest.ping)
}
void MarketDataRequest::clear_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kPing) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.ping_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
    }
    clear_has_payload();
  }
}
void MarketDataRequest::set_allocated_ping_settings(::tinkoff::public_::invest::api::contract::v1::PingDelaySettings* ping_settings) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (ping_settings) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(ping_settings)->GetArena();
    if (message_arena != submessage_arena) {
      ping_settings = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping_settings, submessage_arena);
    }
    set_has_ping_settings();
    _impl_.payload_.ping_settings_ = ping_settings;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataRequest.ping_settings)
}
void MarketDataRequest::clear_ping_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kPingSettings) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.ping_settings_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_settings_);
    }
    clear_has_payload();
  }
}
MarketDataRequest::MarketDataRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.MarketDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE MarketDataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::MarketDataRequest& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

MarketDataRequest::MarketDataRequest(
    ::google::protobuf::Arena* arena,
    const MarketDataRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MarketDataRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kSubscribeCandlesRequest:
        _impl_.payload_.subscribe_candles_request_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest>(arena, *from._impl_.payload_.subscribe_candles_request_);
        break;
      case kSubscribeOrderBookRequest:
        _impl_.payload_.subscribe_order_book_request_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest>(arena, *from._impl_.payload_.subscribe_order_book_request_);
        break;
      case kSubscribeTradesRequest:
        _impl_.payload_.subscribe_trades_request_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest>(arena, *from._impl_.payload_.subscribe_trades_request_);
        break;
      case kSubscribeInfoRequest:
        _impl_.payload_.subscribe_info_request_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest>(arena, *from._impl_.payload_.subscribe_info_request_);
        break;
      case kSubscribeLastPriceRequest:
        _impl_.payload_.subscribe_last_price_request_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest>(arena, *from._impl_.payload_.subscribe_last_price_request_);
        break;
      case kGetMySubscriptions:
        _impl_.payload_.get_my_subscriptions_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetMySubscriptions>(arena, *from._impl_.payload_.get_my_subscriptions_);
        break;
      case kPing:
        _impl_.payload_.ping_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::PingRequest>(arena, *from._impl_.payload_.ping_);
        break;
      case kPingSettings:
        _impl_.payload_.ping_settings_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::PingDelaySettings>(arena, *from._impl_.payload_.ping_settings_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.MarketDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE MarketDataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void MarketDataRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MarketDataRequest::~MarketDataRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.MarketDataRequest)
  SharedDtor(*this);
}
inline void MarketDataRequest::SharedDtor(MessageLite& self) {
  MarketDataRequest& this_ = static_cast<MarketDataRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void MarketDataRequest::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.MarketDataRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kSubscribeCandlesRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscribe_candles_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscribe_candles_request_);
      }
      break;
    }
    case kSubscribeOrderBookRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscribe_order_book_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscribe_order_book_request_);
      }
      break;
    }
    case kSubscribeTradesRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscribe_trades_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscribe_trades_request_);
      }
      break;
    }
    case kSubscribeInfoRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscribe_info_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscribe_info_request_);
      }
      break;
    }
    case kSubscribeLastPriceRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscribe_last_price_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscribe_last_price_request_);
      }
      break;
    }
    case kGetMySubscriptions: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.get_my_subscriptions_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.get_my_subscriptions_);
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.ping_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
      }
      break;
    }
    case kPingSettings: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.ping_settings_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_settings_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* MarketDataRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MarketDataRequest(arena);
}
constexpr auto MarketDataRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MarketDataRequest),
                                            alignof(MarketDataRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MarketDataRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MarketDataRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MarketDataRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MarketDataRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MarketDataRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MarketDataRequest>(), &MarketDataRequest::ByteSizeLong,
            &MarketDataRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MarketDataRequest, _impl_._cached_size_),
        false,
    },
    &MarketDataRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MarketDataRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 8, 8, 0, 2> MarketDataRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    15, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MarketDataRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest subscribe_candles_request = 1;
    {PROTOBUF_FIELD_OFFSET(MarketDataRequest, _impl_.payload_.subscribe_candles_request_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest subscribe_order_book_request = 2;
    {PROTOBUF_FIELD_OFFSET(MarketDataRequest, _impl_.payload_.subscribe_order_book_request_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest subscribe_trades_request = 3;
    {PROTOBUF_FIELD_OFFSET(MarketDataRequest, _impl_.payload_.subscribe_trades_request_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest subscribe_info_request = 4;
    {PROTOBUF_FIELD_OFFSET(MarketDataRequest, _impl_.payload_.subscribe_info_request_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest subscribe_last_price_request = 5;
    {PROTOBUF_FIELD_OFFSET(MarketDataRequest, _impl_.payload_.subscribe_last_price_request_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetMySubscriptions get_my_subscriptions = 6;
    {PROTOBUF_FIELD_OFFSET(MarketDataRequest, _impl_.payload_.get_my_subscriptions_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.PingRequest ping = 7;
    {PROTOBUF_FIELD_OFFSET(MarketDataRequest, _impl_.payload_.ping_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
    {PROTOBUF_FIELD_OFFSET(MarketDataRequest, _impl_.payload_.ping_settings_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMySubscriptions>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::PingRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::PingDelaySettings>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MarketDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.MarketDataRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MarketDataRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MarketDataRequest& this_ = static_cast<const MarketDataRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MarketDataRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MarketDataRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.MarketDataRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            case kSubscribeCandlesRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.payload_.subscribe_candles_request_, this_._impl_.payload_.subscribe_candles_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubscribeOrderBookRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.payload_.subscribe_order_book_request_, this_._impl_.payload_.subscribe_order_book_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubscribeTradesRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.payload_.subscribe_trades_request_, this_._impl_.payload_.subscribe_trades_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubscribeInfoRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.payload_.subscribe_info_request_, this_._impl_.payload_.subscribe_info_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubscribeLastPriceRequest: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.payload_.subscribe_last_price_request_, this_._impl_.payload_.subscribe_last_price_request_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kGetMySubscriptions: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.payload_.get_my_subscriptions_, this_._impl_.payload_.get_my_subscriptions_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPing: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.payload_.ping_, this_._impl_.payload_.ping_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPingSettings: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  15, *this_._impl_.payload_.ping_settings_, this_._impl_.payload_.ping_settings_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.MarketDataRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MarketDataRequest::ByteSizeLong(const MessageLite& base) {
          const MarketDataRequest& this_ = static_cast<const MarketDataRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MarketDataRequest::ByteSizeLong() const {
          const MarketDataRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.MarketDataRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            // .tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest subscribe_candles_request = 1;
            case kSubscribeCandlesRequest: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscribe_candles_request_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest subscribe_order_book_request = 2;
            case kSubscribeOrderBookRequest: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscribe_order_book_request_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest subscribe_trades_request = 3;
            case kSubscribeTradesRequest: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscribe_trades_request_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest subscribe_info_request = 4;
            case kSubscribeInfoRequest: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscribe_info_request_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest subscribe_last_price_request = 5;
            case kSubscribeLastPriceRequest: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscribe_last_price_request_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.GetMySubscriptions get_my_subscriptions = 6;
            case kGetMySubscriptions: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.get_my_subscriptions_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.PingRequest ping = 7;
            case kPing: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.ping_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
            case kPingSettings: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.ping_settings_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MarketDataRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MarketDataRequest*>(&to_msg);
  auto& from = static_cast<const MarketDataRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.MarketDataRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSubscribeCandlesRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscribe_candles_request_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest>(arena, *from._impl_.payload_.subscribe_candles_request_);
        } else {
          _this->_impl_.payload_.subscribe_candles_request_->MergeFrom(from._internal_subscribe_candles_request());
        }
        break;
      }
      case kSubscribeOrderBookRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscribe_order_book_request_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest>(arena, *from._impl_.payload_.subscribe_order_book_request_);
        } else {
          _this->_impl_.payload_.subscribe_order_book_request_->MergeFrom(from._internal_subscribe_order_book_request());
        }
        break;
      }
      case kSubscribeTradesRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscribe_trades_request_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest>(arena, *from._impl_.payload_.subscribe_trades_request_);
        } else {
          _this->_impl_.payload_.subscribe_trades_request_->MergeFrom(from._internal_subscribe_trades_request());
        }
        break;
      }
      case kSubscribeInfoRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscribe_info_request_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest>(arena, *from._impl_.payload_.subscribe_info_request_);
        } else {
          _this->_impl_.payload_.subscribe_info_request_->MergeFrom(from._internal_subscribe_info_request());
        }
        break;
      }
      case kSubscribeLastPriceRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscribe_last_price_request_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest>(arena, *from._impl_.payload_.subscribe_last_price_request_);
        } else {
          _this->_impl_.payload_.subscribe_last_price_request_->MergeFrom(from._internal_subscribe_last_price_request());
        }
        break;
      }
      case kGetMySubscriptions: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.get_my_subscriptions_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetMySubscriptions>(arena, *from._impl_.payload_.get_my_subscriptions_);
        } else {
          _this->_impl_.payload_.get_my_subscriptions_->MergeFrom(from._internal_get_my_subscriptions());
        }
        break;
      }
      case kPing: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.ping_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::PingRequest>(arena, *from._impl_.payload_.ping_);
        } else {
          _this->_impl_.payload_.ping_->MergeFrom(from._internal_ping());
        }
        break;
      }
      case kPingSettings: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.ping_settings_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::PingDelaySettings>(arena, *from._impl_.payload_.ping_settings_);
        } else {
          _this->_impl_.payload_.ping_settings_->MergeFrom(from._internal_ping_settings());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketDataRequest::CopyFrom(const MarketDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.MarketDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MarketDataRequest::InternalSwap(MarketDataRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MarketDataRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MarketDataServerSideStreamRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MarketDataServerSideStreamRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_._has_bits_);
};

void MarketDataServerSideStreamRequest::clear_ping_settings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ping_settings_ != nullptr) _impl_.ping_settings_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
MarketDataServerSideStreamRequest::MarketDataServerSideStreamRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.MarketDataServerSideStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE MarketDataServerSideStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::MarketDataServerSideStreamRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MarketDataServerSideStreamRequest::MarketDataServerSideStreamRequest(
    ::google::protobuf::Arena* arena,
    const MarketDataServerSideStreamRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MarketDataServerSideStreamRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.subscribe_candles_request_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest>(
                              arena, *from._impl_.subscribe_candles_request_)
                        : nullptr;
  _impl_.subscribe_order_book_request_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest>(
                              arena, *from._impl_.subscribe_order_book_request_)
                        : nullptr;
  _impl_.subscribe_trades_request_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest>(
                              arena, *from._impl_.subscribe_trades_request_)
                        : nullptr;
  _impl_.subscribe_info_request_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest>(
                              arena, *from._impl_.subscribe_info_request_)
                        : nullptr;
  _impl_.subscribe_last_price_request_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest>(
                              arena, *from._impl_.subscribe_last_price_request_)
                        : nullptr;
  _impl_.ping_settings_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::PingDelaySettings>(
                              arena, *from._impl_.ping_settings_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.MarketDataServerSideStreamRequest)
}
inline PROTOBUF_NDEBUG_INLINE MarketDataServerSideStreamRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MarketDataServerSideStreamRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, subscribe_candles_request_),
           0,
           offsetof(Impl_, ping_settings_) -
               offsetof(Impl_, subscribe_candles_request_) +
               sizeof(Impl_::ping_settings_));
}
MarketDataServerSideStreamRequest::~MarketDataServerSideStreamRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.MarketDataServerSideStreamRequest)
  SharedDtor(*this);
}
inline void MarketDataServerSideStreamRequest::SharedDtor(MessageLite& self) {
  MarketDataServerSideStreamRequest& this_ = static_cast<MarketDataServerSideStreamRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.subscribe_candles_request_;
  delete this_._impl_.subscribe_order_book_request_;
  delete this_._impl_.subscribe_trades_request_;
  delete this_._impl_.subscribe_info_request_;
  delete this_._impl_.subscribe_last_price_request_;
  delete this_._impl_.ping_settings_;
  this_._impl_.~Impl_();
}

inline void* MarketDataServerSideStreamRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MarketDataServerSideStreamRequest(arena);
}
constexpr auto MarketDataServerSideStreamRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MarketDataServerSideStreamRequest),
                                            alignof(MarketDataServerSideStreamRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MarketDataServerSideStreamRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MarketDataServerSideStreamRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MarketDataServerSideStreamRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MarketDataServerSideStreamRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MarketDataServerSideStreamRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MarketDataServerSideStreamRequest>(), &MarketDataServerSideStreamRequest::ByteSizeLong,
            &MarketDataServerSideStreamRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_._cached_size_),
        false,
    },
    &MarketDataServerSideStreamRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MarketDataServerSideStreamRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2> MarketDataServerSideStreamRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_._has_bits_),
    0, // no _extensions_
    15, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950880,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MarketDataServerSideStreamRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest subscribe_candles_request = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.subscribe_candles_request_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest subscribe_order_book_request = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.subscribe_order_book_request_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest subscribe_trades_request = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.subscribe_trades_request_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest subscribe_info_request = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.subscribe_info_request_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest subscribe_last_price_request = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.subscribe_last_price_request_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
    {::_pbi::TcParser::FastMtS1,
     {122, 5, 5, PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.ping_settings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest subscribe_candles_request = 1;
    {PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.subscribe_candles_request_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest subscribe_order_book_request = 2;
    {PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.subscribe_order_book_request_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest subscribe_trades_request = 3;
    {PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.subscribe_trades_request_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest subscribe_info_request = 4;
    {PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.subscribe_info_request_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest subscribe_last_price_request = 5;
    {PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.subscribe_last_price_request_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
    {PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.ping_settings_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::PingDelaySettings>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MarketDataServerSideStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.MarketDataServerSideStreamRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.subscribe_candles_request_ != nullptr);
      _impl_.subscribe_candles_request_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.subscribe_order_book_request_ != nullptr);
      _impl_.subscribe_order_book_request_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.subscribe_trades_request_ != nullptr);
      _impl_.subscribe_trades_request_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.subscribe_info_request_ != nullptr);
      _impl_.subscribe_info_request_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.subscribe_last_price_request_ != nullptr);
      _impl_.subscribe_last_price_request_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.ping_settings_ != nullptr);
      _impl_.ping_settings_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MarketDataServerSideStreamRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MarketDataServerSideStreamRequest& this_ = static_cast<const MarketDataServerSideStreamRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MarketDataServerSideStreamRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MarketDataServerSideStreamRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.MarketDataServerSideStreamRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest subscribe_candles_request = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.subscribe_candles_request_, this_._impl_.subscribe_candles_request_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest subscribe_order_book_request = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.subscribe_order_book_request_, this_._impl_.subscribe_order_book_request_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest subscribe_trades_request = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.subscribe_trades_request_, this_._impl_.subscribe_trades_request_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest subscribe_info_request = 4;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.subscribe_info_request_, this_._impl_.subscribe_info_request_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest subscribe_last_price_request = 5;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.subscribe_last_price_request_, this_._impl_.subscribe_last_price_request_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                15, *this_._impl_.ping_settings_, this_._impl_.ping_settings_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.MarketDataServerSideStreamRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MarketDataServerSideStreamRequest::ByteSizeLong(const MessageLite& base) {
          const MarketDataServerSideStreamRequest& this_ = static_cast<const MarketDataServerSideStreamRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MarketDataServerSideStreamRequest::ByteSizeLong() const {
          const MarketDataServerSideStreamRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.MarketDataServerSideStreamRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // .tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest subscribe_candles_request = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.subscribe_candles_request_);
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest subscribe_order_book_request = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.subscribe_order_book_request_);
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest subscribe_trades_request = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.subscribe_trades_request_);
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest subscribe_info_request = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.subscribe_info_request_);
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest subscribe_last_price_request = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.subscribe_last_price_request_);
            }
            // .tinkoff.public.invest.api.contract.v1.PingDelaySettings ping_settings = 15;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ping_settings_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MarketDataServerSideStreamRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MarketDataServerSideStreamRequest*>(&to_msg);
  auto& from = static_cast<const MarketDataServerSideStreamRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.MarketDataServerSideStreamRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.subscribe_candles_request_ != nullptr);
      if (_this->_impl_.subscribe_candles_request_ == nullptr) {
        _this->_impl_.subscribe_candles_request_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest>(arena, *from._impl_.subscribe_candles_request_);
      } else {
        _this->_impl_.subscribe_candles_request_->MergeFrom(*from._impl_.subscribe_candles_request_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.subscribe_order_book_request_ != nullptr);
      if (_this->_impl_.subscribe_order_book_request_ == nullptr) {
        _this->_impl_.subscribe_order_book_request_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest>(arena, *from._impl_.subscribe_order_book_request_);
      } else {
        _this->_impl_.subscribe_order_book_request_->MergeFrom(*from._impl_.subscribe_order_book_request_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.subscribe_trades_request_ != nullptr);
      if (_this->_impl_.subscribe_trades_request_ == nullptr) {
        _this->_impl_.subscribe_trades_request_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest>(arena, *from._impl_.subscribe_trades_request_);
      } else {
        _this->_impl_.subscribe_trades_request_->MergeFrom(*from._impl_.subscribe_trades_request_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.subscribe_info_request_ != nullptr);
      if (_this->_impl_.subscribe_info_request_ == nullptr) {
        _this->_impl_.subscribe_info_request_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest>(arena, *from._impl_.subscribe_info_request_);
      } else {
        _this->_impl_.subscribe_info_request_->MergeFrom(*from._impl_.subscribe_info_request_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.subscribe_last_price_request_ != nullptr);
      if (_this->_impl_.subscribe_last_price_request_ == nullptr) {
        _this->_impl_.subscribe_last_price_request_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest>(arena, *from._impl_.subscribe_last_price_request_);
      } else {
        _this->_impl_.subscribe_last_price_request_->MergeFrom(*from._impl_.subscribe_last_price_request_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.ping_settings_ != nullptr);
      if (_this->_impl_.ping_settings_ == nullptr) {
        _this->_impl_.ping_settings_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::PingDelaySettings>(arena, *from._impl_.ping_settings_);
      } else {
        _this->_impl_.ping_settings_->MergeFrom(*from._impl_.ping_settings_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketDataServerSideStreamRequest::CopyFrom(const MarketDataServerSideStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.MarketDataServerSideStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MarketDataServerSideStreamRequest::InternalSwap(MarketDataServerSideStreamRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.ping_settings_)
      + sizeof(MarketDataServerSideStreamRequest::_impl_.ping_settings_)
      - PROTOBUF_FIELD_OFFSET(MarketDataServerSideStreamRequest, _impl_.subscribe_candles_request_)>(
          reinterpret_cast<char*>(&_impl_.subscribe_candles_request_),
          reinterpret_cast<char*>(&other->_impl_.subscribe_candles_request_));
}

::google::protobuf::Metadata MarketDataServerSideStreamRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MarketDataResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tinkoff::public_::invest::api::contract::v1::MarketDataResponse, _impl_._oneof_case_);
};

void MarketDataResponse::set_allocated_subscribe_candles_response(::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesResponse* subscribe_candles_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscribe_candles_response) {
    ::google::protobuf::Arena* submessage_arena = subscribe_candles_response->GetArena();
    if (message_arena != submessage_arena) {
      subscribe_candles_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscribe_candles_response, submessage_arena);
    }
    set_has_subscribe_candles_response();
    _impl_.payload_.subscribe_candles_response_ = subscribe_candles_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataResponse.subscribe_candles_response)
}
void MarketDataResponse::set_allocated_subscribe_order_book_response(::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookResponse* subscribe_order_book_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscribe_order_book_response) {
    ::google::protobuf::Arena* submessage_arena = subscribe_order_book_response->GetArena();
    if (message_arena != submessage_arena) {
      subscribe_order_book_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscribe_order_book_response, submessage_arena);
    }
    set_has_subscribe_order_book_response();
    _impl_.payload_.subscribe_order_book_response_ = subscribe_order_book_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataResponse.subscribe_order_book_response)
}
void MarketDataResponse::set_allocated_subscribe_trades_response(::tinkoff::public_::invest::api::contract::v1::SubscribeTradesResponse* subscribe_trades_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscribe_trades_response) {
    ::google::protobuf::Arena* submessage_arena = subscribe_trades_response->GetArena();
    if (message_arena != submessage_arena) {
      subscribe_trades_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscribe_trades_response, submessage_arena);
    }
    set_has_subscribe_trades_response();
    _impl_.payload_.subscribe_trades_response_ = subscribe_trades_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataResponse.subscribe_trades_response)
}
void MarketDataResponse::set_allocated_subscribe_info_response(::tinkoff::public_::invest::api::contract::v1::SubscribeInfoResponse* subscribe_info_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscribe_info_response) {
    ::google::protobuf::Arena* submessage_arena = subscribe_info_response->GetArena();
    if (message_arena != submessage_arena) {
      subscribe_info_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscribe_info_response, submessage_arena);
    }
    set_has_subscribe_info_response();
    _impl_.payload_.subscribe_info_response_ = subscribe_info_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataResponse.subscribe_info_response)
}
void MarketDataResponse::set_allocated_candle(::tinkoff::public_::invest::api::contract::v1::Candle* candle) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (candle) {
    ::google::protobuf::Arena* submessage_arena = candle->GetArena();
    if (message_arena != submessage_arena) {
      candle = ::google::protobuf::internal::GetOwnedMessage(message_arena, candle, submessage_arena);
    }
    set_has_candle();
    _impl_.payload_.candle_ = candle;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataResponse.candle)
}
void MarketDataResponse::set_allocated_trade(::tinkoff::public_::invest::api::contract::v1::Trade* trade) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (trade) {
    ::google::protobuf::Arena* submessage_arena = trade->GetArena();
    if (message_arena != submessage_arena) {
      trade = ::google::protobuf::internal::GetOwnedMessage(message_arena, trade, submessage_arena);
    }
    set_has_trade();
    _impl_.payload_.trade_ = trade;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataResponse.trade)
}
void MarketDataResponse::set_allocated_orderbook(::tinkoff::public_::invest::api::contract::v1::OrderBook* orderbook) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (orderbook) {
    ::google::protobuf::Arena* submessage_arena = orderbook->GetArena();
    if (message_arena != submessage_arena) {
      orderbook = ::google::protobuf::internal::GetOwnedMessage(message_arena, orderbook, submessage_arena);
    }
    set_has_orderbook();
    _impl_.payload_.orderbook_ = orderbook;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataResponse.orderbook)
}
void MarketDataResponse::set_allocated_trading_status(::tinkoff::public_::invest::api::contract::v1::TradingStatus* trading_status) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (trading_status) {
    ::google::protobuf::Arena* submessage_arena = trading_status->GetArena();
    if (message_arena != submessage_arena) {
      trading_status = ::google::protobuf::internal::GetOwnedMessage(message_arena, trading_status, submessage_arena);
    }
    set_has_trading_status();
    _impl_.payload_.trading_status_ = trading_status;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataResponse.trading_status)
}
void MarketDataResponse::set_allocated_ping(::tinkoff::public_::invest::api::contract::v1::Ping* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(ping)->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.payload_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataResponse.ping)
}
void MarketDataResponse::clear_ping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kPing) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.ping_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
    }
    clear_has_payload();
  }
}
void MarketDataResponse::set_allocated_subscribe_last_price_response(::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceResponse* subscribe_last_price_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (subscribe_last_price_response) {
    ::google::protobuf::Arena* submessage_arena = subscribe_last_price_response->GetArena();
    if (message_arena != submessage_arena) {
      subscribe_last_price_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, subscribe_last_price_response, submessage_arena);
    }
    set_has_subscribe_last_price_response();
    _impl_.payload_.subscribe_last_price_response_ = subscribe_last_price_response;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataResponse.subscribe_last_price_response)
}
void MarketDataResponse::set_allocated_last_price(::tinkoff::public_::invest::api::contract::v1::LastPrice* last_price) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (last_price) {
    ::google::protobuf::Arena* submessage_arena = last_price->GetArena();
    if (message_arena != submessage_arena) {
      last_price = ::google::protobuf::internal::GetOwnedMessage(message_arena, last_price, submessage_arena);
    }
    set_has_last_price();
    _impl_.payload_.last_price_ = last_price;
  }
  // @@protoc_insertion_point(field_set_allocated:tinkoff.public.invest.api.contract.v1.MarketDataResponse.last_price)
}
MarketDataResponse::MarketDataResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.MarketDataResponse)
}
inline PROTOBUF_NDEBUG_INLINE MarketDataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::MarketDataResponse& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

MarketDataResponse::MarketDataResponse(
    ::google::protobuf::Arena* arena,
    const MarketDataResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MarketDataResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kSubscribeCandlesResponse:
        _impl_.payload_.subscribe_candles_response_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesResponse>(arena, *from._impl_.payload_.subscribe_candles_response_);
        break;
      case kSubscribeOrderBookResponse:
        _impl_.payload_.subscribe_order_book_response_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookResponse>(arena, *from._impl_.payload_.subscribe_order_book_response_);
        break;
      case kSubscribeTradesResponse:
        _impl_.payload_.subscribe_trades_response_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeTradesResponse>(arena, *from._impl_.payload_.subscribe_trades_response_);
        break;
      case kSubscribeInfoResponse:
        _impl_.payload_.subscribe_info_response_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeInfoResponse>(arena, *from._impl_.payload_.subscribe_info_response_);
        break;
      case kCandle:
        _impl_.payload_.candle_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Candle>(arena, *from._impl_.payload_.candle_);
        break;
      case kTrade:
        _impl_.payload_.trade_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Trade>(arena, *from._impl_.payload_.trade_);
        break;
      case kOrderbook:
        _impl_.payload_.orderbook_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::OrderBook>(arena, *from._impl_.payload_.orderbook_);
        break;
      case kTradingStatus:
        _impl_.payload_.trading_status_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::TradingStatus>(arena, *from._impl_.payload_.trading_status_);
        break;
      case kPing:
        _impl_.payload_.ping_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        break;
      case kSubscribeLastPriceResponse:
        _impl_.payload_.subscribe_last_price_response_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceResponse>(arena, *from._impl_.payload_.subscribe_last_price_response_);
        break;
      case kLastPrice:
        _impl_.payload_.last_price_ = ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::LastPrice>(arena, *from._impl_.payload_.last_price_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.MarketDataResponse)
}
inline PROTOBUF_NDEBUG_INLINE MarketDataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void MarketDataResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MarketDataResponse::~MarketDataResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.MarketDataResponse)
  SharedDtor(*this);
}
inline void MarketDataResponse::SharedDtor(MessageLite& self) {
  MarketDataResponse& this_ = static_cast<MarketDataResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void MarketDataResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:tinkoff.public.invest.api.contract.v1.MarketDataResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kSubscribeCandlesResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscribe_candles_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscribe_candles_response_);
      }
      break;
    }
    case kSubscribeOrderBookResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscribe_order_book_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscribe_order_book_response_);
      }
      break;
    }
    case kSubscribeTradesResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscribe_trades_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscribe_trades_response_);
      }
      break;
    }
    case kSubscribeInfoResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscribe_info_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscribe_info_response_);
      }
      break;
    }
    case kCandle: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.candle_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.candle_);
      }
      break;
    }
    case kTrade: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.trade_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.trade_);
      }
      break;
    }
    case kOrderbook: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.orderbook_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.orderbook_);
      }
      break;
    }
    case kTradingStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.trading_status_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.trading_status_);
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.ping_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.ping_);
      }
      break;
    }
    case kSubscribeLastPriceResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.subscribe_last_price_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.subscribe_last_price_response_);
      }
      break;
    }
    case kLastPrice: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.last_price_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.last_price_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* MarketDataResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MarketDataResponse(arena);
}
constexpr auto MarketDataResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MarketDataResponse),
                                            alignof(MarketDataResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MarketDataResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MarketDataResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MarketDataResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MarketDataResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MarketDataResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MarketDataResponse>(), &MarketDataResponse::ByteSizeLong,
            &MarketDataResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_._cached_size_),
        false,
    },
    &MarketDataResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MarketDataResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 11, 11, 0, 2> MarketDataResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::MarketDataResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse subscribe_candles_response = 1;
    {PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_.payload_.subscribe_candles_response_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse subscribe_order_book_response = 2;
    {PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_.payload_.subscribe_order_book_response_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse subscribe_trades_response = 3;
    {PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_.payload_.subscribe_trades_response_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse subscribe_info_response = 4;
    {PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_.payload_.subscribe_info_response_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Candle candle = 5;
    {PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_.payload_.candle_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Trade trade = 6;
    {PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_.payload_.trade_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.OrderBook orderbook = 7;
    {PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_.payload_.orderbook_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.TradingStatus trading_status = 8;
    {PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_.payload_.trading_status_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Ping ping = 9;
    {PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_.payload_.ping_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse subscribe_last_price_response = 10;
    {PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_.payload_.subscribe_last_price_response_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.LastPrice last_price = 11;
    {PROTOBUF_FIELD_OFFSET(MarketDataResponse, _impl_.payload_.last_price_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesResponse>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookResponse>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeTradesResponse>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeInfoResponse>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Candle>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Trade>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderBook>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::TradingStatus>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Ping>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceResponse>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::LastPrice>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MarketDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.MarketDataResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MarketDataResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MarketDataResponse& this_ = static_cast<const MarketDataResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MarketDataResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MarketDataResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.MarketDataResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            case kSubscribeCandlesResponse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.payload_.subscribe_candles_response_, this_._impl_.payload_.subscribe_candles_response_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubscribeOrderBookResponse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.payload_.subscribe_order_book_response_, this_._impl_.payload_.subscribe_order_book_response_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubscribeTradesResponse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.payload_.subscribe_trades_response_, this_._impl_.payload_.subscribe_trades_response_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubscribeInfoResponse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.payload_.subscribe_info_response_, this_._impl_.payload_.subscribe_info_response_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCandle: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.payload_.candle_, this_._impl_.payload_.candle_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kTrade: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.payload_.trade_, this_._impl_.payload_.trade_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kOrderbook: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.payload_.orderbook_, this_._impl_.payload_.orderbook_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kTradingStatus: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  8, *this_._impl_.payload_.trading_status_, this_._impl_.payload_.trading_status_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPing: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  9, *this_._impl_.payload_.ping_, this_._impl_.payload_.ping_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubscribeLastPriceResponse: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.payload_.subscribe_last_price_response_, this_._impl_.payload_.subscribe_last_price_response_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kLastPrice: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.payload_.last_price_, this_._impl_.payload_.last_price_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.MarketDataResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MarketDataResponse::ByteSizeLong(const MessageLite& base) {
          const MarketDataResponse& this_ = static_cast<const MarketDataResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MarketDataResponse::ByteSizeLong() const {
          const MarketDataResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.MarketDataResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            // .tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse subscribe_candles_response = 1;
            case kSubscribeCandlesResponse: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscribe_candles_response_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse subscribe_order_book_response = 2;
            case kSubscribeOrderBookResponse: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscribe_order_book_response_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse subscribe_trades_response = 3;
            case kSubscribeTradesResponse: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscribe_trades_response_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse subscribe_info_response = 4;
            case kSubscribeInfoResponse: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscribe_info_response_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.Candle candle = 5;
            case kCandle: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.candle_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.Trade trade = 6;
            case kTrade: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.trade_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.OrderBook orderbook = 7;
            case kOrderbook: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.orderbook_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.TradingStatus trading_status = 8;
            case kTradingStatus: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.trading_status_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.Ping ping = 9;
            case kPing: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.ping_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse subscribe_last_price_response = 10;
            case kSubscribeLastPriceResponse: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.subscribe_last_price_response_);
              break;
            }
            // .tinkoff.public.invest.api.contract.v1.LastPrice last_price = 11;
            case kLastPrice: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.last_price_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MarketDataResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MarketDataResponse*>(&to_msg);
  auto& from = static_cast<const MarketDataResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.MarketDataResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kSubscribeCandlesResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscribe_candles_response_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesResponse>(arena, *from._impl_.payload_.subscribe_candles_response_);
        } else {
          _this->_impl_.payload_.subscribe_candles_response_->MergeFrom(from._internal_subscribe_candles_response());
        }
        break;
      }
      case kSubscribeOrderBookResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscribe_order_book_response_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookResponse>(arena, *from._impl_.payload_.subscribe_order_book_response_);
        } else {
          _this->_impl_.payload_.subscribe_order_book_response_->MergeFrom(from._internal_subscribe_order_book_response());
        }
        break;
      }
      case kSubscribeTradesResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscribe_trades_response_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeTradesResponse>(arena, *from._impl_.payload_.subscribe_trades_response_);
        } else {
          _this->_impl_.payload_.subscribe_trades_response_->MergeFrom(from._internal_subscribe_trades_response());
        }
        break;
      }
      case kSubscribeInfoResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscribe_info_response_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeInfoResponse>(arena, *from._impl_.payload_.subscribe_info_response_);
        } else {
          _this->_impl_.payload_.subscribe_info_response_->MergeFrom(from._internal_subscribe_info_response());
        }
        break;
      }
      case kCandle: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.candle_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Candle>(arena, *from._impl_.payload_.candle_);
        } else {
          _this->_impl_.payload_.candle_->MergeFrom(from._internal_candle());
        }
        break;
      }
      case kTrade: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.trade_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Trade>(arena, *from._impl_.payload_.trade_);
        } else {
          _this->_impl_.payload_.trade_->MergeFrom(from._internal_trade());
        }
        break;
      }
      case kOrderbook: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.orderbook_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::OrderBook>(arena, *from._impl_.payload_.orderbook_);
        } else {
          _this->_impl_.payload_.orderbook_->MergeFrom(from._internal_orderbook());
        }
        break;
      }
      case kTradingStatus: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.trading_status_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::TradingStatus>(arena, *from._impl_.payload_.trading_status_);
        } else {
          _this->_impl_.payload_.trading_status_->MergeFrom(from._internal_trading_status());
        }
        break;
      }
      case kPing: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.ping_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Ping>(arena, *from._impl_.payload_.ping_);
        } else {
          _this->_impl_.payload_.ping_->MergeFrom(from._internal_ping());
        }
        break;
      }
      case kSubscribeLastPriceResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.subscribe_last_price_response_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceResponse>(arena, *from._impl_.payload_.subscribe_last_price_response_);
        } else {
          _this->_impl_.payload_.subscribe_last_price_response_->MergeFrom(from._internal_subscribe_last_price_response());
        }
        break;
      }
      case kLastPrice: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.last_price_ =
              ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::LastPrice>(arena, *from._impl_.payload_.last_price_);
        } else {
          _this->_impl_.payload_.last_price_->MergeFrom(from._internal_last_price());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketDataResponse::CopyFrom(const MarketDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.MarketDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MarketDataResponse::InternalSwap(MarketDataResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MarketDataResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeCandlesRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SubscribeCandlesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_._has_bits_);
};

SubscribeCandlesRequest::SubscribeCandlesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeCandlesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        instruments_{visibility, arena, from.instruments_} {}

SubscribeCandlesRequest::SubscribeCandlesRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeCandlesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeCandlesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, subscription_action_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, subscription_action_),
           offsetof(Impl_, candle_source_type_) -
               offsetof(Impl_, subscription_action_) +
               sizeof(Impl_::candle_source_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeCandlesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        instruments_{visibility, arena} {}

inline void SubscribeCandlesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, subscription_action_),
           0,
           offsetof(Impl_, candle_source_type_) -
               offsetof(Impl_, subscription_action_) +
               sizeof(Impl_::candle_source_type_));
}
SubscribeCandlesRequest::~SubscribeCandlesRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest)
  SharedDtor(*this);
}
inline void SubscribeCandlesRequest::SharedDtor(MessageLite& self) {
  SubscribeCandlesRequest& this_ = static_cast<SubscribeCandlesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SubscribeCandlesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeCandlesRequest(arena);
}
constexpr auto SubscribeCandlesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_.instruments_) +
          decltype(SubscribeCandlesRequest::_impl_.instruments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SubscribeCandlesRequest), alignof(SubscribeCandlesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeCandlesRequest::PlacementNew_,
                                 sizeof(SubscribeCandlesRequest),
                                 alignof(SubscribeCandlesRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeCandlesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeCandlesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeCandlesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeCandlesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeCandlesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeCandlesRequest>(), &SubscribeCandlesRequest::ByteSizeLong,
            &SubscribeCandlesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeCandlesRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeCandlesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> SubscribeCandlesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967032,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeCandlesRequest, _impl_.subscription_action_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_.subscription_action_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.CandleInstrument instruments = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_.instruments_)}},
    // bool waiting_close = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeCandlesRequest, _impl_.waiting_close_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_.waiting_close_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_.subscription_action_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .tinkoff.public.invest.api.contract.v1.CandleInstrument instruments = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_.instruments_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool waiting_close = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_.waiting_close_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 9;
    {PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_.candle_source_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::CandleInstrument>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SubscribeCandlesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instruments_.Clear();
  ::memset(&_impl_.subscription_action_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.waiting_close_) -
      reinterpret_cast<char*>(&_impl_.subscription_action_)) + sizeof(_impl_.waiting_close_));
  _impl_.candle_source_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeCandlesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeCandlesRequest& this_ = static_cast<const SubscribeCandlesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeCandlesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeCandlesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
          if (this_._internal_subscription_action() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_subscription_action(), target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.CandleInstrument instruments = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_instruments_size());
               i < n; i++) {
            const auto& repfield = this_._internal_instruments().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool waiting_close = 3;
          if (this_._internal_waiting_close() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_waiting_close(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 9;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this_._internal_candle_source_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeCandlesRequest::ByteSizeLong(const MessageLite& base) {
          const SubscribeCandlesRequest& this_ = static_cast<const SubscribeCandlesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeCandlesRequest::ByteSizeLong() const {
          const SubscribeCandlesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.CandleInstrument instruments = 2;
            {
              total_size += 1UL * this_._internal_instruments_size();
              for (const auto& msg : this_._internal_instruments()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
            if (this_._internal_subscription_action() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_action());
            }
            // bool waiting_close = 3;
            if (this_._internal_waiting_close() != 0) {
              total_size += 2;
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 9;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_candle_source_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeCandlesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeCandlesRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeCandlesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_instruments()->MergeFrom(
      from._internal_instruments());
  if (from._internal_subscription_action() != 0) {
    _this->_impl_.subscription_action_ = from._impl_.subscription_action_;
  }
  if (from._internal_waiting_close() != 0) {
    _this->_impl_.waiting_close_ = from._impl_.waiting_close_;
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.candle_source_type_ = from._impl_.candle_source_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeCandlesRequest::CopyFrom(const SubscribeCandlesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.SubscribeCandlesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeCandlesRequest::InternalSwap(SubscribeCandlesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.instruments_.InternalSwap(&other->_impl_.instruments_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_.candle_source_type_)
      + sizeof(SubscribeCandlesRequest::_impl_.candle_source_type_)
      - PROTOBUF_FIELD_OFFSET(SubscribeCandlesRequest, _impl_.subscription_action_)>(
          reinterpret_cast<char*>(&_impl_.subscription_action_),
          reinterpret_cast<char*>(&other->_impl_.subscription_action_));
}

::google::protobuf::Metadata SubscribeCandlesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CandleInstrument::_Internal {
 public:
};

CandleInstrument::CandleInstrument(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.CandleInstrument)
}
inline PROTOBUF_NDEBUG_INLINE CandleInstrument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::CandleInstrument& from_msg)
      : figi_(arena, from.figi_),
        instrument_id_(arena, from.instrument_id_),
        _cached_size_{0} {}

CandleInstrument::CandleInstrument(
    ::google::protobuf::Arena* arena,
    const CandleInstrument& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CandleInstrument* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.interval_ = from._impl_.interval_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.CandleInstrument)
}
inline PROTOBUF_NDEBUG_INLINE CandleInstrument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        instrument_id_(arena),
        _cached_size_{0} {}

inline void CandleInstrument::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.interval_ = {};
}
CandleInstrument::~CandleInstrument() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.CandleInstrument)
  SharedDtor(*this);
}
inline void CandleInstrument::SharedDtor(MessageLite& self) {
  CandleInstrument& this_ = static_cast<CandleInstrument&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CandleInstrument::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CandleInstrument(arena);
}
constexpr auto CandleInstrument::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CandleInstrument),
                                            alignof(CandleInstrument));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CandleInstrument::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CandleInstrument_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CandleInstrument::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CandleInstrument>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CandleInstrument::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CandleInstrument>(), &CandleInstrument::ByteSizeLong,
            &CandleInstrument::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CandleInstrument, _impl_._cached_size_),
        false,
    },
    &CandleInstrument::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CandleInstrument::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 80, 2> CandleInstrument::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::CandleInstrument>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CandleInstrument, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CandleInstrument, _impl_.interval_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CandleInstrument, _impl_.interval_)}},
    // string instrument_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CandleInstrument, _impl_.instrument_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(CandleInstrument, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
    {PROTOBUF_FIELD_OFFSET(CandleInstrument, _impl_.interval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string instrument_id = 3;
    {PROTOBUF_FIELD_OFFSET(CandleInstrument, _impl_.instrument_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\4\0\15\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.CandleInstrument"
    "figi"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void CandleInstrument::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.CandleInstrument)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_id_.ClearToEmpty();
  _impl_.interval_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CandleInstrument::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CandleInstrument& this_ = static_cast<const CandleInstrument&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CandleInstrument::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CandleInstrument& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.CandleInstrument)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1 [deprecated = true];
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.CandleInstrument.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
          if (this_._internal_interval() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_interval(), target);
          }

          // string instrument_id = 3;
          if (!this_._internal_instrument_id().empty()) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.CandleInstrument.instrument_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.CandleInstrument)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CandleInstrument::ByteSizeLong(const MessageLite& base) {
          const CandleInstrument& this_ = static_cast<const CandleInstrument&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CandleInstrument::ByteSizeLong() const {
          const CandleInstrument& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.CandleInstrument)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1 [deprecated = true];
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_id = 3;
            if (!this_._internal_instrument_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
            // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
            if (this_._internal_interval() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_interval());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CandleInstrument::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CandleInstrument*>(&to_msg);
  auto& from = static_cast<const CandleInstrument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.CandleInstrument)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  if (from._internal_interval() != 0) {
    _this->_impl_.interval_ = from._impl_.interval_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CandleInstrument::CopyFrom(const CandleInstrument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.CandleInstrument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CandleInstrument::InternalSwap(CandleInstrument* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
  swap(_impl_.interval_, other->_impl_.interval_);
}

::google::protobuf::Metadata CandleInstrument::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeCandlesResponse::_Internal {
 public:
};

SubscribeCandlesResponse::SubscribeCandlesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeCandlesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesResponse& from_msg)
      : candles_subscriptions_{visibility, arena, from.candles_subscriptions_},
        tracking_id_(arena, from.tracking_id_),
        _cached_size_{0} {}

SubscribeCandlesResponse::SubscribeCandlesResponse(
    ::google::protobuf::Arena* arena,
    const SubscribeCandlesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeCandlesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeCandlesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : candles_subscriptions_{visibility, arena},
        tracking_id_(arena),
        _cached_size_{0} {}

inline void SubscribeCandlesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubscribeCandlesResponse::~SubscribeCandlesResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse)
  SharedDtor(*this);
}
inline void SubscribeCandlesResponse::SharedDtor(MessageLite& self) {
  SubscribeCandlesResponse& this_ = static_cast<SubscribeCandlesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tracking_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubscribeCandlesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeCandlesResponse(arena);
}
constexpr auto SubscribeCandlesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeCandlesResponse, _impl_.candles_subscriptions_) +
          decltype(SubscribeCandlesResponse::_impl_.candles_subscriptions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubscribeCandlesResponse), alignof(SubscribeCandlesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeCandlesResponse::PlacementNew_,
                                 sizeof(SubscribeCandlesResponse),
                                 alignof(SubscribeCandlesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeCandlesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeCandlesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeCandlesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeCandlesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeCandlesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeCandlesResponse>(), &SubscribeCandlesResponse::ByteSizeLong,
            &SubscribeCandlesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeCandlesResponse, _impl_._cached_size_),
        false,
    },
    &SubscribeCandlesResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeCandlesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 82, 2> SubscribeCandlesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeCandlesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.CandleSubscription candles_subscriptions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeCandlesResponse, _impl_.candles_subscriptions_)}},
    // string tracking_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeCandlesResponse, _impl_.tracking_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tracking_id = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeCandlesResponse, _impl_.tracking_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.public.invest.api.contract.v1.CandleSubscription candles_subscriptions = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeCandlesResponse, _impl_.candles_subscriptions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::CandleSubscription>()},
  }}, {{
    "\76\13\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse"
    "tracking_id"
  }},
};

PROTOBUF_NOINLINE void SubscribeCandlesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.candles_subscriptions_.Clear();
  _impl_.tracking_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeCandlesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeCandlesResponse& this_ = static_cast<const SubscribeCandlesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeCandlesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeCandlesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string tracking_id = 1;
          if (!this_._internal_tracking_id().empty()) {
            const std::string& _s = this_._internal_tracking_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse.tracking_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.CandleSubscription candles_subscriptions = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_candles_subscriptions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_candles_subscriptions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeCandlesResponse::ByteSizeLong(const MessageLite& base) {
          const SubscribeCandlesResponse& this_ = static_cast<const SubscribeCandlesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeCandlesResponse::ByteSizeLong() const {
          const SubscribeCandlesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.CandleSubscription candles_subscriptions = 2;
            {
              total_size += 1UL * this_._internal_candles_subscriptions_size();
              for (const auto& msg : this_._internal_candles_subscriptions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string tracking_id = 1;
            if (!this_._internal_tracking_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tracking_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeCandlesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeCandlesResponse*>(&to_msg);
  auto& from = static_cast<const SubscribeCandlesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_candles_subscriptions()->MergeFrom(
      from._internal_candles_subscriptions());
  if (!from._internal_tracking_id().empty()) {
    _this->_internal_set_tracking_id(from._internal_tracking_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeCandlesResponse::CopyFrom(const SubscribeCandlesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.SubscribeCandlesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeCandlesResponse::InternalSwap(SubscribeCandlesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.candles_subscriptions_.InternalSwap(&other->_impl_.candles_subscriptions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tracking_id_, &other->_impl_.tracking_id_, arena);
}

::google::protobuf::Metadata SubscribeCandlesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CandleSubscription::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CandleSubscription>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_._has_bits_);
};

CandleSubscription::CandleSubscription(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.CandleSubscription)
}
inline PROTOBUF_NDEBUG_INLINE CandleSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::CandleSubscription& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_),
        stream_id_(arena, from.stream_id_),
        subscription_id_(arena, from.subscription_id_) {}

CandleSubscription::CandleSubscription(
    ::google::protobuf::Arena* arena,
    const CandleSubscription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CandleSubscription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, interval_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, interval_),
           offsetof(Impl_, candle_source_type_) -
               offsetof(Impl_, interval_) +
               sizeof(Impl_::candle_source_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.CandleSubscription)
}
inline PROTOBUF_NDEBUG_INLINE CandleSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_uid_(arena),
        stream_id_(arena),
        subscription_id_(arena) {}

inline void CandleSubscription::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, interval_),
           0,
           offsetof(Impl_, candle_source_type_) -
               offsetof(Impl_, interval_) +
               sizeof(Impl_::candle_source_type_));
}
CandleSubscription::~CandleSubscription() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.CandleSubscription)
  SharedDtor(*this);
}
inline void CandleSubscription::SharedDtor(MessageLite& self) {
  CandleSubscription& this_ = static_cast<CandleSubscription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.stream_id_.Destroy();
  this_._impl_.subscription_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CandleSubscription::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CandleSubscription(arena);
}
constexpr auto CandleSubscription::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CandleSubscription),
                                            alignof(CandleSubscription));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CandleSubscription::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CandleSubscription_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CandleSubscription::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CandleSubscription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CandleSubscription::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CandleSubscription>(), &CandleSubscription::ByteSizeLong,
            &CandleSubscription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_._cached_size_),
        false,
    },
    &CandleSubscription::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CandleSubscription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 0, 115, 2> CandleSubscription::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::CandleSubscription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CandleSubscription, _impl_.interval_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.interval_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CandleSubscription, _impl_.subscription_status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.subscription_status_)}},
    // string instrument_uid = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.instrument_uid_)}},
    // bool waiting_close = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CandleSubscription, _impl_.waiting_close_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.waiting_close_)}},
    // string stream_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.stream_id_)}},
    // string subscription_id = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.subscription_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CandleSubscription, _impl_.candle_source_type_), 0>(),
     {72, 0, 0, PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.candle_source_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
    {PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.interval_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 3;
    {PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.subscription_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string instrument_uid = 4;
    {PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool waiting_close = 5;
    {PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.waiting_close_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string stream_id = 6;
    {PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.stream_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscription_id = 7;
    {PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.subscription_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 9;
    {PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.candle_source_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\70\4\0\0\16\0\11\17\0\0\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.CandleSubscription"
    "figi"
    "instrument_uid"
    "stream_id"
    "subscription_id"
  }},
};

PROTOBUF_NOINLINE void CandleSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.CandleSubscription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.stream_id_.ClearToEmpty();
  _impl_.subscription_id_.ClearToEmpty();
  ::memset(&_impl_.interval_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.waiting_close_) -
      reinterpret_cast<char*>(&_impl_.interval_)) + sizeof(_impl_.waiting_close_));
  _impl_.candle_source_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CandleSubscription::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CandleSubscription& this_ = static_cast<const CandleSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CandleSubscription::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CandleSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.CandleSubscription)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.CandleSubscription.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
          if (this_._internal_interval() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_interval(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 3;
          if (this_._internal_subscription_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_subscription_status(), target);
          }

          // string instrument_uid = 4;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.CandleSubscription.instrument_uid");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // bool waiting_close = 5;
          if (this_._internal_waiting_close() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_waiting_close(), target);
          }

          // string stream_id = 6;
          if (!this_._internal_stream_id().empty()) {
            const std::string& _s = this_._internal_stream_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.CandleSubscription.stream_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string subscription_id = 7;
          if (!this_._internal_subscription_id().empty()) {
            const std::string& _s = this_._internal_subscription_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.CandleSubscription.subscription_id");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 9;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this_._internal_candle_source_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.CandleSubscription)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CandleSubscription::ByteSizeLong(const MessageLite& base) {
          const CandleSubscription& this_ = static_cast<const CandleSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CandleSubscription::ByteSizeLong() const {
          const CandleSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.CandleSubscription)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 4;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // string stream_id = 6;
            if (!this_._internal_stream_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stream_id());
            }
            // string subscription_id = 7;
            if (!this_._internal_subscription_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscription_id());
            }
            // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
            if (this_._internal_interval() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_interval());
            }
            // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 3;
            if (this_._internal_subscription_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_status());
            }
            // bool waiting_close = 5;
            if (this_._internal_waiting_close() != 0) {
              total_size += 2;
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 9;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_candle_source_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CandleSubscription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CandleSubscription*>(&to_msg);
  auto& from = static_cast<const CandleSubscription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.CandleSubscription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_stream_id().empty()) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  if (!from._internal_subscription_id().empty()) {
    _this->_internal_set_subscription_id(from._internal_subscription_id());
  }
  if (from._internal_interval() != 0) {
    _this->_impl_.interval_ = from._impl_.interval_;
  }
  if (from._internal_subscription_status() != 0) {
    _this->_impl_.subscription_status_ = from._impl_.subscription_status_;
  }
  if (from._internal_waiting_close() != 0) {
    _this->_impl_.waiting_close_ = from._impl_.waiting_close_;
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.candle_source_type_ = from._impl_.candle_source_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CandleSubscription::CopyFrom(const CandleSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.CandleSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CandleSubscription::InternalSwap(CandleSubscription* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stream_id_, &other->_impl_.stream_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscription_id_, &other->_impl_.subscription_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.candle_source_type_)
      + sizeof(CandleSubscription::_impl_.candle_source_type_)
      - PROTOBUF_FIELD_OFFSET(CandleSubscription, _impl_.interval_)>(
          reinterpret_cast<char*>(&_impl_.interval_),
          reinterpret_cast<char*>(&other->_impl_.interval_));
}

::google::protobuf::Metadata CandleSubscription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeOrderBookRequest::_Internal {
 public:
};

SubscribeOrderBookRequest::SubscribeOrderBookRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeOrderBookRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest& from_msg)
      : instruments_{visibility, arena, from.instruments_},
        _cached_size_{0} {}

SubscribeOrderBookRequest::SubscribeOrderBookRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeOrderBookRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeOrderBookRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.subscription_action_ = from._impl_.subscription_action_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeOrderBookRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : instruments_{visibility, arena},
        _cached_size_{0} {}

inline void SubscribeOrderBookRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscription_action_ = {};
}
SubscribeOrderBookRequest::~SubscribeOrderBookRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest)
  SharedDtor(*this);
}
inline void SubscribeOrderBookRequest::SharedDtor(MessageLite& self) {
  SubscribeOrderBookRequest& this_ = static_cast<SubscribeOrderBookRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SubscribeOrderBookRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeOrderBookRequest(arena);
}
constexpr auto SubscribeOrderBookRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeOrderBookRequest, _impl_.instruments_) +
          decltype(SubscribeOrderBookRequest::_impl_.instruments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SubscribeOrderBookRequest), alignof(SubscribeOrderBookRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeOrderBookRequest::PlacementNew_,
                                 sizeof(SubscribeOrderBookRequest),
                                 alignof(SubscribeOrderBookRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeOrderBookRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeOrderBookRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeOrderBookRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeOrderBookRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeOrderBookRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeOrderBookRequest>(), &SubscribeOrderBookRequest::ByteSizeLong,
            &SubscribeOrderBookRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeOrderBookRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeOrderBookRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeOrderBookRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SubscribeOrderBookRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.OrderBookInstrument instruments = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeOrderBookRequest, _impl_.instruments_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeOrderBookRequest, _impl_.subscription_action_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeOrderBookRequest, _impl_.subscription_action_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeOrderBookRequest, _impl_.subscription_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderBookInstrument instruments = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeOrderBookRequest, _impl_.instruments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderBookInstrument>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SubscribeOrderBookRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instruments_.Clear();
  _impl_.subscription_action_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeOrderBookRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeOrderBookRequest& this_ = static_cast<const SubscribeOrderBookRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeOrderBookRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeOrderBookRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
          if (this_._internal_subscription_action() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_subscription_action(), target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.OrderBookInstrument instruments = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_instruments_size());
               i < n; i++) {
            const auto& repfield = this_._internal_instruments().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeOrderBookRequest::ByteSizeLong(const MessageLite& base) {
          const SubscribeOrderBookRequest& this_ = static_cast<const SubscribeOrderBookRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeOrderBookRequest::ByteSizeLong() const {
          const SubscribeOrderBookRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.OrderBookInstrument instruments = 2;
            {
              total_size += 1UL * this_._internal_instruments_size();
              for (const auto& msg : this_._internal_instruments()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
            if (this_._internal_subscription_action() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_action());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeOrderBookRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeOrderBookRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeOrderBookRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_instruments()->MergeFrom(
      from._internal_instruments());
  if (from._internal_subscription_action() != 0) {
    _this->_impl_.subscription_action_ = from._impl_.subscription_action_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeOrderBookRequest::CopyFrom(const SubscribeOrderBookRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeOrderBookRequest::InternalSwap(SubscribeOrderBookRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.instruments_.InternalSwap(&other->_impl_.instruments_);
  swap(_impl_.subscription_action_, other->_impl_.subscription_action_);
}

::google::protobuf::Metadata SubscribeOrderBookRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderBookInstrument::_Internal {
 public:
};

OrderBookInstrument::OrderBookInstrument(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderBookInstrument)
}
inline PROTOBUF_NDEBUG_INLINE OrderBookInstrument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::OrderBookInstrument& from_msg)
      : figi_(arena, from.figi_),
        instrument_id_(arena, from.instrument_id_),
        _cached_size_{0} {}

OrderBookInstrument::OrderBookInstrument(
    ::google::protobuf::Arena* arena,
    const OrderBookInstrument& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderBookInstrument* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, depth_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, depth_),
           offsetof(Impl_, order_book_type_) -
               offsetof(Impl_, depth_) +
               sizeof(Impl_::order_book_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderBookInstrument)
}
inline PROTOBUF_NDEBUG_INLINE OrderBookInstrument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        instrument_id_(arena),
        _cached_size_{0} {}

inline void OrderBookInstrument::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, depth_),
           0,
           offsetof(Impl_, order_book_type_) -
               offsetof(Impl_, depth_) +
               sizeof(Impl_::order_book_type_));
}
OrderBookInstrument::~OrderBookInstrument() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderBookInstrument)
  SharedDtor(*this);
}
inline void OrderBookInstrument::SharedDtor(MessageLite& self) {
  OrderBookInstrument& this_ = static_cast<OrderBookInstrument&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* OrderBookInstrument::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderBookInstrument(arena);
}
constexpr auto OrderBookInstrument::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderBookInstrument),
                                            alignof(OrderBookInstrument));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderBookInstrument::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderBookInstrument_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderBookInstrument::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderBookInstrument>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderBookInstrument::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderBookInstrument>(), &OrderBookInstrument::ByteSizeLong,
            &OrderBookInstrument::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderBookInstrument, _impl_._cached_size_),
        false,
    },
    &OrderBookInstrument::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderBookInstrument::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 83, 2> OrderBookInstrument::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderBookInstrument>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderBookInstrument, _impl_.order_book_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBookInstrument, _impl_.order_book_type_)}},
    // string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBookInstrument, _impl_.figi_)}},
    // int32 depth = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderBookInstrument, _impl_.depth_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBookInstrument, _impl_.depth_)}},
    // string instrument_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBookInstrument, _impl_.instrument_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(OrderBookInstrument, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 depth = 2;
    {PROTOBUF_FIELD_OFFSET(OrderBookInstrument, _impl_.depth_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string instrument_id = 3;
    {PROTOBUF_FIELD_OFFSET(OrderBookInstrument, _impl_.instrument_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 4;
    {PROTOBUF_FIELD_OFFSET(OrderBookInstrument, _impl_.order_book_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\71\4\0\15\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OrderBookInstrument"
    "figi"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void OrderBookInstrument::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderBookInstrument)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_id_.ClearToEmpty();
  ::memset(&_impl_.depth_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.order_book_type_) -
      reinterpret_cast<char*>(&_impl_.depth_)) + sizeof(_impl_.order_book_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderBookInstrument::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderBookInstrument& this_ = static_cast<const OrderBookInstrument&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderBookInstrument::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderBookInstrument& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderBookInstrument)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1 [deprecated = true];
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderBookInstrument.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 depth = 2;
          if (this_._internal_depth() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_depth(), target);
          }

          // string instrument_id = 3;
          if (!this_._internal_instrument_id().empty()) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderBookInstrument.instrument_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 4;
          if (this_._internal_order_book_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_order_book_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderBookInstrument)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderBookInstrument::ByteSizeLong(const MessageLite& base) {
          const OrderBookInstrument& this_ = static_cast<const OrderBookInstrument&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderBookInstrument::ByteSizeLong() const {
          const OrderBookInstrument& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderBookInstrument)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1 [deprecated = true];
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_id = 3;
            if (!this_._internal_instrument_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
            // int32 depth = 2;
            if (this_._internal_depth() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_depth());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 4;
            if (this_._internal_order_book_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_order_book_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderBookInstrument::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderBookInstrument*>(&to_msg);
  auto& from = static_cast<const OrderBookInstrument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderBookInstrument)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  if (from._internal_depth() != 0) {
    _this->_impl_.depth_ = from._impl_.depth_;
  }
  if (from._internal_order_book_type() != 0) {
    _this->_impl_.order_book_type_ = from._impl_.order_book_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderBookInstrument::CopyFrom(const OrderBookInstrument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderBookInstrument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderBookInstrument::InternalSwap(OrderBookInstrument* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderBookInstrument, _impl_.order_book_type_)
      + sizeof(OrderBookInstrument::_impl_.order_book_type_)
      - PROTOBUF_FIELD_OFFSET(OrderBookInstrument, _impl_.depth_)>(
          reinterpret_cast<char*>(&_impl_.depth_),
          reinterpret_cast<char*>(&other->_impl_.depth_));
}

::google::protobuf::Metadata OrderBookInstrument::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeOrderBookResponse::_Internal {
 public:
};

SubscribeOrderBookResponse::SubscribeOrderBookResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeOrderBookResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookResponse& from_msg)
      : order_book_subscriptions_{visibility, arena, from.order_book_subscriptions_},
        tracking_id_(arena, from.tracking_id_),
        _cached_size_{0} {}

SubscribeOrderBookResponse::SubscribeOrderBookResponse(
    ::google::protobuf::Arena* arena,
    const SubscribeOrderBookResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeOrderBookResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeOrderBookResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : order_book_subscriptions_{visibility, arena},
        tracking_id_(arena),
        _cached_size_{0} {}

inline void SubscribeOrderBookResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubscribeOrderBookResponse::~SubscribeOrderBookResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse)
  SharedDtor(*this);
}
inline void SubscribeOrderBookResponse::SharedDtor(MessageLite& self) {
  SubscribeOrderBookResponse& this_ = static_cast<SubscribeOrderBookResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tracking_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubscribeOrderBookResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeOrderBookResponse(arena);
}
constexpr auto SubscribeOrderBookResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeOrderBookResponse, _impl_.order_book_subscriptions_) +
          decltype(SubscribeOrderBookResponse::_impl_.order_book_subscriptions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubscribeOrderBookResponse), alignof(SubscribeOrderBookResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeOrderBookResponse::PlacementNew_,
                                 sizeof(SubscribeOrderBookResponse),
                                 alignof(SubscribeOrderBookResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeOrderBookResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeOrderBookResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeOrderBookResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeOrderBookResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeOrderBookResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeOrderBookResponse>(), &SubscribeOrderBookResponse::ByteSizeLong,
            &SubscribeOrderBookResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeOrderBookResponse, _impl_._cached_size_),
        false,
    },
    &SubscribeOrderBookResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeOrderBookResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 84, 2> SubscribeOrderBookResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeOrderBookResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.OrderBookSubscription order_book_subscriptions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeOrderBookResponse, _impl_.order_book_subscriptions_)}},
    // string tracking_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeOrderBookResponse, _impl_.tracking_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tracking_id = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeOrderBookResponse, _impl_.tracking_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.public.invest.api.contract.v1.OrderBookSubscription order_book_subscriptions = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeOrderBookResponse, _impl_.order_book_subscriptions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription>()},
  }}, {{
    "\100\13\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse"
    "tracking_id"
  }},
};

PROTOBUF_NOINLINE void SubscribeOrderBookResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_book_subscriptions_.Clear();
  _impl_.tracking_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeOrderBookResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeOrderBookResponse& this_ = static_cast<const SubscribeOrderBookResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeOrderBookResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeOrderBookResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string tracking_id = 1;
          if (!this_._internal_tracking_id().empty()) {
            const std::string& _s = this_._internal_tracking_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse.tracking_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.OrderBookSubscription order_book_subscriptions = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_order_book_subscriptions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_order_book_subscriptions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeOrderBookResponse::ByteSizeLong(const MessageLite& base) {
          const SubscribeOrderBookResponse& this_ = static_cast<const SubscribeOrderBookResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeOrderBookResponse::ByteSizeLong() const {
          const SubscribeOrderBookResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.OrderBookSubscription order_book_subscriptions = 2;
            {
              total_size += 1UL * this_._internal_order_book_subscriptions_size();
              for (const auto& msg : this_._internal_order_book_subscriptions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string tracking_id = 1;
            if (!this_._internal_tracking_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tracking_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeOrderBookResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeOrderBookResponse*>(&to_msg);
  auto& from = static_cast<const SubscribeOrderBookResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_order_book_subscriptions()->MergeFrom(
      from._internal_order_book_subscriptions());
  if (!from._internal_tracking_id().empty()) {
    _this->_internal_set_tracking_id(from._internal_tracking_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeOrderBookResponse::CopyFrom(const SubscribeOrderBookResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.SubscribeOrderBookResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeOrderBookResponse::InternalSwap(SubscribeOrderBookResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.order_book_subscriptions_.InternalSwap(&other->_impl_.order_book_subscriptions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tracking_id_, &other->_impl_.tracking_id_, arena);
}

::google::protobuf::Metadata SubscribeOrderBookResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderBookSubscription::_Internal {
 public:
};

OrderBookSubscription::OrderBookSubscription(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderBookSubscription)
}
inline PROTOBUF_NDEBUG_INLINE OrderBookSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription& from_msg)
      : figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_),
        stream_id_(arena, from.stream_id_),
        subscription_id_(arena, from.subscription_id_),
        _cached_size_{0} {}

OrderBookSubscription::OrderBookSubscription(
    ::google::protobuf::Arena* arena,
    const OrderBookSubscription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderBookSubscription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, depth_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, depth_),
           offsetof(Impl_, order_book_type_) -
               offsetof(Impl_, depth_) +
               sizeof(Impl_::order_book_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderBookSubscription)
}
inline PROTOBUF_NDEBUG_INLINE OrderBookSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        instrument_uid_(arena),
        stream_id_(arena),
        subscription_id_(arena),
        _cached_size_{0} {}

inline void OrderBookSubscription::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, depth_),
           0,
           offsetof(Impl_, order_book_type_) -
               offsetof(Impl_, depth_) +
               sizeof(Impl_::order_book_type_));
}
OrderBookSubscription::~OrderBookSubscription() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderBookSubscription)
  SharedDtor(*this);
}
inline void OrderBookSubscription::SharedDtor(MessageLite& self) {
  OrderBookSubscription& this_ = static_cast<OrderBookSubscription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.stream_id_.Destroy();
  this_._impl_.subscription_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* OrderBookSubscription::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderBookSubscription(arena);
}
constexpr auto OrderBookSubscription::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderBookSubscription),
                                            alignof(OrderBookSubscription));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderBookSubscription::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderBookSubscription_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderBookSubscription::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderBookSubscription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderBookSubscription::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderBookSubscription>(), &OrderBookSubscription::ByteSizeLong,
            &OrderBookSubscription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_._cached_size_),
        false,
    },
    &OrderBookSubscription::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderBookSubscription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 110, 2> OrderBookSubscription::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderBookSubscription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.figi_)}},
    // int32 depth = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderBookSubscription, _impl_.depth_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.depth_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderBookSubscription, _impl_.subscription_status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.subscription_status_)}},
    // string instrument_uid = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.instrument_uid_)}},
    // string stream_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.stream_id_)}},
    // string subscription_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.subscription_id_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderBookSubscription, _impl_.order_book_type_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.order_book_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 depth = 2;
    {PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.depth_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 3;
    {PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.subscription_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string instrument_uid = 4;
    {PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.instrument_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string stream_id = 5;
    {PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscription_id = 6;
    {PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.subscription_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 7;
    {PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.order_book_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\73\4\0\0\16\11\17\0"
    "tinkoff.public.invest.api.contract.v1.OrderBookSubscription"
    "figi"
    "instrument_uid"
    "stream_id"
    "subscription_id"
  }},
};

PROTOBUF_NOINLINE void OrderBookSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderBookSubscription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.stream_id_.ClearToEmpty();
  _impl_.subscription_id_.ClearToEmpty();
  ::memset(&_impl_.depth_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.order_book_type_) -
      reinterpret_cast<char*>(&_impl_.depth_)) + sizeof(_impl_.order_book_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderBookSubscription::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderBookSubscription& this_ = static_cast<const OrderBookSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderBookSubscription::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderBookSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderBookSubscription)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderBookSubscription.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 depth = 2;
          if (this_._internal_depth() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_depth(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 3;
          if (this_._internal_subscription_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_subscription_status(), target);
          }

          // string instrument_uid = 4;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderBookSubscription.instrument_uid");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string stream_id = 5;
          if (!this_._internal_stream_id().empty()) {
            const std::string& _s = this_._internal_stream_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderBookSubscription.stream_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string subscription_id = 6;
          if (!this_._internal_subscription_id().empty()) {
            const std::string& _s = this_._internal_subscription_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderBookSubscription.subscription_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 7;
          if (this_._internal_order_book_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_order_book_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderBookSubscription)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderBookSubscription::ByteSizeLong(const MessageLite& base) {
          const OrderBookSubscription& this_ = static_cast<const OrderBookSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderBookSubscription::ByteSizeLong() const {
          const OrderBookSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderBookSubscription)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 4;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // string stream_id = 5;
            if (!this_._internal_stream_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stream_id());
            }
            // string subscription_id = 6;
            if (!this_._internal_subscription_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscription_id());
            }
            // int32 depth = 2;
            if (this_._internal_depth() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_depth());
            }
            // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 3;
            if (this_._internal_subscription_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_status());
            }
            // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 7;
            if (this_._internal_order_book_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_order_book_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderBookSubscription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderBookSubscription*>(&to_msg);
  auto& from = static_cast<const OrderBookSubscription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderBookSubscription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_stream_id().empty()) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  if (!from._internal_subscription_id().empty()) {
    _this->_internal_set_subscription_id(from._internal_subscription_id());
  }
  if (from._internal_depth() != 0) {
    _this->_impl_.depth_ = from._impl_.depth_;
  }
  if (from._internal_subscription_status() != 0) {
    _this->_impl_.subscription_status_ = from._impl_.subscription_status_;
  }
  if (from._internal_order_book_type() != 0) {
    _this->_impl_.order_book_type_ = from._impl_.order_book_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderBookSubscription::CopyFrom(const OrderBookSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderBookSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderBookSubscription::InternalSwap(OrderBookSubscription* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stream_id_, &other->_impl_.stream_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscription_id_, &other->_impl_.subscription_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.order_book_type_)
      + sizeof(OrderBookSubscription::_impl_.order_book_type_)
      - PROTOBUF_FIELD_OFFSET(OrderBookSubscription, _impl_.depth_)>(
          reinterpret_cast<char*>(&_impl_.depth_),
          reinterpret_cast<char*>(&other->_impl_.depth_));
}

::google::protobuf::Metadata OrderBookSubscription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeTradesRequest::_Internal {
 public:
};

SubscribeTradesRequest::SubscribeTradesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeTradesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest& from_msg)
      : instruments_{visibility, arena, from.instruments_},
        _cached_size_{0} {}

SubscribeTradesRequest::SubscribeTradesRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeTradesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeTradesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, subscription_action_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, subscription_action_),
           offsetof(Impl_, trade_source_) -
               offsetof(Impl_, subscription_action_) +
               sizeof(Impl_::trade_source_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeTradesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : instruments_{visibility, arena},
        _cached_size_{0} {}

inline void SubscribeTradesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, subscription_action_),
           0,
           offsetof(Impl_, trade_source_) -
               offsetof(Impl_, subscription_action_) +
               sizeof(Impl_::trade_source_));
}
SubscribeTradesRequest::~SubscribeTradesRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest)
  SharedDtor(*this);
}
inline void SubscribeTradesRequest::SharedDtor(MessageLite& self) {
  SubscribeTradesRequest& this_ = static_cast<SubscribeTradesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SubscribeTradesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeTradesRequest(arena);
}
constexpr auto SubscribeTradesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeTradesRequest, _impl_.instruments_) +
          decltype(SubscribeTradesRequest::_impl_.instruments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SubscribeTradesRequest), alignof(SubscribeTradesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeTradesRequest::PlacementNew_,
                                 sizeof(SubscribeTradesRequest),
                                 alignof(SubscribeTradesRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeTradesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeTradesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeTradesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeTradesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeTradesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeTradesRequest>(), &SubscribeTradesRequest::ByteSizeLong,
            &SubscribeTradesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeTradesRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeTradesRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeTradesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> SubscribeTradesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeTradesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeTradesRequest, _impl_.subscription_action_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeTradesRequest, _impl_.subscription_action_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.TradeInstrument instruments = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeTradesRequest, _impl_.instruments_)}},
    // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeTradesRequest, _impl_.trade_source_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeTradesRequest, _impl_.trade_source_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeTradesRequest, _impl_.subscription_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .tinkoff.public.invest.api.contract.v1.TradeInstrument instruments = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeTradesRequest, _impl_.instruments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeTradesRequest, _impl_.trade_source_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::TradeInstrument>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SubscribeTradesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instruments_.Clear();
  ::memset(&_impl_.subscription_action_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.trade_source_) -
      reinterpret_cast<char*>(&_impl_.subscription_action_)) + sizeof(_impl_.trade_source_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeTradesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeTradesRequest& this_ = static_cast<const SubscribeTradesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeTradesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeTradesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
          if (this_._internal_subscription_action() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_subscription_action(), target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.TradeInstrument instruments = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_instruments_size());
               i < n; i++) {
            const auto& repfield = this_._internal_instruments().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 3;
          if (this_._internal_trade_source() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_trade_source(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeTradesRequest::ByteSizeLong(const MessageLite& base) {
          const SubscribeTradesRequest& this_ = static_cast<const SubscribeTradesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeTradesRequest::ByteSizeLong() const {
          const SubscribeTradesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.TradeInstrument instruments = 2;
            {
              total_size += 1UL * this_._internal_instruments_size();
              for (const auto& msg : this_._internal_instruments()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
            if (this_._internal_subscription_action() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_action());
            }
            // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 3;
            if (this_._internal_trade_source() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_trade_source());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeTradesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeTradesRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeTradesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_instruments()->MergeFrom(
      from._internal_instruments());
  if (from._internal_subscription_action() != 0) {
    _this->_impl_.subscription_action_ = from._impl_.subscription_action_;
  }
  if (from._internal_trade_source() != 0) {
    _this->_impl_.trade_source_ = from._impl_.trade_source_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeTradesRequest::CopyFrom(const SubscribeTradesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.SubscribeTradesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeTradesRequest::InternalSwap(SubscribeTradesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.instruments_.InternalSwap(&other->_impl_.instruments_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeTradesRequest, _impl_.trade_source_)
      + sizeof(SubscribeTradesRequest::_impl_.trade_source_)
      - PROTOBUF_FIELD_OFFSET(SubscribeTradesRequest, _impl_.subscription_action_)>(
          reinterpret_cast<char*>(&_impl_.subscription_action_),
          reinterpret_cast<char*>(&other->_impl_.subscription_action_));
}

::google::protobuf::Metadata SubscribeTradesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TradeInstrument::_Internal {
 public:
};

TradeInstrument::TradeInstrument(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.TradeInstrument)
}
inline PROTOBUF_NDEBUG_INLINE TradeInstrument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::TradeInstrument& from_msg)
      : figi_(arena, from.figi_),
        instrument_id_(arena, from.instrument_id_),
        _cached_size_{0} {}

TradeInstrument::TradeInstrument(
    ::google::protobuf::Arena* arena,
    const TradeInstrument& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TradeInstrument* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.TradeInstrument)
}
inline PROTOBUF_NDEBUG_INLINE TradeInstrument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        instrument_id_(arena),
        _cached_size_{0} {}

inline void TradeInstrument::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TradeInstrument::~TradeInstrument() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.TradeInstrument)
  SharedDtor(*this);
}
inline void TradeInstrument::SharedDtor(MessageLite& self) {
  TradeInstrument& this_ = static_cast<TradeInstrument&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TradeInstrument::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TradeInstrument(arena);
}
constexpr auto TradeInstrument::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TradeInstrument),
                                            alignof(TradeInstrument));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TradeInstrument::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TradeInstrument_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TradeInstrument::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TradeInstrument>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TradeInstrument::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TradeInstrument>(), &TradeInstrument::ByteSizeLong,
            &TradeInstrument::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TradeInstrument, _impl_._cached_size_),
        false,
    },
    &TradeInstrument::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TradeInstrument::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2> TradeInstrument::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::TradeInstrument>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string instrument_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TradeInstrument, _impl_.instrument_id_)}},
    // string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TradeInstrument, _impl_.figi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TradeInstrument, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_id = 2;
    {PROTOBUF_FIELD_OFFSET(TradeInstrument, _impl_.instrument_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\4\15\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.TradeInstrument"
    "figi"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void TradeInstrument::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.TradeInstrument)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TradeInstrument::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TradeInstrument& this_ = static_cast<const TradeInstrument&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TradeInstrument::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TradeInstrument& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.TradeInstrument)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1 [deprecated = true];
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.TradeInstrument.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string instrument_id = 2;
          if (!this_._internal_instrument_id().empty()) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.TradeInstrument.instrument_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.TradeInstrument)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TradeInstrument::ByteSizeLong(const MessageLite& base) {
          const TradeInstrument& this_ = static_cast<const TradeInstrument&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TradeInstrument::ByteSizeLong() const {
          const TradeInstrument& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.TradeInstrument)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1 [deprecated = true];
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_id = 2;
            if (!this_._internal_instrument_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TradeInstrument::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TradeInstrument*>(&to_msg);
  auto& from = static_cast<const TradeInstrument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.TradeInstrument)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TradeInstrument::CopyFrom(const TradeInstrument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.TradeInstrument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TradeInstrument::InternalSwap(TradeInstrument* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
}

::google::protobuf::Metadata TradeInstrument::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeTradesResponse::_Internal {
 public:
};

SubscribeTradesResponse::SubscribeTradesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeTradesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::SubscribeTradesResponse& from_msg)
      : trade_subscriptions_{visibility, arena, from.trade_subscriptions_},
        tracking_id_(arena, from.tracking_id_),
        _cached_size_{0} {}

SubscribeTradesResponse::SubscribeTradesResponse(
    ::google::protobuf::Arena* arena,
    const SubscribeTradesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeTradesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.trade_source_ = from._impl_.trade_source_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeTradesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trade_subscriptions_{visibility, arena},
        tracking_id_(arena),
        _cached_size_{0} {}

inline void SubscribeTradesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.trade_source_ = {};
}
SubscribeTradesResponse::~SubscribeTradesResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse)
  SharedDtor(*this);
}
inline void SubscribeTradesResponse::SharedDtor(MessageLite& self) {
  SubscribeTradesResponse& this_ = static_cast<SubscribeTradesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tracking_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubscribeTradesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeTradesResponse(arena);
}
constexpr auto SubscribeTradesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeTradesResponse, _impl_.trade_subscriptions_) +
          decltype(SubscribeTradesResponse::_impl_.trade_subscriptions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubscribeTradesResponse), alignof(SubscribeTradesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeTradesResponse::PlacementNew_,
                                 sizeof(SubscribeTradesResponse),
                                 alignof(SubscribeTradesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeTradesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeTradesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeTradesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeTradesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeTradesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeTradesResponse>(), &SubscribeTradesResponse::ByteSizeLong,
            &SubscribeTradesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeTradesResponse, _impl_._cached_size_),
        false,
    },
    &SubscribeTradesResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeTradesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 81, 2> SubscribeTradesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeTradesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string tracking_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeTradesResponse, _impl_.tracking_id_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.TradeSubscription trade_subscriptions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeTradesResponse, _impl_.trade_subscriptions_)}},
    // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeTradesResponse, _impl_.trade_source_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeTradesResponse, _impl_.trade_source_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tracking_id = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeTradesResponse, _impl_.tracking_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.public.invest.api.contract.v1.TradeSubscription trade_subscriptions = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeTradesResponse, _impl_.trade_subscriptions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeTradesResponse, _impl_.trade_source_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::TradeSubscription>()},
  }}, {{
    "\75\13\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse"
    "tracking_id"
  }},
};

PROTOBUF_NOINLINE void SubscribeTradesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trade_subscriptions_.Clear();
  _impl_.tracking_id_.ClearToEmpty();
  _impl_.trade_source_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeTradesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeTradesResponse& this_ = static_cast<const SubscribeTradesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeTradesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeTradesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string tracking_id = 1;
          if (!this_._internal_tracking_id().empty()) {
            const std::string& _s = this_._internal_tracking_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse.tracking_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.TradeSubscription trade_subscriptions = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_trade_subscriptions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_trade_subscriptions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 3;
          if (this_._internal_trade_source() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_trade_source(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeTradesResponse::ByteSizeLong(const MessageLite& base) {
          const SubscribeTradesResponse& this_ = static_cast<const SubscribeTradesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeTradesResponse::ByteSizeLong() const {
          const SubscribeTradesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.TradeSubscription trade_subscriptions = 2;
            {
              total_size += 1UL * this_._internal_trade_subscriptions_size();
              for (const auto& msg : this_._internal_trade_subscriptions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string tracking_id = 1;
            if (!this_._internal_tracking_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tracking_id());
            }
            // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 3;
            if (this_._internal_trade_source() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_trade_source());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeTradesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeTradesResponse*>(&to_msg);
  auto& from = static_cast<const SubscribeTradesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trade_subscriptions()->MergeFrom(
      from._internal_trade_subscriptions());
  if (!from._internal_tracking_id().empty()) {
    _this->_internal_set_tracking_id(from._internal_tracking_id());
  }
  if (from._internal_trade_source() != 0) {
    _this->_impl_.trade_source_ = from._impl_.trade_source_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeTradesResponse::CopyFrom(const SubscribeTradesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.SubscribeTradesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeTradesResponse::InternalSwap(SubscribeTradesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trade_subscriptions_.InternalSwap(&other->_impl_.trade_subscriptions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tracking_id_, &other->_impl_.tracking_id_, arena);
  swap(_impl_.trade_source_, other->_impl_.trade_source_);
}

::google::protobuf::Metadata SubscribeTradesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TradeSubscription::_Internal {
 public:
};

TradeSubscription::TradeSubscription(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.TradeSubscription)
}
inline PROTOBUF_NDEBUG_INLINE TradeSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::TradeSubscription& from_msg)
      : figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_),
        stream_id_(arena, from.stream_id_),
        subscription_id_(arena, from.subscription_id_),
        _cached_size_{0} {}

TradeSubscription::TradeSubscription(
    ::google::protobuf::Arena* arena,
    const TradeSubscription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TradeSubscription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.subscription_status_ = from._impl_.subscription_status_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.TradeSubscription)
}
inline PROTOBUF_NDEBUG_INLINE TradeSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        instrument_uid_(arena),
        stream_id_(arena),
        subscription_id_(arena),
        _cached_size_{0} {}

inline void TradeSubscription::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscription_status_ = {};
}
TradeSubscription::~TradeSubscription() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.TradeSubscription)
  SharedDtor(*this);
}
inline void TradeSubscription::SharedDtor(MessageLite& self) {
  TradeSubscription& this_ = static_cast<TradeSubscription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.stream_id_.Destroy();
  this_._impl_.subscription_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TradeSubscription::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TradeSubscription(arena);
}
constexpr auto TradeSubscription::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TradeSubscription),
                                            alignof(TradeSubscription));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TradeSubscription::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TradeSubscription_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TradeSubscription::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TradeSubscription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TradeSubscription::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TradeSubscription>(), &TradeSubscription::ByteSizeLong,
            &TradeSubscription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TradeSubscription, _impl_._cached_size_),
        false,
    },
    &TradeSubscription::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TradeSubscription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 106, 2> TradeSubscription::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::TradeSubscription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TradeSubscription, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TradeSubscription, _impl_.subscription_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TradeSubscription, _impl_.subscription_status_)}},
    // string instrument_uid = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TradeSubscription, _impl_.instrument_uid_)}},
    // string stream_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TradeSubscription, _impl_.stream_id_)}},
    // string subscription_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TradeSubscription, _impl_.subscription_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(TradeSubscription, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
    {PROTOBUF_FIELD_OFFSET(TradeSubscription, _impl_.subscription_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string instrument_uid = 3;
    {PROTOBUF_FIELD_OFFSET(TradeSubscription, _impl_.instrument_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string stream_id = 4;
    {PROTOBUF_FIELD_OFFSET(TradeSubscription, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscription_id = 5;
    {PROTOBUF_FIELD_OFFSET(TradeSubscription, _impl_.subscription_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\4\0\16\11\17\0\0"
    "tinkoff.public.invest.api.contract.v1.TradeSubscription"
    "figi"
    "instrument_uid"
    "stream_id"
    "subscription_id"
  }},
};

PROTOBUF_NOINLINE void TradeSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.TradeSubscription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.stream_id_.ClearToEmpty();
  _impl_.subscription_id_.ClearToEmpty();
  _impl_.subscription_status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TradeSubscription::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TradeSubscription& this_ = static_cast<const TradeSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TradeSubscription::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TradeSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.TradeSubscription)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.TradeSubscription.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
          if (this_._internal_subscription_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_subscription_status(), target);
          }

          // string instrument_uid = 3;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.TradeSubscription.instrument_uid");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string stream_id = 4;
          if (!this_._internal_stream_id().empty()) {
            const std::string& _s = this_._internal_stream_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.TradeSubscription.stream_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string subscription_id = 5;
          if (!this_._internal_subscription_id().empty()) {
            const std::string& _s = this_._internal_subscription_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.TradeSubscription.subscription_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.TradeSubscription)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TradeSubscription::ByteSizeLong(const MessageLite& base) {
          const TradeSubscription& this_ = static_cast<const TradeSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TradeSubscription::ByteSizeLong() const {
          const TradeSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.TradeSubscription)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 3;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // string stream_id = 4;
            if (!this_._internal_stream_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stream_id());
            }
            // string subscription_id = 5;
            if (!this_._internal_subscription_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscription_id());
            }
            // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
            if (this_._internal_subscription_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TradeSubscription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TradeSubscription*>(&to_msg);
  auto& from = static_cast<const TradeSubscription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.TradeSubscription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_stream_id().empty()) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  if (!from._internal_subscription_id().empty()) {
    _this->_internal_set_subscription_id(from._internal_subscription_id());
  }
  if (from._internal_subscription_status() != 0) {
    _this->_impl_.subscription_status_ = from._impl_.subscription_status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TradeSubscription::CopyFrom(const TradeSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.TradeSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TradeSubscription::InternalSwap(TradeSubscription* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stream_id_, &other->_impl_.stream_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscription_id_, &other->_impl_.subscription_id_, arena);
  swap(_impl_.subscription_status_, other->_impl_.subscription_status_);
}

::google::protobuf::Metadata TradeSubscription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeInfoRequest::_Internal {
 public:
};

SubscribeInfoRequest::SubscribeInfoRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest& from_msg)
      : instruments_{visibility, arena, from.instruments_},
        _cached_size_{0} {}

SubscribeInfoRequest::SubscribeInfoRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeInfoRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.subscription_action_ = from._impl_.subscription_action_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : instruments_{visibility, arena},
        _cached_size_{0} {}

inline void SubscribeInfoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscription_action_ = {};
}
SubscribeInfoRequest::~SubscribeInfoRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest)
  SharedDtor(*this);
}
inline void SubscribeInfoRequest::SharedDtor(MessageLite& self) {
  SubscribeInfoRequest& this_ = static_cast<SubscribeInfoRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SubscribeInfoRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeInfoRequest(arena);
}
constexpr auto SubscribeInfoRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeInfoRequest, _impl_.instruments_) +
          decltype(SubscribeInfoRequest::_impl_.instruments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SubscribeInfoRequest), alignof(SubscribeInfoRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeInfoRequest::PlacementNew_,
                                 sizeof(SubscribeInfoRequest),
                                 alignof(SubscribeInfoRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeInfoRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeInfoRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeInfoRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeInfoRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeInfoRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeInfoRequest>(), &SubscribeInfoRequest::ByteSizeLong,
            &SubscribeInfoRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeInfoRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeInfoRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeInfoRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SubscribeInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeInfoRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.InfoInstrument instruments = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeInfoRequest, _impl_.instruments_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeInfoRequest, _impl_.subscription_action_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeInfoRequest, _impl_.subscription_action_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeInfoRequest, _impl_.subscription_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .tinkoff.public.invest.api.contract.v1.InfoInstrument instruments = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeInfoRequest, _impl_.instruments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::InfoInstrument>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SubscribeInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instruments_.Clear();
  _impl_.subscription_action_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeInfoRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeInfoRequest& this_ = static_cast<const SubscribeInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeInfoRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
          if (this_._internal_subscription_action() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_subscription_action(), target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.InfoInstrument instruments = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_instruments_size());
               i < n; i++) {
            const auto& repfield = this_._internal_instruments().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeInfoRequest::ByteSizeLong(const MessageLite& base) {
          const SubscribeInfoRequest& this_ = static_cast<const SubscribeInfoRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeInfoRequest::ByteSizeLong() const {
          const SubscribeInfoRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.InfoInstrument instruments = 2;
            {
              total_size += 1UL * this_._internal_instruments_size();
              for (const auto& msg : this_._internal_instruments()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
            if (this_._internal_subscription_action() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_action());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeInfoRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeInfoRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_instruments()->MergeFrom(
      from._internal_instruments());
  if (from._internal_subscription_action() != 0) {
    _this->_impl_.subscription_action_ = from._impl_.subscription_action_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeInfoRequest::CopyFrom(const SubscribeInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.SubscribeInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeInfoRequest::InternalSwap(SubscribeInfoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.instruments_.InternalSwap(&other->_impl_.instruments_);
  swap(_impl_.subscription_action_, other->_impl_.subscription_action_);
}

::google::protobuf::Metadata SubscribeInfoRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InfoInstrument::_Internal {
 public:
};

InfoInstrument::InfoInstrument(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.InfoInstrument)
}
inline PROTOBUF_NDEBUG_INLINE InfoInstrument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::InfoInstrument& from_msg)
      : figi_(arena, from.figi_),
        instrument_id_(arena, from.instrument_id_),
        _cached_size_{0} {}

InfoInstrument::InfoInstrument(
    ::google::protobuf::Arena* arena,
    const InfoInstrument& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InfoInstrument* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.InfoInstrument)
}
inline PROTOBUF_NDEBUG_INLINE InfoInstrument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        instrument_id_(arena),
        _cached_size_{0} {}

inline void InfoInstrument::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InfoInstrument::~InfoInstrument() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.InfoInstrument)
  SharedDtor(*this);
}
inline void InfoInstrument::SharedDtor(MessageLite& self) {
  InfoInstrument& this_ = static_cast<InfoInstrument&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InfoInstrument::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InfoInstrument(arena);
}
constexpr auto InfoInstrument::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InfoInstrument),
                                            alignof(InfoInstrument));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InfoInstrument::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InfoInstrument_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InfoInstrument::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InfoInstrument>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InfoInstrument::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InfoInstrument>(), &InfoInstrument::ByteSizeLong,
            &InfoInstrument::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InfoInstrument, _impl_._cached_size_),
        false,
    },
    &InfoInstrument::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InfoInstrument::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 78, 2> InfoInstrument::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::InfoInstrument>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string instrument_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InfoInstrument, _impl_.instrument_id_)}},
    // string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InfoInstrument, _impl_.figi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(InfoInstrument, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_id = 2;
    {PROTOBUF_FIELD_OFFSET(InfoInstrument, _impl_.instrument_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\4\15\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.InfoInstrument"
    "figi"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void InfoInstrument::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.InfoInstrument)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InfoInstrument::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InfoInstrument& this_ = static_cast<const InfoInstrument&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InfoInstrument::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InfoInstrument& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.InfoInstrument)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1 [deprecated = true];
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.InfoInstrument.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string instrument_id = 2;
          if (!this_._internal_instrument_id().empty()) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.InfoInstrument.instrument_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.InfoInstrument)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InfoInstrument::ByteSizeLong(const MessageLite& base) {
          const InfoInstrument& this_ = static_cast<const InfoInstrument&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InfoInstrument::ByteSizeLong() const {
          const InfoInstrument& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.InfoInstrument)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1 [deprecated = true];
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_id = 2;
            if (!this_._internal_instrument_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InfoInstrument::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InfoInstrument*>(&to_msg);
  auto& from = static_cast<const InfoInstrument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.InfoInstrument)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InfoInstrument::CopyFrom(const InfoInstrument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.InfoInstrument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InfoInstrument::InternalSwap(InfoInstrument* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
}

::google::protobuf::Metadata InfoInstrument::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeInfoResponse::_Internal {
 public:
};

SubscribeInfoResponse::SubscribeInfoResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::SubscribeInfoResponse& from_msg)
      : info_subscriptions_{visibility, arena, from.info_subscriptions_},
        tracking_id_(arena, from.tracking_id_),
        _cached_size_{0} {}

SubscribeInfoResponse::SubscribeInfoResponse(
    ::google::protobuf::Arena* arena,
    const SubscribeInfoResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : info_subscriptions_{visibility, arena},
        tracking_id_(arena),
        _cached_size_{0} {}

inline void SubscribeInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubscribeInfoResponse::~SubscribeInfoResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse)
  SharedDtor(*this);
}
inline void SubscribeInfoResponse::SharedDtor(MessageLite& self) {
  SubscribeInfoResponse& this_ = static_cast<SubscribeInfoResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tracking_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubscribeInfoResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeInfoResponse(arena);
}
constexpr auto SubscribeInfoResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeInfoResponse, _impl_.info_subscriptions_) +
          decltype(SubscribeInfoResponse::_impl_.info_subscriptions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubscribeInfoResponse), alignof(SubscribeInfoResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeInfoResponse::PlacementNew_,
                                 sizeof(SubscribeInfoResponse),
                                 alignof(SubscribeInfoResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeInfoResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeInfoResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeInfoResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeInfoResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeInfoResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeInfoResponse>(), &SubscribeInfoResponse::ByteSizeLong,
            &SubscribeInfoResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeInfoResponse, _impl_._cached_size_),
        false,
    },
    &SubscribeInfoResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeInfoResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 79, 2> SubscribeInfoResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.InfoSubscription info_subscriptions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeInfoResponse, _impl_.info_subscriptions_)}},
    // string tracking_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeInfoResponse, _impl_.tracking_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tracking_id = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeInfoResponse, _impl_.tracking_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.public.invest.api.contract.v1.InfoSubscription info_subscriptions = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeInfoResponse, _impl_.info_subscriptions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::InfoSubscription>()},
  }}, {{
    "\73\13\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse"
    "tracking_id"
  }},
};

PROTOBUF_NOINLINE void SubscribeInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.info_subscriptions_.Clear();
  _impl_.tracking_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeInfoResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeInfoResponse& this_ = static_cast<const SubscribeInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeInfoResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string tracking_id = 1;
          if (!this_._internal_tracking_id().empty()) {
            const std::string& _s = this_._internal_tracking_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse.tracking_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.InfoSubscription info_subscriptions = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_info_subscriptions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_info_subscriptions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeInfoResponse::ByteSizeLong(const MessageLite& base) {
          const SubscribeInfoResponse& this_ = static_cast<const SubscribeInfoResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeInfoResponse::ByteSizeLong() const {
          const SubscribeInfoResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.InfoSubscription info_subscriptions = 2;
            {
              total_size += 1UL * this_._internal_info_subscriptions_size();
              for (const auto& msg : this_._internal_info_subscriptions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string tracking_id = 1;
            if (!this_._internal_tracking_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tracking_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeInfoResponse*>(&to_msg);
  auto& from = static_cast<const SubscribeInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_info_subscriptions()->MergeFrom(
      from._internal_info_subscriptions());
  if (!from._internal_tracking_id().empty()) {
    _this->_internal_set_tracking_id(from._internal_tracking_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeInfoResponse::CopyFrom(const SubscribeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.SubscribeInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeInfoResponse::InternalSwap(SubscribeInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.info_subscriptions_.InternalSwap(&other->_impl_.info_subscriptions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tracking_id_, &other->_impl_.tracking_id_, arena);
}

::google::protobuf::Metadata SubscribeInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InfoSubscription::_Internal {
 public:
};

InfoSubscription::InfoSubscription(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.InfoSubscription)
}
inline PROTOBUF_NDEBUG_INLINE InfoSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::InfoSubscription& from_msg)
      : figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_),
        stream_id_(arena, from.stream_id_),
        subscription_id_(arena, from.subscription_id_),
        _cached_size_{0} {}

InfoSubscription::InfoSubscription(
    ::google::protobuf::Arena* arena,
    const InfoSubscription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InfoSubscription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.subscription_status_ = from._impl_.subscription_status_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.InfoSubscription)
}
inline PROTOBUF_NDEBUG_INLINE InfoSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        instrument_uid_(arena),
        stream_id_(arena),
        subscription_id_(arena),
        _cached_size_{0} {}

inline void InfoSubscription::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscription_status_ = {};
}
InfoSubscription::~InfoSubscription() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.InfoSubscription)
  SharedDtor(*this);
}
inline void InfoSubscription::SharedDtor(MessageLite& self) {
  InfoSubscription& this_ = static_cast<InfoSubscription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.stream_id_.Destroy();
  this_._impl_.subscription_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InfoSubscription::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InfoSubscription(arena);
}
constexpr auto InfoSubscription::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InfoSubscription),
                                            alignof(InfoSubscription));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InfoSubscription::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InfoSubscription_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InfoSubscription::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InfoSubscription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InfoSubscription::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InfoSubscription>(), &InfoSubscription::ByteSizeLong,
            &InfoSubscription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InfoSubscription, _impl_._cached_size_),
        false,
    },
    &InfoSubscription::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InfoSubscription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 105, 2> InfoSubscription::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::InfoSubscription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InfoSubscription, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InfoSubscription, _impl_.subscription_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(InfoSubscription, _impl_.subscription_status_)}},
    // string instrument_uid = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(InfoSubscription, _impl_.instrument_uid_)}},
    // string stream_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(InfoSubscription, _impl_.stream_id_)}},
    // string subscription_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(InfoSubscription, _impl_.subscription_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(InfoSubscription, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
    {PROTOBUF_FIELD_OFFSET(InfoSubscription, _impl_.subscription_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string instrument_uid = 3;
    {PROTOBUF_FIELD_OFFSET(InfoSubscription, _impl_.instrument_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string stream_id = 4;
    {PROTOBUF_FIELD_OFFSET(InfoSubscription, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscription_id = 5;
    {PROTOBUF_FIELD_OFFSET(InfoSubscription, _impl_.subscription_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\4\0\16\11\17\0\0"
    "tinkoff.public.invest.api.contract.v1.InfoSubscription"
    "figi"
    "instrument_uid"
    "stream_id"
    "subscription_id"
  }},
};

PROTOBUF_NOINLINE void InfoSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.InfoSubscription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.stream_id_.ClearToEmpty();
  _impl_.subscription_id_.ClearToEmpty();
  _impl_.subscription_status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InfoSubscription::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InfoSubscription& this_ = static_cast<const InfoSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InfoSubscription::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InfoSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.InfoSubscription)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.InfoSubscription.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
          if (this_._internal_subscription_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_subscription_status(), target);
          }

          // string instrument_uid = 3;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.InfoSubscription.instrument_uid");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string stream_id = 4;
          if (!this_._internal_stream_id().empty()) {
            const std::string& _s = this_._internal_stream_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.InfoSubscription.stream_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string subscription_id = 5;
          if (!this_._internal_subscription_id().empty()) {
            const std::string& _s = this_._internal_subscription_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.InfoSubscription.subscription_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.InfoSubscription)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InfoSubscription::ByteSizeLong(const MessageLite& base) {
          const InfoSubscription& this_ = static_cast<const InfoSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InfoSubscription::ByteSizeLong() const {
          const InfoSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.InfoSubscription)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 3;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // string stream_id = 4;
            if (!this_._internal_stream_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stream_id());
            }
            // string subscription_id = 5;
            if (!this_._internal_subscription_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscription_id());
            }
            // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
            if (this_._internal_subscription_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InfoSubscription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InfoSubscription*>(&to_msg);
  auto& from = static_cast<const InfoSubscription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.InfoSubscription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_stream_id().empty()) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  if (!from._internal_subscription_id().empty()) {
    _this->_internal_set_subscription_id(from._internal_subscription_id());
  }
  if (from._internal_subscription_status() != 0) {
    _this->_impl_.subscription_status_ = from._impl_.subscription_status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InfoSubscription::CopyFrom(const InfoSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.InfoSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InfoSubscription::InternalSwap(InfoSubscription* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stream_id_, &other->_impl_.stream_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscription_id_, &other->_impl_.subscription_id_, arena);
  swap(_impl_.subscription_status_, other->_impl_.subscription_status_);
}

::google::protobuf::Metadata InfoSubscription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeLastPriceRequest::_Internal {
 public:
};

SubscribeLastPriceRequest::SubscribeLastPriceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeLastPriceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest& from_msg)
      : instruments_{visibility, arena, from.instruments_},
        _cached_size_{0} {}

SubscribeLastPriceRequest::SubscribeLastPriceRequest(
    ::google::protobuf::Arena* arena,
    const SubscribeLastPriceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeLastPriceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.subscription_action_ = from._impl_.subscription_action_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeLastPriceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : instruments_{visibility, arena},
        _cached_size_{0} {}

inline void SubscribeLastPriceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscription_action_ = {};
}
SubscribeLastPriceRequest::~SubscribeLastPriceRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest)
  SharedDtor(*this);
}
inline void SubscribeLastPriceRequest::SharedDtor(MessageLite& self) {
  SubscribeLastPriceRequest& this_ = static_cast<SubscribeLastPriceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SubscribeLastPriceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeLastPriceRequest(arena);
}
constexpr auto SubscribeLastPriceRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeLastPriceRequest, _impl_.instruments_) +
          decltype(SubscribeLastPriceRequest::_impl_.instruments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SubscribeLastPriceRequest), alignof(SubscribeLastPriceRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeLastPriceRequest::PlacementNew_,
                                 sizeof(SubscribeLastPriceRequest),
                                 alignof(SubscribeLastPriceRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeLastPriceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeLastPriceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeLastPriceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeLastPriceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeLastPriceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeLastPriceRequest>(), &SubscribeLastPriceRequest::ByteSizeLong,
            &SubscribeLastPriceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeLastPriceRequest, _impl_._cached_size_),
        false,
    },
    &SubscribeLastPriceRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeLastPriceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SubscribeLastPriceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.LastPriceInstrument instruments = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeLastPriceRequest, _impl_.instruments_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeLastPriceRequest, _impl_.subscription_action_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeLastPriceRequest, _impl_.subscription_action_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeLastPriceRequest, _impl_.subscription_action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .tinkoff.public.invest.api.contract.v1.LastPriceInstrument instruments = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeLastPriceRequest, _impl_.instruments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::LastPriceInstrument>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SubscribeLastPriceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instruments_.Clear();
  _impl_.subscription_action_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeLastPriceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeLastPriceRequest& this_ = static_cast<const SubscribeLastPriceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeLastPriceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeLastPriceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
          if (this_._internal_subscription_action() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_subscription_action(), target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.LastPriceInstrument instruments = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_instruments_size());
               i < n; i++) {
            const auto& repfield = this_._internal_instruments().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeLastPriceRequest::ByteSizeLong(const MessageLite& base) {
          const SubscribeLastPriceRequest& this_ = static_cast<const SubscribeLastPriceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeLastPriceRequest::ByteSizeLong() const {
          const SubscribeLastPriceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.LastPriceInstrument instruments = 2;
            {
              total_size += 1UL * this_._internal_instruments_size();
              for (const auto& msg : this_._internal_instruments()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.SubscriptionAction subscription_action = 1;
            if (this_._internal_subscription_action() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_action());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeLastPriceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeLastPriceRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeLastPriceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_instruments()->MergeFrom(
      from._internal_instruments());
  if (from._internal_subscription_action() != 0) {
    _this->_impl_.subscription_action_ = from._impl_.subscription_action_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeLastPriceRequest::CopyFrom(const SubscribeLastPriceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeLastPriceRequest::InternalSwap(SubscribeLastPriceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.instruments_.InternalSwap(&other->_impl_.instruments_);
  swap(_impl_.subscription_action_, other->_impl_.subscription_action_);
}

::google::protobuf::Metadata SubscribeLastPriceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LastPriceInstrument::_Internal {
 public:
};

LastPriceInstrument::LastPriceInstrument(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.LastPriceInstrument)
}
inline PROTOBUF_NDEBUG_INLINE LastPriceInstrument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::LastPriceInstrument& from_msg)
      : figi_(arena, from.figi_),
        instrument_id_(arena, from.instrument_id_),
        _cached_size_{0} {}

LastPriceInstrument::LastPriceInstrument(
    ::google::protobuf::Arena* arena,
    const LastPriceInstrument& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LastPriceInstrument* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.LastPriceInstrument)
}
inline PROTOBUF_NDEBUG_INLINE LastPriceInstrument::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        instrument_id_(arena),
        _cached_size_{0} {}

inline void LastPriceInstrument::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LastPriceInstrument::~LastPriceInstrument() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.LastPriceInstrument)
  SharedDtor(*this);
}
inline void LastPriceInstrument::SharedDtor(MessageLite& self) {
  LastPriceInstrument& this_ = static_cast<LastPriceInstrument&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LastPriceInstrument::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LastPriceInstrument(arena);
}
constexpr auto LastPriceInstrument::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LastPriceInstrument),
                                            alignof(LastPriceInstrument));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LastPriceInstrument::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LastPriceInstrument_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LastPriceInstrument::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LastPriceInstrument>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LastPriceInstrument::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LastPriceInstrument>(), &LastPriceInstrument::ByteSizeLong,
            &LastPriceInstrument::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LastPriceInstrument, _impl_._cached_size_),
        false,
    },
    &LastPriceInstrument::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LastPriceInstrument::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 83, 2> LastPriceInstrument::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::LastPriceInstrument>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string instrument_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LastPriceInstrument, _impl_.instrument_id_)}},
    // string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LastPriceInstrument, _impl_.figi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(LastPriceInstrument, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_id = 2;
    {PROTOBUF_FIELD_OFFSET(LastPriceInstrument, _impl_.instrument_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\71\4\15\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.LastPriceInstrument"
    "figi"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void LastPriceInstrument::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.LastPriceInstrument)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LastPriceInstrument::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LastPriceInstrument& this_ = static_cast<const LastPriceInstrument&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LastPriceInstrument::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LastPriceInstrument& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.LastPriceInstrument)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1 [deprecated = true];
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.LastPriceInstrument.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string instrument_id = 2;
          if (!this_._internal_instrument_id().empty()) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.LastPriceInstrument.instrument_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.LastPriceInstrument)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LastPriceInstrument::ByteSizeLong(const MessageLite& base) {
          const LastPriceInstrument& this_ = static_cast<const LastPriceInstrument&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LastPriceInstrument::ByteSizeLong() const {
          const LastPriceInstrument& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.LastPriceInstrument)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1 [deprecated = true];
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_id = 2;
            if (!this_._internal_instrument_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LastPriceInstrument::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LastPriceInstrument*>(&to_msg);
  auto& from = static_cast<const LastPriceInstrument&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.LastPriceInstrument)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LastPriceInstrument::CopyFrom(const LastPriceInstrument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.LastPriceInstrument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LastPriceInstrument::InternalSwap(LastPriceInstrument* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
}

::google::protobuf::Metadata LastPriceInstrument::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeLastPriceResponse::_Internal {
 public:
};

SubscribeLastPriceResponse::SubscribeLastPriceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeLastPriceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceResponse& from_msg)
      : last_price_subscriptions_{visibility, arena, from.last_price_subscriptions_},
        tracking_id_(arena, from.tracking_id_),
        _cached_size_{0} {}

SubscribeLastPriceResponse::SubscribeLastPriceResponse(
    ::google::protobuf::Arena* arena,
    const SubscribeLastPriceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeLastPriceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubscribeLastPriceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : last_price_subscriptions_{visibility, arena},
        tracking_id_(arena),
        _cached_size_{0} {}

inline void SubscribeLastPriceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubscribeLastPriceResponse::~SubscribeLastPriceResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse)
  SharedDtor(*this);
}
inline void SubscribeLastPriceResponse::SharedDtor(MessageLite& self) {
  SubscribeLastPriceResponse& this_ = static_cast<SubscribeLastPriceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tracking_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubscribeLastPriceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubscribeLastPriceResponse(arena);
}
constexpr auto SubscribeLastPriceResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeLastPriceResponse, _impl_.last_price_subscriptions_) +
          decltype(SubscribeLastPriceResponse::_impl_.last_price_subscriptions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubscribeLastPriceResponse), alignof(SubscribeLastPriceResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeLastPriceResponse::PlacementNew_,
                                 sizeof(SubscribeLastPriceResponse),
                                 alignof(SubscribeLastPriceResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubscribeLastPriceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubscribeLastPriceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubscribeLastPriceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubscribeLastPriceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubscribeLastPriceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubscribeLastPriceResponse>(), &SubscribeLastPriceResponse::ByteSizeLong,
            &SubscribeLastPriceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubscribeLastPriceResponse, _impl_._cached_size_),
        false,
    },
    &SubscribeLastPriceResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubscribeLastPriceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 84, 2> SubscribeLastPriceResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::SubscribeLastPriceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.LastPriceSubscription last_price_subscriptions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeLastPriceResponse, _impl_.last_price_subscriptions_)}},
    // string tracking_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeLastPriceResponse, _impl_.tracking_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tracking_id = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeLastPriceResponse, _impl_.tracking_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tinkoff.public.invest.api.contract.v1.LastPriceSubscription last_price_subscriptions = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeLastPriceResponse, _impl_.last_price_subscriptions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::LastPriceSubscription>()},
  }}, {{
    "\100\13\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse"
    "tracking_id"
  }},
};

PROTOBUF_NOINLINE void SubscribeLastPriceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.last_price_subscriptions_.Clear();
  _impl_.tracking_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubscribeLastPriceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubscribeLastPriceResponse& this_ = static_cast<const SubscribeLastPriceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubscribeLastPriceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubscribeLastPriceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string tracking_id = 1;
          if (!this_._internal_tracking_id().empty()) {
            const std::string& _s = this_._internal_tracking_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse.tracking_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.LastPriceSubscription last_price_subscriptions = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_last_price_subscriptions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_last_price_subscriptions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubscribeLastPriceResponse::ByteSizeLong(const MessageLite& base) {
          const SubscribeLastPriceResponse& this_ = static_cast<const SubscribeLastPriceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubscribeLastPriceResponse::ByteSizeLong() const {
          const SubscribeLastPriceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.LastPriceSubscription last_price_subscriptions = 2;
            {
              total_size += 1UL * this_._internal_last_price_subscriptions_size();
              for (const auto& msg : this_._internal_last_price_subscriptions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string tracking_id = 1;
            if (!this_._internal_tracking_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tracking_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubscribeLastPriceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeLastPriceResponse*>(&to_msg);
  auto& from = static_cast<const SubscribeLastPriceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_last_price_subscriptions()->MergeFrom(
      from._internal_last_price_subscriptions());
  if (!from._internal_tracking_id().empty()) {
    _this->_internal_set_tracking_id(from._internal_tracking_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeLastPriceResponse::CopyFrom(const SubscribeLastPriceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.SubscribeLastPriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeLastPriceResponse::InternalSwap(SubscribeLastPriceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.last_price_subscriptions_.InternalSwap(&other->_impl_.last_price_subscriptions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tracking_id_, &other->_impl_.tracking_id_, arena);
}

::google::protobuf::Metadata SubscribeLastPriceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LastPriceSubscription::_Internal {
 public:
};

LastPriceSubscription::LastPriceSubscription(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.LastPriceSubscription)
}
inline PROTOBUF_NDEBUG_INLINE LastPriceSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::LastPriceSubscription& from_msg)
      : figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_),
        stream_id_(arena, from.stream_id_),
        subscription_id_(arena, from.subscription_id_),
        _cached_size_{0} {}

LastPriceSubscription::LastPriceSubscription(
    ::google::protobuf::Arena* arena,
    const LastPriceSubscription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LastPriceSubscription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.subscription_status_ = from._impl_.subscription_status_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.LastPriceSubscription)
}
inline PROTOBUF_NDEBUG_INLINE LastPriceSubscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        instrument_uid_(arena),
        stream_id_(arena),
        subscription_id_(arena),
        _cached_size_{0} {}

inline void LastPriceSubscription::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscription_status_ = {};
}
LastPriceSubscription::~LastPriceSubscription() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.LastPriceSubscription)
  SharedDtor(*this);
}
inline void LastPriceSubscription::SharedDtor(MessageLite& self) {
  LastPriceSubscription& this_ = static_cast<LastPriceSubscription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.stream_id_.Destroy();
  this_._impl_.subscription_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LastPriceSubscription::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LastPriceSubscription(arena);
}
constexpr auto LastPriceSubscription::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LastPriceSubscription),
                                            alignof(LastPriceSubscription));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LastPriceSubscription::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LastPriceSubscription_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LastPriceSubscription::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LastPriceSubscription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LastPriceSubscription::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LastPriceSubscription>(), &LastPriceSubscription::ByteSizeLong,
            &LastPriceSubscription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LastPriceSubscription, _impl_._cached_size_),
        false,
    },
    &LastPriceSubscription::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LastPriceSubscription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 110, 2> LastPriceSubscription::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::LastPriceSubscription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LastPriceSubscription, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LastPriceSubscription, _impl_.subscription_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LastPriceSubscription, _impl_.subscription_status_)}},
    // string instrument_uid = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(LastPriceSubscription, _impl_.instrument_uid_)}},
    // string stream_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(LastPriceSubscription, _impl_.stream_id_)}},
    // string subscription_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(LastPriceSubscription, _impl_.subscription_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(LastPriceSubscription, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
    {PROTOBUF_FIELD_OFFSET(LastPriceSubscription, _impl_.subscription_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string instrument_uid = 3;
    {PROTOBUF_FIELD_OFFSET(LastPriceSubscription, _impl_.instrument_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string stream_id = 4;
    {PROTOBUF_FIELD_OFFSET(LastPriceSubscription, _impl_.stream_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscription_id = 5;
    {PROTOBUF_FIELD_OFFSET(LastPriceSubscription, _impl_.subscription_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\73\4\0\16\11\17\0\0"
    "tinkoff.public.invest.api.contract.v1.LastPriceSubscription"
    "figi"
    "instrument_uid"
    "stream_id"
    "subscription_id"
  }},
};

PROTOBUF_NOINLINE void LastPriceSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.LastPriceSubscription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  _impl_.stream_id_.ClearToEmpty();
  _impl_.subscription_id_.ClearToEmpty();
  _impl_.subscription_status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LastPriceSubscription::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LastPriceSubscription& this_ = static_cast<const LastPriceSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LastPriceSubscription::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LastPriceSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.LastPriceSubscription)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.LastPriceSubscription.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
          if (this_._internal_subscription_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_subscription_status(), target);
          }

          // string instrument_uid = 3;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.LastPriceSubscription.instrument_uid");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string stream_id = 4;
          if (!this_._internal_stream_id().empty()) {
            const std::string& _s = this_._internal_stream_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.LastPriceSubscription.stream_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string subscription_id = 5;
          if (!this_._internal_subscription_id().empty()) {
            const std::string& _s = this_._internal_subscription_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.LastPriceSubscription.subscription_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.LastPriceSubscription)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LastPriceSubscription::ByteSizeLong(const MessageLite& base) {
          const LastPriceSubscription& this_ = static_cast<const LastPriceSubscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LastPriceSubscription::ByteSizeLong() const {
          const LastPriceSubscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.LastPriceSubscription)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 3;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // string stream_id = 4;
            if (!this_._internal_stream_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stream_id());
            }
            // string subscription_id = 5;
            if (!this_._internal_subscription_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_subscription_id());
            }
            // .tinkoff.public.invest.api.contract.v1.SubscriptionStatus subscription_status = 2;
            if (this_._internal_subscription_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_subscription_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LastPriceSubscription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LastPriceSubscription*>(&to_msg);
  auto& from = static_cast<const LastPriceSubscription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.LastPriceSubscription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (!from._internal_stream_id().empty()) {
    _this->_internal_set_stream_id(from._internal_stream_id());
  }
  if (!from._internal_subscription_id().empty()) {
    _this->_internal_set_subscription_id(from._internal_subscription_id());
  }
  if (from._internal_subscription_status() != 0) {
    _this->_impl_.subscription_status_ = from._impl_.subscription_status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LastPriceSubscription::CopyFrom(const LastPriceSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.LastPriceSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LastPriceSubscription::InternalSwap(LastPriceSubscription* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stream_id_, &other->_impl_.stream_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscription_id_, &other->_impl_.subscription_id_, arena);
  swap(_impl_.subscription_status_, other->_impl_.subscription_status_);
}

::google::protobuf::Metadata LastPriceSubscription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Candle::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Candle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Candle, _impl_._has_bits_);
};

void Candle::clear_open() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.open_ != nullptr) _impl_.open_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Candle::clear_high() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.high_ != nullptr) _impl_.high_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Candle::clear_low() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.low_ != nullptr) _impl_.low_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Candle::clear_close() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.close_ != nullptr) _impl_.close_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Candle::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void Candle::clear_last_trade_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_trade_ts_ != nullptr) _impl_.last_trade_ts_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
Candle::Candle(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.Candle)
}
inline PROTOBUF_NDEBUG_INLINE Candle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::Candle& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_) {}

Candle::Candle(
    ::google::protobuf::Arena* arena,
    const Candle& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Candle* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.open_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.open_)
                        : nullptr;
  _impl_.high_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.high_)
                        : nullptr;
  _impl_.low_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.low_)
                        : nullptr;
  _impl_.close_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.close_)
                        : nullptr;
  _impl_.time_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  _impl_.last_trade_ts_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.last_trade_ts_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, volume_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, volume_),
           offsetof(Impl_, candle_source_type_) -
               offsetof(Impl_, volume_) +
               sizeof(Impl_::candle_source_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.Candle)
}
inline PROTOBUF_NDEBUG_INLINE Candle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_uid_(arena) {}

inline void Candle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, open_),
           0,
           offsetof(Impl_, candle_source_type_) -
               offsetof(Impl_, open_) +
               sizeof(Impl_::candle_source_type_));
}
Candle::~Candle() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.Candle)
  SharedDtor(*this);
}
inline void Candle::SharedDtor(MessageLite& self) {
  Candle& this_ = static_cast<Candle&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.open_;
  delete this_._impl_.high_;
  delete this_._impl_.low_;
  delete this_._impl_.close_;
  delete this_._impl_.time_;
  delete this_._impl_.last_trade_ts_;
  this_._impl_.~Impl_();
}

inline void* Candle::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Candle(arena);
}
constexpr auto Candle::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Candle),
                                            alignof(Candle));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Candle::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Candle_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Candle::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Candle>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Candle::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Candle>(), &Candle::ByteSizeLong,
            &Candle::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Candle, _impl_._cached_size_),
        false,
    },
    &Candle::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Candle::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 6, 79, 2> Candle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Candle, _impl_._has_bits_),
    0, // no _extensions_
    19, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294704128,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Candle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Candle, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Candle, _impl_.interval_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Candle, _impl_.interval_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation open = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Candle, _impl_.open_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation high = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Candle, _impl_.high_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation low = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(Candle, _impl_.low_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation close = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(Candle, _impl_.close_)}},
    // int64 volume = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Candle, _impl_.volume_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Candle, _impl_.volume_)}},
    // .google.protobuf.Timestamp time = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 4, 4, PROTOBUF_FIELD_OFFSET(Candle, _impl_.time_)}},
    // .google.protobuf.Timestamp last_trade_ts = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 5, 5, PROTOBUF_FIELD_OFFSET(Candle, _impl_.last_trade_ts_)}},
    // string instrument_uid = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Candle, _impl_.instrument_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(Candle, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
    {PROTOBUF_FIELD_OFFSET(Candle, _impl_.interval_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.Quotation open = 3;
    {PROTOBUF_FIELD_OFFSET(Candle, _impl_.open_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation high = 4;
    {PROTOBUF_FIELD_OFFSET(Candle, _impl_.high_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation low = 5;
    {PROTOBUF_FIELD_OFFSET(Candle, _impl_.low_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation close = 6;
    {PROTOBUF_FIELD_OFFSET(Candle, _impl_.close_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 volume = 7;
    {PROTOBUF_FIELD_OFFSET(Candle, _impl_.volume_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp time = 8;
    {PROTOBUF_FIELD_OFFSET(Candle, _impl_.time_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp last_trade_ts = 9;
    {PROTOBUF_FIELD_OFFSET(Candle, _impl_.last_trade_ts_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string instrument_uid = 10;
    {PROTOBUF_FIELD_OFFSET(Candle, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.CandleSource candle_source_type = 19;
    {PROTOBUF_FIELD_OFFSET(Candle, _impl_.candle_source_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\54\4\0\0\0\0\0\0\0\0\16\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.Candle"
    "figi"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void Candle::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.Candle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.open_ != nullptr);
      _impl_.open_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.high_ != nullptr);
      _impl_.high_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.low_ != nullptr);
      _impl_.low_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.close_ != nullptr);
      _impl_.close_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.last_trade_ts_ != nullptr);
      _impl_.last_trade_ts_->Clear();
    }
  }
  ::memset(&_impl_.volume_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.candle_source_type_) -
      reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.candle_source_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Candle::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Candle& this_ = static_cast<const Candle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Candle::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Candle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.Candle)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Candle.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
          if (this_._internal_interval() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_interval(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.Quotation open = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.open_, this_._impl_.open_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation high = 4;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.high_, this_._impl_.high_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation low = 5;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.low_, this_._impl_.low_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation close = 6;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.close_, this_._impl_.close_->GetCachedSize(), target,
                stream);
          }

          // int64 volume = 7;
          if (this_._internal_volume() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_volume(), target);
          }

          // .google.protobuf.Timestamp time = 8;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp last_trade_ts = 9;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.last_trade_ts_, this_._impl_.last_trade_ts_->GetCachedSize(), target,
                stream);
          }

          // string instrument_uid = 10;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Candle.instrument_uid");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.CandleSource candle_source_type = 19;
          if (this_._internal_candle_source_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                19, this_._internal_candle_source_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.Candle)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Candle::ByteSizeLong(const MessageLite& base) {
          const Candle& this_ = static_cast<const Candle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Candle::ByteSizeLong() const {
          const Candle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.Candle)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 10;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // .tinkoff.public.invest.api.contract.v1.Quotation open = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.open_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation high = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.high_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation low = 5;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.low_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation close = 6;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.close_);
            }
            // .google.protobuf.Timestamp time = 8;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
            // .google.protobuf.Timestamp last_trade_ts = 9;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_trade_ts_);
            }
          }
           {
            // int64 volume = 7;
            if (this_._internal_volume() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_volume());
            }
            // .tinkoff.public.invest.api.contract.v1.SubscriptionInterval interval = 2;
            if (this_._internal_interval() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_interval());
            }
            // .tinkoff.public.invest.api.contract.v1.CandleSource candle_source_type = 19;
            if (this_._internal_candle_source_type() != 0) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_candle_source_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Candle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Candle*>(&to_msg);
  auto& from = static_cast<const Candle&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.Candle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.open_ != nullptr);
      if (_this->_impl_.open_ == nullptr) {
        _this->_impl_.open_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.open_);
      } else {
        _this->_impl_.open_->MergeFrom(*from._impl_.open_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.high_ != nullptr);
      if (_this->_impl_.high_ == nullptr) {
        _this->_impl_.high_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.high_);
      } else {
        _this->_impl_.high_->MergeFrom(*from._impl_.high_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.low_ != nullptr);
      if (_this->_impl_.low_ == nullptr) {
        _this->_impl_.low_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.low_);
      } else {
        _this->_impl_.low_->MergeFrom(*from._impl_.low_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.close_ != nullptr);
      if (_this->_impl_.close_ == nullptr) {
        _this->_impl_.close_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.close_);
      } else {
        _this->_impl_.close_->MergeFrom(*from._impl_.close_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.last_trade_ts_ != nullptr);
      if (_this->_impl_.last_trade_ts_ == nullptr) {
        _this->_impl_.last_trade_ts_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.last_trade_ts_);
      } else {
        _this->_impl_.last_trade_ts_->MergeFrom(*from._impl_.last_trade_ts_);
      }
    }
  }
  if (from._internal_volume() != 0) {
    _this->_impl_.volume_ = from._impl_.volume_;
  }
  if (from._internal_interval() != 0) {
    _this->_impl_.interval_ = from._impl_.interval_;
  }
  if (from._internal_candle_source_type() != 0) {
    _this->_impl_.candle_source_type_ = from._impl_.candle_source_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Candle::CopyFrom(const Candle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.Candle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Candle::InternalSwap(Candle* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Candle, _impl_.candle_source_type_)
      + sizeof(Candle::_impl_.candle_source_type_)
      - PROTOBUF_FIELD_OFFSET(Candle, _impl_.open_)>(
          reinterpret_cast<char*>(&_impl_.open_),
          reinterpret_cast<char*>(&other->_impl_.open_));
}

::google::protobuf::Metadata Candle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderBook::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OrderBook>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderBook, _impl_._has_bits_);
};

void OrderBook::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OrderBook::clear_limit_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.limit_up_ != nullptr) _impl_.limit_up_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OrderBook::clear_limit_down() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.limit_down_ != nullptr) _impl_.limit_down_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
OrderBook::OrderBook(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.OrderBook)
}
inline PROTOBUF_NDEBUG_INLINE OrderBook::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::OrderBook& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        bids_{visibility, arena, from.bids_},
        asks_{visibility, arena, from.asks_},
        figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_) {}

OrderBook::OrderBook(
    ::google::protobuf::Arena* arena,
    const OrderBook& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderBook* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  _impl_.limit_up_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.limit_up_)
                        : nullptr;
  _impl_.limit_down_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.limit_down_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, depth_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, depth_),
           offsetof(Impl_, order_book_type_) -
               offsetof(Impl_, depth_) +
               sizeof(Impl_::order_book_type_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.OrderBook)
}
inline PROTOBUF_NDEBUG_INLINE OrderBook::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        bids_{visibility, arena},
        asks_{visibility, arena},
        figi_(arena),
        instrument_uid_(arena) {}

inline void OrderBook::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, order_book_type_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::order_book_type_));
}
OrderBook::~OrderBook() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.OrderBook)
  SharedDtor(*this);
}
inline void OrderBook::SharedDtor(MessageLite& self) {
  OrderBook& this_ = static_cast<OrderBook&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.time_;
  delete this_._impl_.limit_up_;
  delete this_._impl_.limit_down_;
  this_._impl_.~Impl_();
}

inline void* OrderBook::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderBook(arena);
}
constexpr auto OrderBook::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.bids_) +
          decltype(OrderBook::_impl_.bids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.asks_) +
          decltype(OrderBook::_impl_.asks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OrderBook), alignof(OrderBook), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderBook::PlacementNew_,
                                 sizeof(OrderBook),
                                 alignof(OrderBook));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderBook::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderBook_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderBook::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderBook>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderBook::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderBook>(), &OrderBook::ByteSizeLong,
            &OrderBook::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderBook, _impl_._cached_size_),
        false,
    },
    &OrderBook::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderBook::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 5, 82, 2> OrderBook::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderBook, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::OrderBook>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.figi_)}},
    // int32 depth = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderBook, _impl_.depth_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.depth_)}},
    // bool is_consistent = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OrderBook, _impl_.is_consistent_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.is_consistent_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.Order bids = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.bids_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.Order asks = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.asks_)}},
    // .google.protobuf.Timestamp time = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 2, PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.time_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation limit_up = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 3, PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.limit_up_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation limit_down = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 4, PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.limit_down_)}},
    // string instrument_uid = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.instrument_uid_)}},
    // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderBook, _impl_.order_book_type_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.order_book_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 depth = 2;
    {PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.depth_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool is_consistent = 3;
    {PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.is_consistent_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .tinkoff.public.invest.api.contract.v1.Order bids = 4;
    {PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.bids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.Order asks = 5;
    {PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.asks_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp time = 6;
    {PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.time_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation limit_up = 7;
    {PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.limit_up_), _Internal::kHasBitsOffset + 1, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation limit_down = 8;
    {PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.limit_down_), _Internal::kHasBitsOffset + 2, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string instrument_uid = 9;
    {PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 10;
    {PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.order_book_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Order>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Order>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
    "\57\4\0\0\0\0\0\0\0\16\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.OrderBook"
    "figi"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void OrderBook::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.OrderBook)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bids_.Clear();
  _impl_.asks_.Clear();
  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.limit_up_ != nullptr);
      _impl_.limit_up_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.limit_down_ != nullptr);
      _impl_.limit_down_->Clear();
    }
  }
  ::memset(&_impl_.depth_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.order_book_type_) -
      reinterpret_cast<char*>(&_impl_.depth_)) + sizeof(_impl_.order_book_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderBook::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderBook& this_ = static_cast<const OrderBook&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderBook::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderBook& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.OrderBook)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderBook.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 depth = 2;
          if (this_._internal_depth() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_depth(), target);
          }

          // bool is_consistent = 3;
          if (this_._internal_is_consistent() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_is_consistent(), target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.Order bids = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_bids_size());
               i < n; i++) {
            const auto& repfield = this_._internal_bids().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.Order asks = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_asks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_asks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp time = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation limit_up = 7;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.limit_up_, this_._impl_.limit_up_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation limit_down = 8;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.limit_down_, this_._impl_.limit_down_->GetCachedSize(), target,
                stream);
          }

          // string instrument_uid = 9;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.OrderBook.instrument_uid");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 10;
          if (this_._internal_order_book_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                10, this_._internal_order_book_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.OrderBook)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderBook::ByteSizeLong(const MessageLite& base) {
          const OrderBook& this_ = static_cast<const OrderBook&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderBook::ByteSizeLong() const {
          const OrderBook& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.OrderBook)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.Order bids = 4;
            {
              total_size += 1UL * this_._internal_bids_size();
              for (const auto& msg : this_._internal_bids()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.public.invest.api.contract.v1.Order asks = 5;
            {
              total_size += 1UL * this_._internal_asks_size();
              for (const auto& msg : this_._internal_asks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 9;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .google.protobuf.Timestamp time = 6;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation limit_up = 7;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.limit_up_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation limit_down = 8;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.limit_down_);
            }
          }
           {
            // int32 depth = 2;
            if (this_._internal_depth() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_depth());
            }
            // bool is_consistent = 3;
            if (this_._internal_is_consistent() != 0) {
              total_size += 2;
            }
            // .tinkoff.public.invest.api.contract.v1.OrderBookType order_book_type = 10;
            if (this_._internal_order_book_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_order_book_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderBook::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderBook*>(&to_msg);
  auto& from = static_cast<const OrderBook&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.OrderBook)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bids()->MergeFrom(
      from._internal_bids());
  _this->_internal_mutable_asks()->MergeFrom(
      from._internal_asks());
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.limit_up_ != nullptr);
      if (_this->_impl_.limit_up_ == nullptr) {
        _this->_impl_.limit_up_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.limit_up_);
      } else {
        _this->_impl_.limit_up_->MergeFrom(*from._impl_.limit_up_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.limit_down_ != nullptr);
      if (_this->_impl_.limit_down_ == nullptr) {
        _this->_impl_.limit_down_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.limit_down_);
      } else {
        _this->_impl_.limit_down_->MergeFrom(*from._impl_.limit_down_);
      }
    }
  }
  if (from._internal_depth() != 0) {
    _this->_impl_.depth_ = from._impl_.depth_;
  }
  if (from._internal_is_consistent() != 0) {
    _this->_impl_.is_consistent_ = from._impl_.is_consistent_;
  }
  if (from._internal_order_book_type() != 0) {
    _this->_impl_.order_book_type_ = from._impl_.order_book_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderBook::CopyFrom(const OrderBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.OrderBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderBook::InternalSwap(OrderBook* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.bids_.InternalSwap(&other->_impl_.bids_);
  _impl_.asks_.InternalSwap(&other->_impl_.asks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.order_book_type_)
      + sizeof(OrderBook::_impl_.order_book_type_)
      - PROTOBUF_FIELD_OFFSET(OrderBook, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata OrderBook::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Order::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Order>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Order, _impl_._has_bits_);
};

void Order::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Order::Order(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.Order)
}
inline PROTOBUF_NDEBUG_INLINE Order::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::Order& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Order::Order(
    ::google::protobuf::Arena* arena,
    const Order& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Order* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.price_)
                        : nullptr;
  _impl_.quantity_ = from._impl_.quantity_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.Order)
}
inline PROTOBUF_NDEBUG_INLINE Order::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Order::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::quantity_));
}
Order::~Order() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.Order)
  SharedDtor(*this);
}
inline void Order::SharedDtor(MessageLite& self) {
  Order& this_ = static_cast<Order&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.price_;
  this_._impl_.~Impl_();
}

inline void* Order::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Order(arena);
}
constexpr auto Order::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Order),
                                            alignof(Order));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Order::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Order_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Order::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Order>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Order::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Order>(), &Order::ByteSizeLong,
            &Order::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Order, _impl_._cached_size_),
        false,
    },
    &Order::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Order::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Order::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Order, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Order>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 quantity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Order, _impl_.quantity_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Order, _impl_.quantity_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Order, _impl_.price_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 1;
    {PROTOBUF_FIELD_OFFSET(Order, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 2;
    {PROTOBUF_FIELD_OFFSET(Order, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Order::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.Order)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.price_ != nullptr);
    _impl_.price_->Clear();
  }
  _impl_.quantity_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Order::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Order& this_ = static_cast<const Order&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Order::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Order& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.Order)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.Quotation price = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // int64 quantity = 2;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_quantity(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.Order)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Order::ByteSizeLong(const MessageLite& base) {
          const Order& this_ = static_cast<const Order&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Order::ByteSizeLong() const {
          const Order& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.Order)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .tinkoff.public.invest.api.contract.v1.Quotation price = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
          }
           {
            // int64 quantity = 2;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Order::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Order*>(&to_msg);
  auto& from = static_cast<const Order&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.Order)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.price_ != nullptr);
    if (_this->_impl_.price_ == nullptr) {
      _this->_impl_.price_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_);
    } else {
      _this->_impl_.price_->MergeFrom(*from._impl_.price_);
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Order::CopyFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Order::InternalSwap(Order* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Order, _impl_.quantity_)
      + sizeof(Order::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(Order, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata Order::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Trade::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Trade>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Trade, _impl_._has_bits_);
};

void Trade::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Trade::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Trade::Trade(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.Trade)
}
inline PROTOBUF_NDEBUG_INLINE Trade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::Trade& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_) {}

Trade::Trade(
    ::google::protobuf::Arena* arena,
    const Trade& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Trade* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.price_)
                        : nullptr;
  _impl_.time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, trade_source_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::trade_source_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.Trade)
}
inline PROTOBUF_NDEBUG_INLINE Trade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_uid_(arena) {}

inline void Trade::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, trade_source_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::trade_source_));
}
Trade::~Trade() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.Trade)
  SharedDtor(*this);
}
inline void Trade::SharedDtor(MessageLite& self) {
  Trade& this_ = static_cast<Trade&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.price_;
  delete this_._impl_.time_;
  this_._impl_.~Impl_();
}

inline void* Trade::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Trade(arena);
}
constexpr auto Trade::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Trade),
                                            alignof(Trade));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Trade::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Trade_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Trade::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Trade>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Trade::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Trade>(), &Trade::ByteSizeLong,
            &Trade::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Trade, _impl_._cached_size_),
        false,
    },
    &Trade::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Trade::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 70, 2> Trade::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Trade, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Trade>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.TradeDirection direction = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Trade, _impl_.direction_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.direction_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.price_)}},
    // int64 quantity = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Trade, _impl_.quantity_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.quantity_)}},
    // .google.protobuf.Timestamp time = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Trade, _impl_.time_)}},
    // string instrument_uid = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.instrument_uid_)}},
    // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Trade, _impl_.trade_source_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.trade_source_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.TradeDirection direction = 2;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 quantity = 4;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp time = 5;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string instrument_uid = 6;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 7;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.trade_source_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\53\4\0\0\0\0\16\0"
    "tinkoff.public.invest.api.contract.v1.Trade"
    "figi"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void Trade::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.Trade)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.trade_source_) -
      reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.trade_source_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Trade::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Trade& this_ = static_cast<const Trade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Trade::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Trade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.Trade)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Trade.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.TradeDirection direction = 2;
          if (this_._internal_direction() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_direction(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // int64 quantity = 4;
          if (this_._internal_quantity() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_quantity(), target);
          }

          // .google.protobuf.Timestamp time = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // string instrument_uid = 6;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.Trade.instrument_uid");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 7;
          if (this_._internal_trade_source() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_trade_source(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.Trade)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Trade::ByteSizeLong(const MessageLite& base) {
          const Trade& this_ = static_cast<const Trade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Trade::ByteSizeLong() const {
          const Trade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.Trade)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 6;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tinkoff.public.invest.api.contract.v1.Quotation price = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
            // .google.protobuf.Timestamp time = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
          }
           {
            // int64 quantity = 4;
            if (this_._internal_quantity() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_quantity());
            }
            // .tinkoff.public.invest.api.contract.v1.TradeDirection direction = 2;
            if (this_._internal_direction() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
            }
            // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 7;
            if (this_._internal_trade_source() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_trade_source());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Trade::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Trade*>(&to_msg);
  auto& from = static_cast<const Trade&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.Trade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  if (from._internal_quantity() != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  if (from._internal_trade_source() != 0) {
    _this->_impl_.trade_source_ = from._impl_.trade_source_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Trade::CopyFrom(const Trade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.Trade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Trade::InternalSwap(Trade* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Trade, _impl_.trade_source_)
      + sizeof(Trade::_impl_.trade_source_)
      - PROTOBUF_FIELD_OFFSET(Trade, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata Trade::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TradingStatus::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TradingStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_._has_bits_);
};

void TradingStatus::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TradingStatus::TradingStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.TradingStatus)
}
inline PROTOBUF_NDEBUG_INLINE TradingStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::TradingStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_) {}

TradingStatus::TradingStatus(
    ::google::protobuf::Arena* arena,
    const TradingStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TradingStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trading_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, trading_status_),
           offsetof(Impl_, market_order_available_flag_) -
               offsetof(Impl_, trading_status_) +
               sizeof(Impl_::market_order_available_flag_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.TradingStatus)
}
inline PROTOBUF_NDEBUG_INLINE TradingStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_uid_(arena) {}

inline void TradingStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, market_order_available_flag_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::market_order_available_flag_));
}
TradingStatus::~TradingStatus() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.TradingStatus)
  SharedDtor(*this);
}
inline void TradingStatus::SharedDtor(MessageLite& self) {
  TradingStatus& this_ = static_cast<TradingStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.time_;
  this_._impl_.~Impl_();
}

inline void* TradingStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TradingStatus(arena);
}
constexpr auto TradingStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TradingStatus),
                                            alignof(TradingStatus));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TradingStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TradingStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TradingStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TradingStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TradingStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TradingStatus>(), &TradingStatus::ByteSizeLong,
            &TradingStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_._cached_size_),
        false,
    },
    &TradingStatus::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TradingStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 78, 2> TradingStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::TradingStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.SecurityTradingStatus trading_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TradingStatus, _impl_.trading_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.trading_status_)}},
    // .google.protobuf.Timestamp time = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.time_)}},
    // bool limit_order_available_flag = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TradingStatus, _impl_.limit_order_available_flag_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.limit_order_available_flag_)}},
    // bool market_order_available_flag = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TradingStatus, _impl_.market_order_available_flag_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.market_order_available_flag_)}},
    // string instrument_uid = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.instrument_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.SecurityTradingStatus trading_status = 2;
    {PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.trading_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp time = 3;
    {PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool limit_order_available_flag = 4;
    {PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.limit_order_available_flag_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool market_order_available_flag = 5;
    {PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.market_order_available_flag_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string instrument_uid = 6;
    {PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\63\4\0\0\0\0\16\0"
    "tinkoff.public.invest.api.contract.v1.TradingStatus"
    "figi"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void TradingStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.TradingStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.time_ != nullptr);
    _impl_.time_->Clear();
  }
  ::memset(&_impl_.trading_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.market_order_available_flag_) -
      reinterpret_cast<char*>(&_impl_.trading_status_)) + sizeof(_impl_.market_order_available_flag_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TradingStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TradingStatus& this_ = static_cast<const TradingStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TradingStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TradingStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.TradingStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.TradingStatus.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.SecurityTradingStatus trading_status = 2;
          if (this_._internal_trading_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_trading_status(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp time = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // bool limit_order_available_flag = 4;
          if (this_._internal_limit_order_available_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_limit_order_available_flag(), target);
          }

          // bool market_order_available_flag = 5;
          if (this_._internal_market_order_available_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_market_order_available_flag(), target);
          }

          // string instrument_uid = 6;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.TradingStatus.instrument_uid");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.TradingStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TradingStatus::ByteSizeLong(const MessageLite& base) {
          const TradingStatus& this_ = static_cast<const TradingStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TradingStatus::ByteSizeLong() const {
          const TradingStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.TradingStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 6;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
           {
            // .google.protobuf.Timestamp time = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.SecurityTradingStatus trading_status = 2;
            if (this_._internal_trading_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_trading_status());
            }
            // bool limit_order_available_flag = 4;
            if (this_._internal_limit_order_available_flag() != 0) {
              total_size += 2;
            }
            // bool market_order_available_flag = 5;
            if (this_._internal_market_order_available_flag() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TradingStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TradingStatus*>(&to_msg);
  auto& from = static_cast<const TradingStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.TradingStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.time_ != nullptr);
    if (_this->_impl_.time_ == nullptr) {
      _this->_impl_.time_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
    } else {
      _this->_impl_.time_->MergeFrom(*from._impl_.time_);
    }
  }
  if (from._internal_trading_status() != 0) {
    _this->_impl_.trading_status_ = from._impl_.trading_status_;
  }
  if (from._internal_limit_order_available_flag() != 0) {
    _this->_impl_.limit_order_available_flag_ = from._impl_.limit_order_available_flag_;
  }
  if (from._internal_market_order_available_flag() != 0) {
    _this->_impl_.market_order_available_flag_ = from._impl_.market_order_available_flag_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TradingStatus::CopyFrom(const TradingStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.TradingStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TradingStatus::InternalSwap(TradingStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.market_order_available_flag_)
      + sizeof(TradingStatus::_impl_.market_order_available_flag_)
      - PROTOBUF_FIELD_OFFSET(TradingStatus, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata TradingStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetCandlesRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetCandlesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_._has_bits_);
};

void GetCandlesRequest::clear_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GetCandlesRequest::clear_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
GetCandlesRequest::GetCandlesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetCandlesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetCandlesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_id_(arena, from.instrument_id_) {}

GetCandlesRequest::GetCandlesRequest(
    ::google::protobuf::Arena* arena,
    const GetCandlesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetCandlesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.from_)
                        : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.to_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, interval_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, interval_),
           offsetof(Impl_, limit_) -
               offsetof(Impl_, interval_) +
               sizeof(Impl_::limit_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetCandlesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetCandlesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_id_(arena) {}

inline void GetCandlesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, limit_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::limit_));
}
GetCandlesRequest::~GetCandlesRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetCandlesRequest)
  SharedDtor(*this);
}
inline void GetCandlesRequest::SharedDtor(MessageLite& self) {
  GetCandlesRequest& this_ = static_cast<GetCandlesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  delete this_._impl_.from_;
  delete this_._impl_.to_;
  this_._impl_.~Impl_();
}

inline void* GetCandlesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetCandlesRequest(arena);
}
constexpr auto GetCandlesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetCandlesRequest),
                                            alignof(GetCandlesRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetCandlesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetCandlesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetCandlesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetCandlesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetCandlesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetCandlesRequest>(), &GetCandlesRequest::ByteSizeLong,
            &GetCandlesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_._cached_size_),
        false,
    },
    &GetCandlesRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetCandlesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 81, 2> GetCandlesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_._has_bits_),
    0, // no _extensions_
    10, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966688,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetCandlesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.figi_)}},
    // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.from_)}},
    // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 1, PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.to_)}},
    // .tinkoff.public.invest.api.contract.v1.CandleInterval interval = 4 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetCandlesRequest, _impl_.interval_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.interval_)}},
    // optional string instrument_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.instrument_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetCandlesRequest, _impl_.candle_source_type_), 4>(),
     {56, 4, 0, PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.candle_source_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.figi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.from_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.to_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.CandleInterval interval = 4 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.interval_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional string instrument_id = 5;
    {PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.instrument_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 7;
    {PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.candle_source_type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional int32 limit = 10;
    {PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.limit_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\67\4\0\0\0\15\0\0"
    "tinkoff.public.invest.api.contract.v1.GetCandlesRequest"
    "figi"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void GetCandlesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetCandlesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.figi_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.instrument_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
  }
  _impl_.interval_ = 0;
  if (cached_has_bits & 0x00000030u) {
    ::memset(&_impl_.candle_source_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.limit_) -
        reinterpret_cast<char*>(&_impl_.candle_source_type_)) + sizeof(_impl_.limit_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetCandlesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetCandlesRequest& this_ = static_cast<const GetCandlesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetCandlesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetCandlesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetCandlesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string figi = 1 [deprecated = true];
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetCandlesRequest.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.from_, this_._impl_.from_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.to_, this_._impl_.to_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.CandleInterval interval = 4 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_interval() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_interval(), target);
          }

          // optional string instrument_id = 5;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetCandlesRequest.instrument_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 7;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_candle_source_type(), target);
          }

          // optional int32 limit = 10;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_limit(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetCandlesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetCandlesRequest::ByteSizeLong(const MessageLite& base) {
          const GetCandlesRequest& this_ = static_cast<const GetCandlesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetCandlesRequest::ByteSizeLong() const {
          const GetCandlesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetCandlesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // optional string figi = 1 [deprecated = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // optional string instrument_id = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
            // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_);
            }
            // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_);
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.CandleInterval interval = 4 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_interval() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_interval());
            }
          }
          if (cached_has_bits & 0x00000030u) {
            // optional .tinkoff.public.invest.api.contract.v1.GetCandlesRequest.CandleSource candle_source_type = 7;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_candle_source_type());
            }
            // optional int32 limit = 10;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_limit());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetCandlesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetCandlesRequest*>(&to_msg);
  auto& from = static_cast<const GetCandlesRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetCandlesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_figi(from._internal_figi());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_instrument_id(from._internal_instrument_id());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.from_ != nullptr);
      if (_this->_impl_.from_ == nullptr) {
        _this->_impl_.from_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.from_);
      } else {
        _this->_impl_.from_->MergeFrom(*from._impl_.from_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.to_ != nullptr);
      if (_this->_impl_.to_ == nullptr) {
        _this->_impl_.to_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.to_);
      } else {
        _this->_impl_.to_->MergeFrom(*from._impl_.to_);
      }
    }
  }
  if (from._internal_interval() != 0) {
    _this->_impl_.interval_ = from._impl_.interval_;
  }
  if (cached_has_bits & 0x00000030u) {
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.candle_source_type_ = from._impl_.candle_source_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.limit_ = from._impl_.limit_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCandlesRequest::CopyFrom(const GetCandlesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetCandlesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetCandlesRequest::InternalSwap(GetCandlesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.limit_)
      + sizeof(GetCandlesRequest::_impl_.limit_)
      - PROTOBUF_FIELD_OFFSET(GetCandlesRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata GetCandlesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetCandlesResponse::_Internal {
 public:
};

GetCandlesResponse::GetCandlesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetCandlesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetCandlesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetCandlesResponse& from_msg)
      : candles_{visibility, arena, from.candles_},
        _cached_size_{0} {}

GetCandlesResponse::GetCandlesResponse(
    ::google::protobuf::Arena* arena,
    const GetCandlesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetCandlesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetCandlesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetCandlesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : candles_{visibility, arena},
        _cached_size_{0} {}

inline void GetCandlesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetCandlesResponse::~GetCandlesResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetCandlesResponse)
  SharedDtor(*this);
}
inline void GetCandlesResponse::SharedDtor(MessageLite& self) {
  GetCandlesResponse& this_ = static_cast<GetCandlesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetCandlesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetCandlesResponse(arena);
}
constexpr auto GetCandlesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetCandlesResponse, _impl_.candles_) +
          decltype(GetCandlesResponse::_impl_.candles_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetCandlesResponse), alignof(GetCandlesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetCandlesResponse::PlacementNew_,
                                 sizeof(GetCandlesResponse),
                                 alignof(GetCandlesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetCandlesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetCandlesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetCandlesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetCandlesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetCandlesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetCandlesResponse>(), &GetCandlesResponse::ByteSizeLong,
            &GetCandlesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetCandlesResponse, _impl_._cached_size_),
        false,
    },
    &GetCandlesResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetCandlesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetCandlesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetCandlesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.HistoricCandle candles = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetCandlesResponse, _impl_.candles_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.HistoricCandle candles = 1;
    {PROTOBUF_FIELD_OFFSET(GetCandlesResponse, _impl_.candles_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::HistoricCandle>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetCandlesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetCandlesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.candles_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetCandlesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetCandlesResponse& this_ = static_cast<const GetCandlesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetCandlesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetCandlesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetCandlesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.public.invest.api.contract.v1.HistoricCandle candles = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_candles_size());
               i < n; i++) {
            const auto& repfield = this_._internal_candles().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetCandlesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetCandlesResponse::ByteSizeLong(const MessageLite& base) {
          const GetCandlesResponse& this_ = static_cast<const GetCandlesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetCandlesResponse::ByteSizeLong() const {
          const GetCandlesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetCandlesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.HistoricCandle candles = 1;
            {
              total_size += 1UL * this_._internal_candles_size();
              for (const auto& msg : this_._internal_candles()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetCandlesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetCandlesResponse*>(&to_msg);
  auto& from = static_cast<const GetCandlesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetCandlesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_candles()->MergeFrom(
      from._internal_candles());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetCandlesResponse::CopyFrom(const GetCandlesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetCandlesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetCandlesResponse::InternalSwap(GetCandlesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.candles_.InternalSwap(&other->_impl_.candles_);
}

::google::protobuf::Metadata GetCandlesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoricCandle::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HistoricCandle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_._has_bits_);
};

void HistoricCandle::clear_open() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.open_ != nullptr) _impl_.open_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void HistoricCandle::clear_high() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.high_ != nullptr) _impl_.high_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void HistoricCandle::clear_low() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.low_ != nullptr) _impl_.low_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void HistoricCandle::clear_close() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.close_ != nullptr) _impl_.close_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void HistoricCandle::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
HistoricCandle::HistoricCandle(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.HistoricCandle)
}
inline PROTOBUF_NDEBUG_INLINE HistoricCandle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::HistoricCandle& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HistoricCandle::HistoricCandle(
    ::google::protobuf::Arena* arena,
    const HistoricCandle& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoricCandle* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.open_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.open_)
                        : nullptr;
  _impl_.high_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.high_)
                        : nullptr;
  _impl_.low_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.low_)
                        : nullptr;
  _impl_.close_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.close_)
                        : nullptr;
  _impl_.time_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, volume_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, volume_),
           offsetof(Impl_, candle_source_) -
               offsetof(Impl_, volume_) +
               sizeof(Impl_::candle_source_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.HistoricCandle)
}
inline PROTOBUF_NDEBUG_INLINE HistoricCandle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HistoricCandle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, open_),
           0,
           offsetof(Impl_, candle_source_) -
               offsetof(Impl_, open_) +
               sizeof(Impl_::candle_source_));
}
HistoricCandle::~HistoricCandle() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.HistoricCandle)
  SharedDtor(*this);
}
inline void HistoricCandle::SharedDtor(MessageLite& self) {
  HistoricCandle& this_ = static_cast<HistoricCandle&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.open_;
  delete this_._impl_.high_;
  delete this_._impl_.low_;
  delete this_._impl_.close_;
  delete this_._impl_.time_;
  this_._impl_.~Impl_();
}

inline void* HistoricCandle::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HistoricCandle(arena);
}
constexpr auto HistoricCandle::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HistoricCandle),
                                            alignof(HistoricCandle));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HistoricCandle::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HistoricCandle_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HistoricCandle::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HistoricCandle>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HistoricCandle::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HistoricCandle>(), &HistoricCandle::ByteSizeLong,
            &HistoricCandle::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_._cached_size_),
        false,
    },
    &HistoricCandle::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HistoricCandle::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 5, 0, 2> HistoricCandle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::HistoricCandle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.Quotation open = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.open_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation high = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.high_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation low = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.low_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation close = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.close_)}},
    // int64 volume = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HistoricCandle, _impl_.volume_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.volume_)}},
    // .google.protobuf.Timestamp time = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 4, PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.time_)}},
    // bool is_complete = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HistoricCandle, _impl_.is_complete_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.is_complete_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.CandleSource candle_source = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HistoricCandle, _impl_.candle_source_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.candle_source_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.Quotation open = 1;
    {PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.open_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation high = 2;
    {PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.high_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation low = 3;
    {PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.low_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation close = 4;
    {PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.close_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 volume = 5;
    {PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.volume_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp time = 6;
    {PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.time_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool is_complete = 7;
    {PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.is_complete_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .tinkoff.public.invest.api.contract.v1.CandleSource candle_source = 9;
    {PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.candle_source_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HistoricCandle::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.HistoricCandle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.open_ != nullptr);
      _impl_.open_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.high_ != nullptr);
      _impl_.high_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.low_ != nullptr);
      _impl_.low_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.close_ != nullptr);
      _impl_.close_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  ::memset(&_impl_.volume_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.candle_source_) -
      reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.candle_source_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HistoricCandle::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HistoricCandle& this_ = static_cast<const HistoricCandle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HistoricCandle::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HistoricCandle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.HistoricCandle)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.Quotation open = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.open_, this_._impl_.open_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation high = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.high_, this_._impl_.high_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation low = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.low_, this_._impl_.low_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation close = 4;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.close_, this_._impl_.close_->GetCachedSize(), target,
                stream);
          }

          // int64 volume = 5;
          if (this_._internal_volume() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_volume(), target);
          }

          // .google.protobuf.Timestamp time = 6;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // bool is_complete = 7;
          if (this_._internal_is_complete() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_is_complete(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.CandleSource candle_source = 9;
          if (this_._internal_candle_source() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this_._internal_candle_source(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.HistoricCandle)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HistoricCandle::ByteSizeLong(const MessageLite& base) {
          const HistoricCandle& this_ = static_cast<const HistoricCandle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HistoricCandle::ByteSizeLong() const {
          const HistoricCandle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.HistoricCandle)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // .tinkoff.public.invest.api.contract.v1.Quotation open = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.open_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation high = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.high_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation low = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.low_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation close = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.close_);
            }
            // .google.protobuf.Timestamp time = 6;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
          }
           {
            // int64 volume = 5;
            if (this_._internal_volume() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_volume());
            }
            // bool is_complete = 7;
            if (this_._internal_is_complete() != 0) {
              total_size += 2;
            }
            // .tinkoff.public.invest.api.contract.v1.CandleSource candle_source = 9;
            if (this_._internal_candle_source() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_candle_source());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HistoricCandle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoricCandle*>(&to_msg);
  auto& from = static_cast<const HistoricCandle&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.HistoricCandle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.open_ != nullptr);
      if (_this->_impl_.open_ == nullptr) {
        _this->_impl_.open_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.open_);
      } else {
        _this->_impl_.open_->MergeFrom(*from._impl_.open_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.high_ != nullptr);
      if (_this->_impl_.high_ == nullptr) {
        _this->_impl_.high_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.high_);
      } else {
        _this->_impl_.high_->MergeFrom(*from._impl_.high_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.low_ != nullptr);
      if (_this->_impl_.low_ == nullptr) {
        _this->_impl_.low_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.low_);
      } else {
        _this->_impl_.low_->MergeFrom(*from._impl_.low_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.close_ != nullptr);
      if (_this->_impl_.close_ == nullptr) {
        _this->_impl_.close_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.close_);
      } else {
        _this->_impl_.close_->MergeFrom(*from._impl_.close_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  if (from._internal_volume() != 0) {
    _this->_impl_.volume_ = from._impl_.volume_;
  }
  if (from._internal_is_complete() != 0) {
    _this->_impl_.is_complete_ = from._impl_.is_complete_;
  }
  if (from._internal_candle_source() != 0) {
    _this->_impl_.candle_source_ = from._impl_.candle_source_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoricCandle::CopyFrom(const HistoricCandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.HistoricCandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoricCandle::InternalSwap(HistoricCandle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.candle_source_)
      + sizeof(HistoricCandle::_impl_.candle_source_)
      - PROTOBUF_FIELD_OFFSET(HistoricCandle, _impl_.open_)>(
          reinterpret_cast<char*>(&_impl_.open_),
          reinterpret_cast<char*>(&other->_impl_.open_));
}

::google::protobuf::Metadata HistoricCandle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetLastPricesRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetLastPricesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_._has_bits_);
};

GetLastPricesRequest::GetLastPricesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetLastPricesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetLastPricesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetLastPricesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_{visibility, arena, from.figi_},
        instrument_id_{visibility, arena, from.instrument_id_} {}

GetLastPricesRequest::GetLastPricesRequest(
    ::google::protobuf::Arena* arena,
    const GetLastPricesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetLastPricesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_price_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, last_price_type_),
           offsetof(Impl_, instrument_status_) -
               offsetof(Impl_, last_price_type_) +
               sizeof(Impl_::instrument_status_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetLastPricesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetLastPricesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_{visibility, arena},
        instrument_id_{visibility, arena} {}

inline void GetLastPricesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_price_type_),
           0,
           offsetof(Impl_, instrument_status_) -
               offsetof(Impl_, last_price_type_) +
               sizeof(Impl_::instrument_status_));
}
GetLastPricesRequest::~GetLastPricesRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetLastPricesRequest)
  SharedDtor(*this);
}
inline void GetLastPricesRequest::SharedDtor(MessageLite& self) {
  GetLastPricesRequest& this_ = static_cast<GetLastPricesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetLastPricesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetLastPricesRequest(arena);
}
constexpr auto GetLastPricesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_.figi_) +
          decltype(GetLastPricesRequest::_impl_.figi_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_.instrument_id_) +
          decltype(GetLastPricesRequest::_impl_.instrument_id_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetLastPricesRequest), alignof(GetLastPricesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetLastPricesRequest::PlacementNew_,
                                 sizeof(GetLastPricesRequest),
                                 alignof(GetLastPricesRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetLastPricesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetLastPricesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetLastPricesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetLastPricesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetLastPricesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetLastPricesRequest>(), &GetLastPricesRequest::ByteSizeLong,
            &GetLastPricesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_._cached_size_),
        false,
    },
    &GetLastPricesRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetLastPricesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 84, 2> GetLastPricesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967032,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetLastPricesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_.figi_)}},
    // repeated string instrument_id = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_.instrument_id_)}},
    // .tinkoff.public.invest.api.contract.v1.LastPriceType last_price_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetLastPricesRequest, _impl_.last_price_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_.last_price_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string instrument_id = 2;
    {PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_.instrument_id_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .tinkoff.public.invest.api.contract.v1.LastPriceType last_price_type = 3;
    {PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_.last_price_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional .tinkoff.public.invest.api.contract.v1.InstrumentStatus instrument_status = 9;
    {PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_.instrument_status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\72\4\15\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetLastPricesRequest"
    "figi"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void GetLastPricesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetLastPricesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.Clear();
  _impl_.instrument_id_.Clear();
  _impl_.last_price_type_ = 0;
  _impl_.instrument_status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetLastPricesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetLastPricesRequest& this_ = static_cast<const GetLastPricesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetLastPricesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetLastPricesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetLastPricesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string figi = 1 [deprecated = true];
          for (int i = 0, n = this_._internal_figi_size(); i < n; ++i) {
            const auto& s = this_._internal_figi().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetLastPricesRequest.figi");
            target = stream->WriteString(1, s, target);
          }

          // repeated string instrument_id = 2;
          for (int i = 0, n = this_._internal_instrument_id_size(); i < n; ++i) {
            const auto& s = this_._internal_instrument_id().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetLastPricesRequest.instrument_id");
            target = stream->WriteString(2, s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.LastPriceType last_price_type = 3;
          if (this_._internal_last_price_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_last_price_type(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .tinkoff.public.invest.api.contract.v1.InstrumentStatus instrument_status = 9;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this_._internal_instrument_status(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetLastPricesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetLastPricesRequest::ByteSizeLong(const MessageLite& base) {
          const GetLastPricesRequest& this_ = static_cast<const GetLastPricesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetLastPricesRequest::ByteSizeLong() const {
          const GetLastPricesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetLastPricesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string figi = 1 [deprecated = true];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_figi().size());
              for (int i = 0, n = this_._internal_figi().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_figi().Get(i));
              }
            }
            // repeated string instrument_id = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_instrument_id().size());
              for (int i = 0, n = this_._internal_instrument_id().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_instrument_id().Get(i));
              }
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.LastPriceType last_price_type = 3;
            if (this_._internal_last_price_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_last_price_type());
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.InstrumentStatus instrument_status = 9;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_instrument_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetLastPricesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetLastPricesRequest*>(&to_msg);
  auto& from = static_cast<const GetLastPricesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetLastPricesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_figi()->MergeFrom(from._internal_figi());
  _this->_internal_mutable_instrument_id()->MergeFrom(from._internal_instrument_id());
  if (from._internal_last_price_type() != 0) {
    _this->_impl_.last_price_type_ = from._impl_.last_price_type_;
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.instrument_status_ = from._impl_.instrument_status_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLastPricesRequest::CopyFrom(const GetLastPricesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetLastPricesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetLastPricesRequest::InternalSwap(GetLastPricesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.figi_.InternalSwap(&other->_impl_.figi_);
  _impl_.instrument_id_.InternalSwap(&other->_impl_.instrument_id_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_.instrument_status_)
      + sizeof(GetLastPricesRequest::_impl_.instrument_status_)
      - PROTOBUF_FIELD_OFFSET(GetLastPricesRequest, _impl_.last_price_type_)>(
          reinterpret_cast<char*>(&_impl_.last_price_type_),
          reinterpret_cast<char*>(&other->_impl_.last_price_type_));
}

::google::protobuf::Metadata GetLastPricesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetLastPricesResponse::_Internal {
 public:
};

GetLastPricesResponse::GetLastPricesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetLastPricesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetLastPricesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetLastPricesResponse& from_msg)
      : last_prices_{visibility, arena, from.last_prices_},
        _cached_size_{0} {}

GetLastPricesResponse::GetLastPricesResponse(
    ::google::protobuf::Arena* arena,
    const GetLastPricesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetLastPricesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetLastPricesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetLastPricesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : last_prices_{visibility, arena},
        _cached_size_{0} {}

inline void GetLastPricesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetLastPricesResponse::~GetLastPricesResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetLastPricesResponse)
  SharedDtor(*this);
}
inline void GetLastPricesResponse::SharedDtor(MessageLite& self) {
  GetLastPricesResponse& this_ = static_cast<GetLastPricesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetLastPricesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetLastPricesResponse(arena);
}
constexpr auto GetLastPricesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetLastPricesResponse, _impl_.last_prices_) +
          decltype(GetLastPricesResponse::_impl_.last_prices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetLastPricesResponse), alignof(GetLastPricesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetLastPricesResponse::PlacementNew_,
                                 sizeof(GetLastPricesResponse),
                                 alignof(GetLastPricesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetLastPricesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetLastPricesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetLastPricesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetLastPricesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetLastPricesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetLastPricesResponse>(), &GetLastPricesResponse::ByteSizeLong,
            &GetLastPricesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetLastPricesResponse, _impl_._cached_size_),
        false,
    },
    &GetLastPricesResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetLastPricesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetLastPricesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetLastPricesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.LastPrice last_prices = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetLastPricesResponse, _impl_.last_prices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.LastPrice last_prices = 1;
    {PROTOBUF_FIELD_OFFSET(GetLastPricesResponse, _impl_.last_prices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::LastPrice>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetLastPricesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetLastPricesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.last_prices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetLastPricesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetLastPricesResponse& this_ = static_cast<const GetLastPricesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetLastPricesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetLastPricesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetLastPricesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.public.invest.api.contract.v1.LastPrice last_prices = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_last_prices_size());
               i < n; i++) {
            const auto& repfield = this_._internal_last_prices().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetLastPricesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetLastPricesResponse::ByteSizeLong(const MessageLite& base) {
          const GetLastPricesResponse& this_ = static_cast<const GetLastPricesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetLastPricesResponse::ByteSizeLong() const {
          const GetLastPricesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetLastPricesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.LastPrice last_prices = 1;
            {
              total_size += 1UL * this_._internal_last_prices_size();
              for (const auto& msg : this_._internal_last_prices()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetLastPricesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetLastPricesResponse*>(&to_msg);
  auto& from = static_cast<const GetLastPricesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetLastPricesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_last_prices()->MergeFrom(
      from._internal_last_prices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLastPricesResponse::CopyFrom(const GetLastPricesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetLastPricesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetLastPricesResponse::InternalSwap(GetLastPricesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.last_prices_.InternalSwap(&other->_impl_.last_prices_);
}

::google::protobuf::Metadata GetLastPricesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LastPrice::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LastPrice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LastPrice, _impl_._has_bits_);
};

void LastPrice::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void LastPrice::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
LastPrice::LastPrice(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.LastPrice)
}
inline PROTOBUF_NDEBUG_INLINE LastPrice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::LastPrice& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_) {}

LastPrice::LastPrice(
    ::google::protobuf::Arena* arena,
    const LastPrice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LastPrice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.price_)
                        : nullptr;
  _impl_.time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  _impl_.last_price_type_ = from._impl_.last_price_type_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.LastPrice)
}
inline PROTOBUF_NDEBUG_INLINE LastPrice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_uid_(arena) {}

inline void LastPrice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, last_price_type_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::last_price_type_));
}
LastPrice::~LastPrice() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.LastPrice)
  SharedDtor(*this);
}
inline void LastPrice::SharedDtor(MessageLite& self) {
  LastPrice& this_ = static_cast<LastPrice&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.price_;
  delete this_._impl_.time_;
  this_._impl_.~Impl_();
}

inline void* LastPrice::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LastPrice(arena);
}
constexpr auto LastPrice::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LastPrice),
                                            alignof(LastPrice));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LastPrice::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LastPrice_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LastPrice::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LastPrice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LastPrice::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LastPrice>(), &LastPrice::ByteSizeLong,
            &LastPrice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LastPrice, _impl_._cached_size_),
        false,
    },
    &LastPrice::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LastPrice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 2, 74, 2> LastPrice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LastPrice, _impl_._has_bits_),
    0, // no _extensions_
    12, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964216,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::LastPrice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.public.invest.api.contract.v1.LastPriceType last_price_type = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LastPrice, _impl_.last_price_type_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(LastPrice, _impl_.last_price_type_)}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LastPrice, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(LastPrice, _impl_.price_)}},
    // .google.protobuf.Timestamp time = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(LastPrice, _impl_.time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(LastPrice, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
    {PROTOBUF_FIELD_OFFSET(LastPrice, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp time = 3;
    {PROTOBUF_FIELD_OFFSET(LastPrice, _impl_.time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string instrument_uid = 11;
    {PROTOBUF_FIELD_OFFSET(LastPrice, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.LastPriceType last_price_type = 12;
    {PROTOBUF_FIELD_OFFSET(LastPrice, _impl_.last_price_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\57\4\0\0\16\0\0\0"
    "tinkoff.public.invest.api.contract.v1.LastPrice"
    "figi"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void LastPrice::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.LastPrice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  _impl_.last_price_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LastPrice::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LastPrice& this_ = static_cast<const LastPrice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LastPrice::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LastPrice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.LastPrice)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.LastPrice.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp time = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // string instrument_uid = 11;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.LastPrice.instrument_uid");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.LastPriceType last_price_type = 12;
          if (this_._internal_last_price_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                12, this_._internal_last_price_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.LastPrice)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LastPrice::ByteSizeLong(const MessageLite& base) {
          const LastPrice& this_ = static_cast<const LastPrice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LastPrice::ByteSizeLong() const {
          const LastPrice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.LastPrice)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 11;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tinkoff.public.invest.api.contract.v1.Quotation price = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
            // .google.protobuf.Timestamp time = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.LastPriceType last_price_type = 12;
            if (this_._internal_last_price_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_last_price_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LastPrice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LastPrice*>(&to_msg);
  auto& from = static_cast<const LastPrice&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.LastPrice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  if (from._internal_last_price_type() != 0) {
    _this->_impl_.last_price_type_ = from._impl_.last_price_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LastPrice::CopyFrom(const LastPrice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.LastPrice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LastPrice::InternalSwap(LastPrice* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LastPrice, _impl_.last_price_type_)
      + sizeof(LastPrice::_impl_.last_price_type_)
      - PROTOBUF_FIELD_OFFSET(LastPrice, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata LastPrice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetOrderBookRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetOrderBookRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetOrderBookRequest, _impl_._has_bits_);
};

GetOrderBookRequest::GetOrderBookRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrderBookRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderBookRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetOrderBookRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_id_(arena, from.instrument_id_) {}

GetOrderBookRequest::GetOrderBookRequest(
    ::google::protobuf::Arena* arena,
    const GetOrderBookRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetOrderBookRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.depth_ = from._impl_.depth_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrderBookRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderBookRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_id_(arena) {}

inline void GetOrderBookRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.depth_ = {};
}
GetOrderBookRequest::~GetOrderBookRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrderBookRequest)
  SharedDtor(*this);
}
inline void GetOrderBookRequest::SharedDtor(MessageLite& self) {
  GetOrderBookRequest& this_ = static_cast<GetOrderBookRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetOrderBookRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetOrderBookRequest(arena);
}
constexpr auto GetOrderBookRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetOrderBookRequest),
                                            alignof(GetOrderBookRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetOrderBookRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetOrderBookRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetOrderBookRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetOrderBookRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetOrderBookRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetOrderBookRequest>(), &GetOrderBookRequest::ByteSizeLong,
            &GetOrderBookRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetOrderBookRequest, _impl_._cached_size_),
        false,
    },
    &GetOrderBookRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetOrderBookRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 83, 2> GetOrderBookRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetOrderBookRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetOrderBookRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetOrderBookRequest, _impl_.figi_)}},
    // int32 depth = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetOrderBookRequest, _impl_.depth_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderBookRequest, _impl_.depth_)}},
    // optional string instrument_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(GetOrderBookRequest, _impl_.instrument_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(GetOrderBookRequest, _impl_.figi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 depth = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetOrderBookRequest, _impl_.depth_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // optional string instrument_id = 3;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookRequest, _impl_.instrument_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\71\4\0\15\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetOrderBookRequest"
    "figi"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void GetOrderBookRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrderBookRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.figi_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.instrument_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.depth_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetOrderBookRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetOrderBookRequest& this_ = static_cast<const GetOrderBookRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetOrderBookRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetOrderBookRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrderBookRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string figi = 1 [deprecated = true];
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrderBookRequest.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 depth = 2 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_depth() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_depth(), target);
          }

          // optional string instrument_id = 3;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrderBookRequest.instrument_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrderBookRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetOrderBookRequest::ByteSizeLong(const MessageLite& base) {
          const GetOrderBookRequest& this_ = static_cast<const GetOrderBookRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetOrderBookRequest::ByteSizeLong() const {
          const GetOrderBookRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrderBookRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string figi = 1 [deprecated = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // optional string instrument_id = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
          }
           {
            // int32 depth = 2 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_depth() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_depth());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetOrderBookRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetOrderBookRequest*>(&to_msg);
  auto& from = static_cast<const GetOrderBookRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrderBookRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_figi(from._internal_figi());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_instrument_id(from._internal_instrument_id());
    }
  }
  if (from._internal_depth() != 0) {
    _this->_impl_.depth_ = from._impl_.depth_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrderBookRequest::CopyFrom(const GetOrderBookRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrderBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetOrderBookRequest::InternalSwap(GetOrderBookRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
        swap(_impl_.depth_, other->_impl_.depth_);
}

::google::protobuf::Metadata GetOrderBookRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetOrderBookResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetOrderBookResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_._has_bits_);
};

void GetOrderBookResponse::clear_last_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_price_ != nullptr) _impl_.last_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetOrderBookResponse::clear_close_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.close_price_ != nullptr) _impl_.close_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GetOrderBookResponse::clear_limit_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.limit_up_ != nullptr) _impl_.limit_up_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GetOrderBookResponse::clear_limit_down() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.limit_down_ != nullptr) _impl_.limit_down_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void GetOrderBookResponse::clear_last_price_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_price_ts_ != nullptr) _impl_.last_price_ts_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void GetOrderBookResponse::clear_close_price_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.close_price_ts_ != nullptr) _impl_.close_price_ts_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void GetOrderBookResponse::clear_orderbook_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.orderbook_ts_ != nullptr) _impl_.orderbook_ts_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
GetOrderBookResponse::GetOrderBookResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetOrderBookResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderBookResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        bids_{visibility, arena, from.bids_},
        asks_{visibility, arena, from.asks_},
        figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_) {}

GetOrderBookResponse::GetOrderBookResponse(
    ::google::protobuf::Arena* arena,
    const GetOrderBookResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetOrderBookResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.last_price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.last_price_)
                        : nullptr;
  _impl_.close_price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.close_price_)
                        : nullptr;
  _impl_.limit_up_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.limit_up_)
                        : nullptr;
  _impl_.limit_down_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.limit_down_)
                        : nullptr;
  _impl_.last_price_ts_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.last_price_ts_)
                        : nullptr;
  _impl_.close_price_ts_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.close_price_ts_)
                        : nullptr;
  _impl_.orderbook_ts_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.orderbook_ts_)
                        : nullptr;
  _impl_.depth_ = from._impl_.depth_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetOrderBookResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetOrderBookResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        bids_{visibility, arena},
        asks_{visibility, arena},
        figi_(arena),
        instrument_uid_(arena) {}

inline void GetOrderBookResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_price_),
           0,
           offsetof(Impl_, depth_) -
               offsetof(Impl_, last_price_) +
               sizeof(Impl_::depth_));
}
GetOrderBookResponse::~GetOrderBookResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetOrderBookResponse)
  SharedDtor(*this);
}
inline void GetOrderBookResponse::SharedDtor(MessageLite& self) {
  GetOrderBookResponse& this_ = static_cast<GetOrderBookResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.last_price_;
  delete this_._impl_.close_price_;
  delete this_._impl_.limit_up_;
  delete this_._impl_.limit_down_;
  delete this_._impl_.last_price_ts_;
  delete this_._impl_.close_price_ts_;
  delete this_._impl_.orderbook_ts_;
  this_._impl_.~Impl_();
}

inline void* GetOrderBookResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetOrderBookResponse(arena);
}
constexpr auto GetOrderBookResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.bids_) +
          decltype(GetOrderBookResponse::_impl_.bids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.asks_) +
          decltype(GetOrderBookResponse::_impl_.asks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetOrderBookResponse), alignof(GetOrderBookResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetOrderBookResponse::PlacementNew_,
                                 sizeof(GetOrderBookResponse),
                                 alignof(GetOrderBookResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetOrderBookResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetOrderBookResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetOrderBookResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetOrderBookResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetOrderBookResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetOrderBookResponse>(), &GetOrderBookResponse::ByteSizeLong,
            &GetOrderBookResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_._cached_size_),
        false,
    },
    &GetOrderBookResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetOrderBookResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 9, 93, 2> GetOrderBookResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_._has_bits_),
    0, // no _extensions_
    23, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4287626752,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetOrderBookResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.figi_)}},
    // int32 depth = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetOrderBookResponse, _impl_.depth_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.depth_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.Order bids = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.bids_)}},
    // repeated .tinkoff.public.invest.api.contract.v1.Order asks = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.asks_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation last_price = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 2, PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.last_price_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation close_price = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 3, PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.close_price_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation limit_up = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 4, PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.limit_up_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation limit_down = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 5, PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.limit_down_)}},
    // string instrument_uid = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.instrument_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 depth = 2;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.depth_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .tinkoff.public.invest.api.contract.v1.Order bids = 3;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.bids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tinkoff.public.invest.api.contract.v1.Order asks = 4;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.asks_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation last_price = 5;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.last_price_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation close_price = 6;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.close_price_), _Internal::kHasBitsOffset + 1, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation limit_up = 7;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.limit_up_), _Internal::kHasBitsOffset + 2, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation limit_down = 8;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.limit_down_), _Internal::kHasBitsOffset + 3, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string instrument_uid = 9;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp last_price_ts = 21;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.last_price_ts_), _Internal::kHasBitsOffset + 4, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp close_price_ts = 22;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.close_price_ts_), _Internal::kHasBitsOffset + 5, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp orderbook_ts = 23;
    {PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.orderbook_ts_), _Internal::kHasBitsOffset + 6, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Order>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Order>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\72\4\0\0\0\0\0\0\0\16\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetOrderBookResponse"
    "figi"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void GetOrderBookResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetOrderBookResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bids_.Clear();
  _impl_.asks_.Clear();
  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.last_price_ != nullptr);
      _impl_.last_price_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.close_price_ != nullptr);
      _impl_.close_price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.limit_up_ != nullptr);
      _impl_.limit_up_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.limit_down_ != nullptr);
      _impl_.limit_down_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.last_price_ts_ != nullptr);
      _impl_.last_price_ts_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.close_price_ts_ != nullptr);
      _impl_.close_price_ts_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.orderbook_ts_ != nullptr);
      _impl_.orderbook_ts_->Clear();
    }
  }
  _impl_.depth_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetOrderBookResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetOrderBookResponse& this_ = static_cast<const GetOrderBookResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetOrderBookResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetOrderBookResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetOrderBookResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrderBookResponse.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 depth = 2;
          if (this_._internal_depth() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_depth(), target);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.Order bids = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_bids_size());
               i < n; i++) {
            const auto& repfield = this_._internal_bids().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tinkoff.public.invest.api.contract.v1.Order asks = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_asks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_asks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.Quotation last_price = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.last_price_, this_._impl_.last_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation close_price = 6;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.close_price_, this_._impl_.close_price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation limit_up = 7;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.limit_up_, this_._impl_.limit_up_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation limit_down = 8;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.limit_down_, this_._impl_.limit_down_->GetCachedSize(), target,
                stream);
          }

          // string instrument_uid = 9;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetOrderBookResponse.instrument_uid");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // .google.protobuf.Timestamp last_price_ts = 21;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                21, *this_._impl_.last_price_ts_, this_._impl_.last_price_ts_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp close_price_ts = 22;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                22, *this_._impl_.close_price_ts_, this_._impl_.close_price_ts_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp orderbook_ts = 23;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                23, *this_._impl_.orderbook_ts_, this_._impl_.orderbook_ts_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetOrderBookResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetOrderBookResponse::ByteSizeLong(const MessageLite& base) {
          const GetOrderBookResponse& this_ = static_cast<const GetOrderBookResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetOrderBookResponse::ByteSizeLong() const {
          const GetOrderBookResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetOrderBookResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.Order bids = 3;
            {
              total_size += 1UL * this_._internal_bids_size();
              for (const auto& msg : this_._internal_bids()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tinkoff.public.invest.api.contract.v1.Order asks = 4;
            {
              total_size += 1UL * this_._internal_asks_size();
              for (const auto& msg : this_._internal_asks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 9;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000007fu) {
            // .tinkoff.public.invest.api.contract.v1.Quotation last_price = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_price_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation close_price = 6;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.close_price_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation limit_up = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.limit_up_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation limit_down = 8;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.limit_down_);
            }
            // .google.protobuf.Timestamp last_price_ts = 21;
            if (cached_has_bits & 0x00000010u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_price_ts_);
            }
            // .google.protobuf.Timestamp close_price_ts = 22;
            if (cached_has_bits & 0x00000020u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.close_price_ts_);
            }
            // .google.protobuf.Timestamp orderbook_ts = 23;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.orderbook_ts_);
            }
          }
           {
            // int32 depth = 2;
            if (this_._internal_depth() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_depth());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetOrderBookResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetOrderBookResponse*>(&to_msg);
  auto& from = static_cast<const GetOrderBookResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetOrderBookResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bids()->MergeFrom(
      from._internal_bids());
  _this->_internal_mutable_asks()->MergeFrom(
      from._internal_asks());
  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.last_price_ != nullptr);
      if (_this->_impl_.last_price_ == nullptr) {
        _this->_impl_.last_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.last_price_);
      } else {
        _this->_impl_.last_price_->MergeFrom(*from._impl_.last_price_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.close_price_ != nullptr);
      if (_this->_impl_.close_price_ == nullptr) {
        _this->_impl_.close_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.close_price_);
      } else {
        _this->_impl_.close_price_->MergeFrom(*from._impl_.close_price_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.limit_up_ != nullptr);
      if (_this->_impl_.limit_up_ == nullptr) {
        _this->_impl_.limit_up_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.limit_up_);
      } else {
        _this->_impl_.limit_up_->MergeFrom(*from._impl_.limit_up_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.limit_down_ != nullptr);
      if (_this->_impl_.limit_down_ == nullptr) {
        _this->_impl_.limit_down_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.limit_down_);
      } else {
        _this->_impl_.limit_down_->MergeFrom(*from._impl_.limit_down_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.last_price_ts_ != nullptr);
      if (_this->_impl_.last_price_ts_ == nullptr) {
        _this->_impl_.last_price_ts_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.last_price_ts_);
      } else {
        _this->_impl_.last_price_ts_->MergeFrom(*from._impl_.last_price_ts_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.close_price_ts_ != nullptr);
      if (_this->_impl_.close_price_ts_ == nullptr) {
        _this->_impl_.close_price_ts_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.close_price_ts_);
      } else {
        _this->_impl_.close_price_ts_->MergeFrom(*from._impl_.close_price_ts_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.orderbook_ts_ != nullptr);
      if (_this->_impl_.orderbook_ts_ == nullptr) {
        _this->_impl_.orderbook_ts_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.orderbook_ts_);
      } else {
        _this->_impl_.orderbook_ts_->MergeFrom(*from._impl_.orderbook_ts_);
      }
    }
  }
  if (from._internal_depth() != 0) {
    _this->_impl_.depth_ = from._impl_.depth_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetOrderBookResponse::CopyFrom(const GetOrderBookResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetOrderBookResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetOrderBookResponse::InternalSwap(GetOrderBookResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.bids_.InternalSwap(&other->_impl_.bids_);
  _impl_.asks_.InternalSwap(&other->_impl_.asks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.depth_)
      + sizeof(GetOrderBookResponse::_impl_.depth_)
      - PROTOBUF_FIELD_OFFSET(GetOrderBookResponse, _impl_.last_price_)>(
          reinterpret_cast<char*>(&_impl_.last_price_),
          reinterpret_cast<char*>(&other->_impl_.last_price_));
}

::google::protobuf::Metadata GetOrderBookResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTradingStatusRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetTradingStatusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTradingStatusRequest, _impl_._has_bits_);
};

GetTradingStatusRequest::GetTradingStatusRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTradingStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetTradingStatusRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_id_(arena, from.instrument_id_) {}

GetTradingStatusRequest::GetTradingStatusRequest(
    ::google::protobuf::Arena* arena,
    const GetTradingStatusRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTradingStatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTradingStatusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_id_(arena) {}

inline void GetTradingStatusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetTradingStatusRequest::~GetTradingStatusRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest)
  SharedDtor(*this);
}
inline void GetTradingStatusRequest::SharedDtor(MessageLite& self) {
  GetTradingStatusRequest& this_ = static_cast<GetTradingStatusRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetTradingStatusRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTradingStatusRequest(arena);
}
constexpr auto GetTradingStatusRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetTradingStatusRequest),
                                            alignof(GetTradingStatusRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTradingStatusRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTradingStatusRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTradingStatusRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTradingStatusRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTradingStatusRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTradingStatusRequest>(), &GetTradingStatusRequest::ByteSizeLong,
            &GetTradingStatusRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTradingStatusRequest, _impl_._cached_size_),
        false,
    },
    &GetTradingStatusRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTradingStatusRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 87, 2> GetTradingStatusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTradingStatusRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTradingStatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string instrument_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusRequest, _impl_.instrument_id_)}},
    // optional string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusRequest, _impl_.figi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusRequest, _impl_.figi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string instrument_id = 2;
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusRequest, _impl_.instrument_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\75\4\15\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest"
    "figi"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void GetTradingStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.figi_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.instrument_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTradingStatusRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTradingStatusRequest& this_ = static_cast<const GetTradingStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTradingStatusRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTradingStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string figi = 1 [deprecated = true];
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional string instrument_id = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest.instrument_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTradingStatusRequest::ByteSizeLong(const MessageLite& base) {
          const GetTradingStatusRequest& this_ = static_cast<const GetTradingStatusRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTradingStatusRequest::ByteSizeLong() const {
          const GetTradingStatusRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string figi = 1 [deprecated = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // optional string instrument_id = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTradingStatusRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTradingStatusRequest*>(&to_msg);
  auto& from = static_cast<const GetTradingStatusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_figi(from._internal_figi());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_instrument_id(from._internal_instrument_id());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTradingStatusRequest::CopyFrom(const GetTradingStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTradingStatusRequest::InternalSwap(GetTradingStatusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
}

::google::protobuf::Metadata GetTradingStatusRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTradingStatusesRequest::_Internal {
 public:
};

GetTradingStatusesRequest::GetTradingStatusesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTradingStatusesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetTradingStatusesRequest& from_msg)
      : instrument_id_{visibility, arena, from.instrument_id_},
        _cached_size_{0} {}

GetTradingStatusesRequest::GetTradingStatusesRequest(
    ::google::protobuf::Arena* arena,
    const GetTradingStatusesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTradingStatusesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTradingStatusesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : instrument_id_{visibility, arena},
        _cached_size_{0} {}

inline void GetTradingStatusesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetTradingStatusesRequest::~GetTradingStatusesRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusesRequest)
  SharedDtor(*this);
}
inline void GetTradingStatusesRequest::SharedDtor(MessageLite& self) {
  GetTradingStatusesRequest& this_ = static_cast<GetTradingStatusesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetTradingStatusesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTradingStatusesRequest(arena);
}
constexpr auto GetTradingStatusesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetTradingStatusesRequest, _impl_.instrument_id_) +
          decltype(GetTradingStatusesRequest::_impl_.instrument_id_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetTradingStatusesRequest), alignof(GetTradingStatusesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetTradingStatusesRequest::PlacementNew_,
                                 sizeof(GetTradingStatusesRequest),
                                 alignof(GetTradingStatusesRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTradingStatusesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTradingStatusesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTradingStatusesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTradingStatusesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTradingStatusesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTradingStatusesRequest>(), &GetTradingStatusesRequest::ByteSizeLong,
            &GetTradingStatusesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTradingStatusesRequest, _impl_._cached_size_),
        false,
    },
    &GetTradingStatusesRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTradingStatusesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 85, 2> GetTradingStatusesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTradingStatusesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string instrument_id = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusesRequest, _impl_.instrument_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string instrument_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusesRequest, _impl_.instrument_id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\77\15\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetTradingStatusesRequest"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void GetTradingStatusesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instrument_id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTradingStatusesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTradingStatusesRequest& this_ = static_cast<const GetTradingStatusesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTradingStatusesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTradingStatusesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string instrument_id = 1;
          for (int i = 0, n = this_._internal_instrument_id_size(); i < n; ++i) {
            const auto& s = this_._internal_instrument_id().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetTradingStatusesRequest.instrument_id");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetTradingStatusesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTradingStatusesRequest::ByteSizeLong(const MessageLite& base) {
          const GetTradingStatusesRequest& this_ = static_cast<const GetTradingStatusesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTradingStatusesRequest::ByteSizeLong() const {
          const GetTradingStatusesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string instrument_id = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_instrument_id().size());
              for (int i = 0, n = this_._internal_instrument_id().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_instrument_id().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTradingStatusesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTradingStatusesRequest*>(&to_msg);
  auto& from = static_cast<const GetTradingStatusesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_instrument_id()->MergeFrom(from._internal_instrument_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTradingStatusesRequest::CopyFrom(const GetTradingStatusesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTradingStatusesRequest::InternalSwap(GetTradingStatusesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.instrument_id_.InternalSwap(&other->_impl_.instrument_id_);
}

::google::protobuf::Metadata GetTradingStatusesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTradingStatusesResponse::_Internal {
 public:
};

GetTradingStatusesResponse::GetTradingStatusesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTradingStatusesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetTradingStatusesResponse& from_msg)
      : trading_statuses_{visibility, arena, from.trading_statuses_},
        _cached_size_{0} {}

GetTradingStatusesResponse::GetTradingStatusesResponse(
    ::google::protobuf::Arena* arena,
    const GetTradingStatusesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTradingStatusesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTradingStatusesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trading_statuses_{visibility, arena},
        _cached_size_{0} {}

inline void GetTradingStatusesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetTradingStatusesResponse::~GetTradingStatusesResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusesResponse)
  SharedDtor(*this);
}
inline void GetTradingStatusesResponse::SharedDtor(MessageLite& self) {
  GetTradingStatusesResponse& this_ = static_cast<GetTradingStatusesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetTradingStatusesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTradingStatusesResponse(arena);
}
constexpr auto GetTradingStatusesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetTradingStatusesResponse, _impl_.trading_statuses_) +
          decltype(GetTradingStatusesResponse::_impl_.trading_statuses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetTradingStatusesResponse), alignof(GetTradingStatusesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetTradingStatusesResponse::PlacementNew_,
                                 sizeof(GetTradingStatusesResponse),
                                 alignof(GetTradingStatusesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTradingStatusesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTradingStatusesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTradingStatusesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTradingStatusesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTradingStatusesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTradingStatusesResponse>(), &GetTradingStatusesResponse::ByteSizeLong,
            &GetTradingStatusesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTradingStatusesResponse, _impl_._cached_size_),
        false,
    },
    &GetTradingStatusesResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTradingStatusesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetTradingStatusesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTradingStatusesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse trading_statuses = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusesResponse, _impl_.trading_statuses_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse trading_statuses = 1;
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusesResponse, _impl_.trading_statuses_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetTradingStatusesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trading_statuses_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTradingStatusesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTradingStatusesResponse& this_ = static_cast<const GetTradingStatusesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTradingStatusesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTradingStatusesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse trading_statuses = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_trading_statuses_size());
               i < n; i++) {
            const auto& repfield = this_._internal_trading_statuses().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetTradingStatusesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTradingStatusesResponse::ByteSizeLong(const MessageLite& base) {
          const GetTradingStatusesResponse& this_ = static_cast<const GetTradingStatusesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTradingStatusesResponse::ByteSizeLong() const {
          const GetTradingStatusesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse trading_statuses = 1;
            {
              total_size += 1UL * this_._internal_trading_statuses_size();
              for (const auto& msg : this_._internal_trading_statuses()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTradingStatusesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTradingStatusesResponse*>(&to_msg);
  auto& from = static_cast<const GetTradingStatusesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trading_statuses()->MergeFrom(
      from._internal_trading_statuses());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTradingStatusesResponse::CopyFrom(const GetTradingStatusesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTradingStatusesResponse::InternalSwap(GetTradingStatusesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trading_statuses_.InternalSwap(&other->_impl_.trading_statuses_);
}

::google::protobuf::Metadata GetTradingStatusesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTradingStatusResponse::_Internal {
 public:
};

GetTradingStatusResponse::GetTradingStatusResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTradingStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse& from_msg)
      : figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_),
        _cached_size_{0} {}

GetTradingStatusResponse::GetTradingStatusResponse(
    ::google::protobuf::Arena* arena,
    const GetTradingStatusResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTradingStatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trading_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, trading_status_),
           offsetof(Impl_, only_best_price_) -
               offsetof(Impl_, trading_status_) +
               sizeof(Impl_::only_best_price_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTradingStatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : figi_(arena),
        instrument_uid_(arena),
        _cached_size_{0} {}

inline void GetTradingStatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trading_status_),
           0,
           offsetof(Impl_, only_best_price_) -
               offsetof(Impl_, trading_status_) +
               sizeof(Impl_::only_best_price_));
}
GetTradingStatusResponse::~GetTradingStatusResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse)
  SharedDtor(*this);
}
inline void GetTradingStatusResponse::SharedDtor(MessageLite& self) {
  GetTradingStatusResponse& this_ = static_cast<GetTradingStatusResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetTradingStatusResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTradingStatusResponse(arena);
}
constexpr auto GetTradingStatusResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetTradingStatusResponse),
                                            alignof(GetTradingStatusResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTradingStatusResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTradingStatusResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTradingStatusResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTradingStatusResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTradingStatusResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTradingStatusResponse>(), &GetTradingStatusResponse::ByteSizeLong,
            &GetTradingStatusResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_._cached_size_),
        false,
    },
    &GetTradingStatusResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTradingStatusResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 0, 97, 2> GetTradingStatusResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966848,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTradingStatusResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.figi_)}},
    // .tinkoff.public.invest.api.contract.v1.SecurityTradingStatus trading_status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTradingStatusResponse, _impl_.trading_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.trading_status_)}},
    // bool limit_order_available_flag = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetTradingStatusResponse, _impl_.limit_order_available_flag_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.limit_order_available_flag_)}},
    // bool market_order_available_flag = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetTradingStatusResponse, _impl_.market_order_available_flag_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.market_order_available_flag_)}},
    // bool api_trade_available_flag = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetTradingStatusResponse, _impl_.api_trade_available_flag_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.api_trade_available_flag_)}},
    // string instrument_uid = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.instrument_uid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool bestprice_order_available_flag = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetTradingStatusResponse, _impl_.bestprice_order_available_flag_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.bestprice_order_available_flag_)}},
    // bool only_best_price = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetTradingStatusResponse, _impl_.only_best_price_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.only_best_price_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.figi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.SecurityTradingStatus trading_status = 2;
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.trading_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool limit_order_available_flag = 3;
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.limit_order_available_flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool market_order_available_flag = 4;
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.market_order_available_flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool api_trade_available_flag = 5;
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.api_trade_available_flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string instrument_uid = 6;
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.instrument_uid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool bestprice_order_available_flag = 8;
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.bestprice_order_available_flag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool only_best_price = 9;
    {PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.only_best_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\76\4\0\0\0\0\16\0\0\0\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse"
    "figi"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void GetTradingStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  ::memset(&_impl_.trading_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.only_best_price_) -
      reinterpret_cast<char*>(&_impl_.trading_status_)) + sizeof(_impl_.only_best_price_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTradingStatusResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTradingStatusResponse& this_ = static_cast<const GetTradingStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTradingStatusResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTradingStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.SecurityTradingStatus trading_status = 2;
          if (this_._internal_trading_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_trading_status(), target);
          }

          // bool limit_order_available_flag = 3;
          if (this_._internal_limit_order_available_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_limit_order_available_flag(), target);
          }

          // bool market_order_available_flag = 4;
          if (this_._internal_market_order_available_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_market_order_available_flag(), target);
          }

          // bool api_trade_available_flag = 5;
          if (this_._internal_api_trade_available_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_api_trade_available_flag(), target);
          }

          // string instrument_uid = 6;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse.instrument_uid");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // bool bestprice_order_available_flag = 8;
          if (this_._internal_bestprice_order_available_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_bestprice_order_available_flag(), target);
          }

          // bool only_best_price = 9;
          if (this_._internal_only_best_price() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_only_best_price(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTradingStatusResponse::ByteSizeLong(const MessageLite& base) {
          const GetTradingStatusResponse& this_ = static_cast<const GetTradingStatusResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTradingStatusResponse::ByteSizeLong() const {
          const GetTradingStatusResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 6;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
            // .tinkoff.public.invest.api.contract.v1.SecurityTradingStatus trading_status = 2;
            if (this_._internal_trading_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_trading_status());
            }
            // bool limit_order_available_flag = 3;
            if (this_._internal_limit_order_available_flag() != 0) {
              total_size += 2;
            }
            // bool market_order_available_flag = 4;
            if (this_._internal_market_order_available_flag() != 0) {
              total_size += 2;
            }
            // bool api_trade_available_flag = 5;
            if (this_._internal_api_trade_available_flag() != 0) {
              total_size += 2;
            }
            // bool bestprice_order_available_flag = 8;
            if (this_._internal_bestprice_order_available_flag() != 0) {
              total_size += 2;
            }
            // bool only_best_price = 9;
            if (this_._internal_only_best_price() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTradingStatusResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTradingStatusResponse*>(&to_msg);
  auto& from = static_cast<const GetTradingStatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  if (from._internal_trading_status() != 0) {
    _this->_impl_.trading_status_ = from._impl_.trading_status_;
  }
  if (from._internal_limit_order_available_flag() != 0) {
    _this->_impl_.limit_order_available_flag_ = from._impl_.limit_order_available_flag_;
  }
  if (from._internal_market_order_available_flag() != 0) {
    _this->_impl_.market_order_available_flag_ = from._impl_.market_order_available_flag_;
  }
  if (from._internal_api_trade_available_flag() != 0) {
    _this->_impl_.api_trade_available_flag_ = from._impl_.api_trade_available_flag_;
  }
  if (from._internal_bestprice_order_available_flag() != 0) {
    _this->_impl_.bestprice_order_available_flag_ = from._impl_.bestprice_order_available_flag_;
  }
  if (from._internal_only_best_price() != 0) {
    _this->_impl_.only_best_price_ = from._impl_.only_best_price_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTradingStatusResponse::CopyFrom(const GetTradingStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetTradingStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTradingStatusResponse::InternalSwap(GetTradingStatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.only_best_price_)
      + sizeof(GetTradingStatusResponse::_impl_.only_best_price_)
      - PROTOBUF_FIELD_OFFSET(GetTradingStatusResponse, _impl_.trading_status_)>(
          reinterpret_cast<char*>(&_impl_.trading_status_),
          reinterpret_cast<char*>(&other->_impl_.trading_status_));
}

::google::protobuf::Metadata GetTradingStatusResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetLastTradesRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetLastTradesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_._has_bits_);
};

void GetLastTradesRequest::clear_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GetLastTradesRequest::clear_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
GetLastTradesRequest::GetLastTradesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetLastTradesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetLastTradesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetLastTradesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_id_(arena, from.instrument_id_) {}

GetLastTradesRequest::GetLastTradesRequest(
    ::google::protobuf::Arena* arena,
    const GetLastTradesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetLastTradesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.from_)
                        : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.to_)
                        : nullptr;
  _impl_.trade_source_ = from._impl_.trade_source_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetLastTradesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetLastTradesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_id_(arena) {}

inline void GetLastTradesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, trade_source_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::trade_source_));
}
GetLastTradesRequest::~GetLastTradesRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetLastTradesRequest)
  SharedDtor(*this);
}
inline void GetLastTradesRequest::SharedDtor(MessageLite& self) {
  GetLastTradesRequest& this_ = static_cast<GetLastTradesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_id_.Destroy();
  delete this_._impl_.from_;
  delete this_._impl_.to_;
  this_._impl_.~Impl_();
}

inline void* GetLastTradesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetLastTradesRequest(arena);
}
constexpr auto GetLastTradesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetLastTradesRequest),
                                            alignof(GetLastTradesRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetLastTradesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetLastTradesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetLastTradesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetLastTradesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetLastTradesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetLastTradesRequest>(), &GetLastTradesRequest::ByteSizeLong,
            &GetLastTradesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_._cached_size_),
        false,
    },
    &GetLastTradesRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetLastTradesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 84, 2> GetLastTradesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetLastTradesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string figi = 1 [deprecated = true];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.figi_)}},
    // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.from_)}},
    // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 1, PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.to_)}},
    // optional string instrument_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.instrument_id_)}},
    // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetLastTradesRequest, _impl_.trade_source_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.trade_source_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string figi = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.figi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.from_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.to_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string instrument_id = 4;
    {PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.instrument_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 5;
    {PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.trade_source_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\72\4\0\0\15\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetLastTradesRequest"
    "figi"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void GetLastTradesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetLastTradesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.figi_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.instrument_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
  }
  _impl_.trade_source_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetLastTradesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetLastTradesRequest& this_ = static_cast<const GetLastTradesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetLastTradesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetLastTradesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetLastTradesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string figi = 1 [deprecated = true];
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetLastTradesRequest.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.from_, this_._impl_.from_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.to_, this_._impl_.to_->GetCachedSize(), target,
                stream);
          }

          // optional string instrument_id = 4;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetLastTradesRequest.instrument_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 5;
          if (this_._internal_trade_source() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_trade_source(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetLastTradesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetLastTradesRequest::ByteSizeLong(const MessageLite& base) {
          const GetLastTradesRequest& this_ = static_cast<const GetLastTradesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetLastTradesRequest::ByteSizeLong() const {
          const GetLastTradesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetLastTradesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // optional string figi = 1 [deprecated = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // optional string instrument_id = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
            // .google.protobuf.Timestamp from = 2 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_);
            }
            // .google.protobuf.Timestamp to = 3 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_);
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.TradeSourceType trade_source = 5;
            if (this_._internal_trade_source() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_trade_source());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetLastTradesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetLastTradesRequest*>(&to_msg);
  auto& from = static_cast<const GetLastTradesRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetLastTradesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_figi(from._internal_figi());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_instrument_id(from._internal_instrument_id());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.from_ != nullptr);
      if (_this->_impl_.from_ == nullptr) {
        _this->_impl_.from_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.from_);
      } else {
        _this->_impl_.from_->MergeFrom(*from._impl_.from_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.to_ != nullptr);
      if (_this->_impl_.to_ == nullptr) {
        _this->_impl_.to_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.to_);
      } else {
        _this->_impl_.to_->MergeFrom(*from._impl_.to_);
      }
    }
  }
  if (from._internal_trade_source() != 0) {
    _this->_impl_.trade_source_ = from._impl_.trade_source_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLastTradesRequest::CopyFrom(const GetLastTradesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetLastTradesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetLastTradesRequest::InternalSwap(GetLastTradesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.trade_source_)
      + sizeof(GetLastTradesRequest::_impl_.trade_source_)
      - PROTOBUF_FIELD_OFFSET(GetLastTradesRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata GetLastTradesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetLastTradesResponse::_Internal {
 public:
};

GetLastTradesResponse::GetLastTradesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetLastTradesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetLastTradesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetLastTradesResponse& from_msg)
      : trades_{visibility, arena, from.trades_},
        _cached_size_{0} {}

GetLastTradesResponse::GetLastTradesResponse(
    ::google::protobuf::Arena* arena,
    const GetLastTradesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetLastTradesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetLastTradesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetLastTradesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trades_{visibility, arena},
        _cached_size_{0} {}

inline void GetLastTradesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetLastTradesResponse::~GetLastTradesResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetLastTradesResponse)
  SharedDtor(*this);
}
inline void GetLastTradesResponse::SharedDtor(MessageLite& self) {
  GetLastTradesResponse& this_ = static_cast<GetLastTradesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetLastTradesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetLastTradesResponse(arena);
}
constexpr auto GetLastTradesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetLastTradesResponse, _impl_.trades_) +
          decltype(GetLastTradesResponse::_impl_.trades_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetLastTradesResponse), alignof(GetLastTradesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetLastTradesResponse::PlacementNew_,
                                 sizeof(GetLastTradesResponse),
                                 alignof(GetLastTradesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetLastTradesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetLastTradesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetLastTradesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetLastTradesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetLastTradesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetLastTradesResponse>(), &GetLastTradesResponse::ByteSizeLong,
            &GetLastTradesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetLastTradesResponse, _impl_._cached_size_),
        false,
    },
    &GetLastTradesResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetLastTradesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetLastTradesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetLastTradesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.Trade trades = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetLastTradesResponse, _impl_.trades_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.Trade trades = 1;
    {PROTOBUF_FIELD_OFFSET(GetLastTradesResponse, _impl_.trades_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Trade>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetLastTradesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetLastTradesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trades_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetLastTradesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetLastTradesResponse& this_ = static_cast<const GetLastTradesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetLastTradesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetLastTradesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetLastTradesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.public.invest.api.contract.v1.Trade trades = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_trades_size());
               i < n; i++) {
            const auto& repfield = this_._internal_trades().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetLastTradesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetLastTradesResponse::ByteSizeLong(const MessageLite& base) {
          const GetLastTradesResponse& this_ = static_cast<const GetLastTradesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetLastTradesResponse::ByteSizeLong() const {
          const GetLastTradesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetLastTradesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.Trade trades = 1;
            {
              total_size += 1UL * this_._internal_trades_size();
              for (const auto& msg : this_._internal_trades()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetLastTradesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetLastTradesResponse*>(&to_msg);
  auto& from = static_cast<const GetLastTradesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetLastTradesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trades()->MergeFrom(
      from._internal_trades());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLastTradesResponse::CopyFrom(const GetLastTradesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetLastTradesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetLastTradesResponse::InternalSwap(GetLastTradesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trades_.InternalSwap(&other->_impl_.trades_);
}

::google::protobuf::Metadata GetLastTradesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetMySubscriptions::_Internal {
 public:
};

GetMySubscriptions::GetMySubscriptions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetMySubscriptions)
}
GetMySubscriptions::GetMySubscriptions(
    ::google::protobuf::Arena* arena,
    const GetMySubscriptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetMySubscriptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetMySubscriptions)
}

inline void* GetMySubscriptions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetMySubscriptions(arena);
}
constexpr auto GetMySubscriptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetMySubscriptions),
                                            alignof(GetMySubscriptions));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetMySubscriptions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetMySubscriptions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetMySubscriptions::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<GetMySubscriptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetMySubscriptions::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<GetMySubscriptions>(), &GetMySubscriptions::ByteSizeLong,
            &GetMySubscriptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetMySubscriptions, _impl_._cached_size_),
        false,
    },
    &GetMySubscriptions::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetMySubscriptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> GetMySubscriptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetMySubscriptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata GetMySubscriptions::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetClosePricesRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetClosePricesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetClosePricesRequest, _impl_._has_bits_);
};

GetClosePricesRequest::GetClosePricesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetClosePricesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetClosePricesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetClosePricesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        instruments_{visibility, arena, from.instruments_} {}

GetClosePricesRequest::GetClosePricesRequest(
    ::google::protobuf::Arena* arena,
    const GetClosePricesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetClosePricesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.instrument_status_ = from._impl_.instrument_status_;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetClosePricesRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetClosePricesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        instruments_{visibility, arena} {}

inline void GetClosePricesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.instrument_status_ = {};
}
GetClosePricesRequest::~GetClosePricesRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetClosePricesRequest)
  SharedDtor(*this);
}
inline void GetClosePricesRequest::SharedDtor(MessageLite& self) {
  GetClosePricesRequest& this_ = static_cast<GetClosePricesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetClosePricesRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetClosePricesRequest(arena);
}
constexpr auto GetClosePricesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetClosePricesRequest, _impl_.instruments_) +
          decltype(GetClosePricesRequest::_impl_.instruments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetClosePricesRequest), alignof(GetClosePricesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetClosePricesRequest::PlacementNew_,
                                 sizeof(GetClosePricesRequest),
                                 alignof(GetClosePricesRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetClosePricesRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetClosePricesRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetClosePricesRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetClosePricesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetClosePricesRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetClosePricesRequest>(), &GetClosePricesRequest::ByteSizeLong,
            &GetClosePricesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetClosePricesRequest, _impl_._cached_size_),
        false,
    },
    &GetClosePricesRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetClosePricesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 0, 2> GetClosePricesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetClosePricesRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967038,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetClosePricesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest instruments = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetClosePricesRequest, _impl_.instruments_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest instruments = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetClosePricesRequest, _impl_.instruments_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tinkoff.public.invest.api.contract.v1.InstrumentStatus instrument_status = 9;
    {PROTOBUF_FIELD_OFFSET(GetClosePricesRequest, _impl_.instrument_status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetClosePricesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetClosePricesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instruments_.Clear();
  _impl_.instrument_status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetClosePricesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetClosePricesRequest& this_ = static_cast<const GetClosePricesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetClosePricesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetClosePricesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetClosePricesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest instruments = 1 [(.google.api.field_behavior) = REQUIRED];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_instruments_size());
               i < n; i++) {
            const auto& repfield = this_._internal_instruments().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .tinkoff.public.invest.api.contract.v1.InstrumentStatus instrument_status = 9;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this_._internal_instrument_status(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetClosePricesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetClosePricesRequest::ByteSizeLong(const MessageLite& base) {
          const GetClosePricesRequest& this_ = static_cast<const GetClosePricesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetClosePricesRequest::ByteSizeLong() const {
          const GetClosePricesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetClosePricesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest instruments = 1 [(.google.api.field_behavior) = REQUIRED];
            {
              total_size += 1UL * this_._internal_instruments_size();
              for (const auto& msg : this_._internal_instruments()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // optional .tinkoff.public.invest.api.contract.v1.InstrumentStatus instrument_status = 9;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_instrument_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetClosePricesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetClosePricesRequest*>(&to_msg);
  auto& from = static_cast<const GetClosePricesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetClosePricesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_instruments()->MergeFrom(
      from._internal_instruments());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.instrument_status_ = from._impl_.instrument_status_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetClosePricesRequest::CopyFrom(const GetClosePricesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetClosePricesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetClosePricesRequest::InternalSwap(GetClosePricesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.instruments_.InternalSwap(&other->_impl_.instruments_);
  swap(_impl_.instrument_status_, other->_impl_.instrument_status_);
}

::google::protobuf::Metadata GetClosePricesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InstrumentClosePriceRequest::_Internal {
 public:
};

InstrumentClosePriceRequest::InstrumentClosePriceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest)
}
inline PROTOBUF_NDEBUG_INLINE InstrumentClosePriceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceRequest& from_msg)
      : instrument_id_(arena, from.instrument_id_),
        _cached_size_{0} {}

InstrumentClosePriceRequest::InstrumentClosePriceRequest(
    ::google::protobuf::Arena* arena,
    const InstrumentClosePriceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InstrumentClosePriceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest)
}
inline PROTOBUF_NDEBUG_INLINE InstrumentClosePriceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : instrument_id_(arena),
        _cached_size_{0} {}

inline void InstrumentClosePriceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InstrumentClosePriceRequest::~InstrumentClosePriceRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest)
  SharedDtor(*this);
}
inline void InstrumentClosePriceRequest::SharedDtor(MessageLite& self) {
  InstrumentClosePriceRequest& this_ = static_cast<InstrumentClosePriceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.instrument_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InstrumentClosePriceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InstrumentClosePriceRequest(arena);
}
constexpr auto InstrumentClosePriceRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InstrumentClosePriceRequest),
                                            alignof(InstrumentClosePriceRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InstrumentClosePriceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InstrumentClosePriceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InstrumentClosePriceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InstrumentClosePriceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InstrumentClosePriceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InstrumentClosePriceRequest>(), &InstrumentClosePriceRequest::ByteSizeLong,
            &InstrumentClosePriceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InstrumentClosePriceRequest, _impl_._cached_size_),
        false,
    },
    &InstrumentClosePriceRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InstrumentClosePriceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 87, 2> InstrumentClosePriceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string instrument_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InstrumentClosePriceRequest, _impl_.instrument_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string instrument_id = 1;
    {PROTOBUF_FIELD_OFFSET(InstrumentClosePriceRequest, _impl_.instrument_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\101\15\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest"
    "instrument_id"
  }},
};

PROTOBUF_NOINLINE void InstrumentClosePriceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instrument_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InstrumentClosePriceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InstrumentClosePriceRequest& this_ = static_cast<const InstrumentClosePriceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InstrumentClosePriceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InstrumentClosePriceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string instrument_id = 1;
          if (!this_._internal_instrument_id().empty()) {
            const std::string& _s = this_._internal_instrument_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest.instrument_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InstrumentClosePriceRequest::ByteSizeLong(const MessageLite& base) {
          const InstrumentClosePriceRequest& this_ = static_cast<const InstrumentClosePriceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InstrumentClosePriceRequest::ByteSizeLong() const {
          const InstrumentClosePriceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string instrument_id = 1;
            if (!this_._internal_instrument_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InstrumentClosePriceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InstrumentClosePriceRequest*>(&to_msg);
  auto& from = static_cast<const InstrumentClosePriceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_instrument_id().empty()) {
    _this->_internal_set_instrument_id(from._internal_instrument_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstrumentClosePriceRequest::CopyFrom(const InstrumentClosePriceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InstrumentClosePriceRequest::InternalSwap(InstrumentClosePriceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_id_, &other->_impl_.instrument_id_, arena);
}

::google::protobuf::Metadata InstrumentClosePriceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetClosePricesResponse::_Internal {
 public:
};

GetClosePricesResponse::GetClosePricesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetClosePricesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetClosePricesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetClosePricesResponse& from_msg)
      : close_prices_{visibility, arena, from.close_prices_},
        _cached_size_{0} {}

GetClosePricesResponse::GetClosePricesResponse(
    ::google::protobuf::Arena* arena,
    const GetClosePricesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetClosePricesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetClosePricesResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetClosePricesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : close_prices_{visibility, arena},
        _cached_size_{0} {}

inline void GetClosePricesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetClosePricesResponse::~GetClosePricesResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetClosePricesResponse)
  SharedDtor(*this);
}
inline void GetClosePricesResponse::SharedDtor(MessageLite& self) {
  GetClosePricesResponse& this_ = static_cast<GetClosePricesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetClosePricesResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetClosePricesResponse(arena);
}
constexpr auto GetClosePricesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetClosePricesResponse, _impl_.close_prices_) +
          decltype(GetClosePricesResponse::_impl_.close_prices_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetClosePricesResponse), alignof(GetClosePricesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetClosePricesResponse::PlacementNew_,
                                 sizeof(GetClosePricesResponse),
                                 alignof(GetClosePricesResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetClosePricesResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetClosePricesResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetClosePricesResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetClosePricesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetClosePricesResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetClosePricesResponse>(), &GetClosePricesResponse::ByteSizeLong,
            &GetClosePricesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetClosePricesResponse, _impl_._cached_size_),
        false,
    },
    &GetClosePricesResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetClosePricesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetClosePricesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetClosePricesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse close_prices = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetClosePricesResponse, _impl_.close_prices_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse close_prices = 1;
    {PROTOBUF_FIELD_OFFSET(GetClosePricesResponse, _impl_.close_prices_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetClosePricesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetClosePricesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.close_prices_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetClosePricesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetClosePricesResponse& this_ = static_cast<const GetClosePricesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetClosePricesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetClosePricesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetClosePricesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse close_prices = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_close_prices_size());
               i < n; i++) {
            const auto& repfield = this_._internal_close_prices().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetClosePricesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetClosePricesResponse::ByteSizeLong(const MessageLite& base) {
          const GetClosePricesResponse& this_ = static_cast<const GetClosePricesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetClosePricesResponse::ByteSizeLong() const {
          const GetClosePricesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetClosePricesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse close_prices = 1;
            {
              total_size += 1UL * this_._internal_close_prices_size();
              for (const auto& msg : this_._internal_close_prices()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetClosePricesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetClosePricesResponse*>(&to_msg);
  auto& from = static_cast<const GetClosePricesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetClosePricesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_close_prices()->MergeFrom(
      from._internal_close_prices());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetClosePricesResponse::CopyFrom(const GetClosePricesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetClosePricesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetClosePricesResponse::InternalSwap(GetClosePricesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.close_prices_.InternalSwap(&other->_impl_.close_prices_);
}

::google::protobuf::Metadata GetClosePricesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InstrumentClosePriceResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InstrumentClosePriceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_._has_bits_);
};

void InstrumentClosePriceResponse::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void InstrumentClosePriceResponse::clear_evening_session_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.evening_session_price_ != nullptr) _impl_.evening_session_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void InstrumentClosePriceResponse::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
InstrumentClosePriceResponse::InstrumentClosePriceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse)
}
inline PROTOBUF_NDEBUG_INLINE InstrumentClosePriceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        figi_(arena, from.figi_),
        instrument_uid_(arena, from.instrument_uid_) {}

InstrumentClosePriceResponse::InstrumentClosePriceResponse(
    ::google::protobuf::Arena* arena,
    const InstrumentClosePriceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InstrumentClosePriceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.price_)
                        : nullptr;
  _impl_.evening_session_price_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.evening_session_price_)
                        : nullptr;
  _impl_.time_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse)
}
inline PROTOBUF_NDEBUG_INLINE InstrumentClosePriceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        figi_(arena),
        instrument_uid_(arena) {}

inline void InstrumentClosePriceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, time_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::time_));
}
InstrumentClosePriceResponse::~InstrumentClosePriceResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse)
  SharedDtor(*this);
}
inline void InstrumentClosePriceResponse::SharedDtor(MessageLite& self) {
  InstrumentClosePriceResponse& this_ = static_cast<InstrumentClosePriceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.figi_.Destroy();
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.price_;
  delete this_._impl_.evening_session_price_;
  delete this_._impl_.time_;
  this_._impl_.~Impl_();
}

inline void* InstrumentClosePriceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InstrumentClosePriceResponse(arena);
}
constexpr auto InstrumentClosePriceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(InstrumentClosePriceResponse),
                                            alignof(InstrumentClosePriceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InstrumentClosePriceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InstrumentClosePriceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InstrumentClosePriceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InstrumentClosePriceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InstrumentClosePriceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InstrumentClosePriceResponse>(), &InstrumentClosePriceResponse::ByteSizeLong,
            &InstrumentClosePriceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_._cached_size_),
        false,
    },
    &InstrumentClosePriceResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InstrumentClosePriceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 93, 2> InstrumentClosePriceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_._has_bits_),
    0, // no _extensions_
    21, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293915644,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::InstrumentClosePriceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string figi = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.figi_)}},
    // string instrument_uid = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.instrument_uid_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.price_)}},
    // .tinkoff.public.invest.api.contract.v1.Quotation evening_session_price = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 1, 1, PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.evening_session_price_)}},
    // .google.protobuf.Timestamp time = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 2, 2, PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string figi = 1;
    {PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.figi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string instrument_uid = 2;
    {PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tinkoff.public.invest.api.contract.v1.Quotation price = 11;
    {PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.price_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.Quotation evening_session_price = 12;
    {PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.evening_session_price_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp time = 21;
    {PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.time_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\102\4\16\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse"
    "figi"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void InstrumentClosePriceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.figi_.ClearToEmpty();
  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.evening_session_price_ != nullptr);
      _impl_.evening_session_price_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InstrumentClosePriceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InstrumentClosePriceResponse& this_ = static_cast<const InstrumentClosePriceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InstrumentClosePriceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InstrumentClosePriceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string figi = 1;
          if (!this_._internal_figi().empty()) {
            const std::string& _s = this_._internal_figi();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse.figi");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string instrument_uid = 2;
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse.instrument_uid");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.Quotation price = 11;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.Quotation evening_session_price = 12;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                12, *this_._impl_.evening_session_price_, this_._impl_.evening_session_price_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp time = 21;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                21, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InstrumentClosePriceResponse::ByteSizeLong(const MessageLite& base) {
          const InstrumentClosePriceResponse& this_ = static_cast<const InstrumentClosePriceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InstrumentClosePriceResponse::ByteSizeLong() const {
          const InstrumentClosePriceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string figi = 1;
            if (!this_._internal_figi().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_figi());
            }
            // string instrument_uid = 2;
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .tinkoff.public.invest.api.contract.v1.Quotation price = 11;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
            }
            // .tinkoff.public.invest.api.contract.v1.Quotation evening_session_price = 12;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.evening_session_price_);
            }
            // .google.protobuf.Timestamp time = 21;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InstrumentClosePriceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InstrumentClosePriceResponse*>(&to_msg);
  auto& from = static_cast<const InstrumentClosePriceResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_figi().empty()) {
    _this->_internal_set_figi(from._internal_figi());
  }
  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.evening_session_price_ != nullptr);
      if (_this->_impl_.evening_session_price_ == nullptr) {
        _this->_impl_.evening_session_price_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.evening_session_price_);
      } else {
        _this->_impl_.evening_session_price_->MergeFrom(*from._impl_.evening_session_price_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstrumentClosePriceResponse::CopyFrom(const InstrumentClosePriceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.InstrumentClosePriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InstrumentClosePriceResponse::InternalSwap(InstrumentClosePriceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.time_)
      + sizeof(InstrumentClosePriceResponse::_impl_.time_)
      - PROTOBUF_FIELD_OFFSET(InstrumentClosePriceResponse, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata InstrumentClosePriceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTechAnalysisRequest_Smoothing::_Internal {
 public:
};

GetTechAnalysisRequest_Smoothing::GetTechAnalysisRequest_Smoothing(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing)
}
GetTechAnalysisRequest_Smoothing::GetTechAnalysisRequest_Smoothing(
    ::google::protobuf::Arena* arena, const GetTechAnalysisRequest_Smoothing& from)
    : GetTechAnalysisRequest_Smoothing(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GetTechAnalysisRequest_Smoothing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetTechAnalysisRequest_Smoothing::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fast_length_),
           0,
           offsetof(Impl_, signal_smoothing_) -
               offsetof(Impl_, fast_length_) +
               sizeof(Impl_::signal_smoothing_));
}
GetTechAnalysisRequest_Smoothing::~GetTechAnalysisRequest_Smoothing() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing)
  SharedDtor(*this);
}
inline void GetTechAnalysisRequest_Smoothing::SharedDtor(MessageLite& self) {
  GetTechAnalysisRequest_Smoothing& this_ = static_cast<GetTechAnalysisRequest_Smoothing&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetTechAnalysisRequest_Smoothing::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTechAnalysisRequest_Smoothing(arena);
}
constexpr auto GetTechAnalysisRequest_Smoothing::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetTechAnalysisRequest_Smoothing),
                                            alignof(GetTechAnalysisRequest_Smoothing));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTechAnalysisRequest_Smoothing::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTechAnalysisRequest_Smoothing_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTechAnalysisRequest_Smoothing::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTechAnalysisRequest_Smoothing>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTechAnalysisRequest_Smoothing::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTechAnalysisRequest_Smoothing>(), &GetTechAnalysisRequest_Smoothing::ByteSizeLong,
            &GetTechAnalysisRequest_Smoothing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Smoothing, _impl_._cached_size_),
        false,
    },
    &GetTechAnalysisRequest_Smoothing::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTechAnalysisRequest_Smoothing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> GetTechAnalysisRequest_Smoothing::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Smoothing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 fast_length = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTechAnalysisRequest_Smoothing, _impl_.fast_length_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Smoothing, _impl_.fast_length_)}},
    // int32 slow_length = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTechAnalysisRequest_Smoothing, _impl_.slow_length_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Smoothing, _impl_.slow_length_)}},
    // int32 signal_smoothing = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTechAnalysisRequest_Smoothing, _impl_.signal_smoothing_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Smoothing, _impl_.signal_smoothing_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 fast_length = 1;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Smoothing, _impl_.fast_length_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 slow_length = 2;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Smoothing, _impl_.slow_length_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 signal_smoothing = 3;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Smoothing, _impl_.signal_smoothing_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GetTechAnalysisRequest_Smoothing::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.fast_length_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.signal_smoothing_) -
      reinterpret_cast<char*>(&_impl_.fast_length_)) + sizeof(_impl_.signal_smoothing_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTechAnalysisRequest_Smoothing::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTechAnalysisRequest_Smoothing& this_ = static_cast<const GetTechAnalysisRequest_Smoothing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTechAnalysisRequest_Smoothing::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTechAnalysisRequest_Smoothing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 fast_length = 1;
          if (this_._internal_fast_length() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_fast_length(), target);
          }

          // int32 slow_length = 2;
          if (this_._internal_slow_length() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_slow_length(), target);
          }

          // int32 signal_smoothing = 3;
          if (this_._internal_signal_smoothing() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_signal_smoothing(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTechAnalysisRequest_Smoothing::ByteSizeLong(const MessageLite& base) {
          const GetTechAnalysisRequest_Smoothing& this_ = static_cast<const GetTechAnalysisRequest_Smoothing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTechAnalysisRequest_Smoothing::ByteSizeLong() const {
          const GetTechAnalysisRequest_Smoothing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 fast_length = 1;
            if (this_._internal_fast_length() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_fast_length());
            }
            // int32 slow_length = 2;
            if (this_._internal_slow_length() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_slow_length());
            }
            // int32 signal_smoothing = 3;
            if (this_._internal_signal_smoothing() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_signal_smoothing());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTechAnalysisRequest_Smoothing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTechAnalysisRequest_Smoothing*>(&to_msg);
  auto& from = static_cast<const GetTechAnalysisRequest_Smoothing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fast_length() != 0) {
    _this->_impl_.fast_length_ = from._impl_.fast_length_;
  }
  if (from._internal_slow_length() != 0) {
    _this->_impl_.slow_length_ = from._impl_.slow_length_;
  }
  if (from._internal_signal_smoothing() != 0) {
    _this->_impl_.signal_smoothing_ = from._impl_.signal_smoothing_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTechAnalysisRequest_Smoothing::CopyFrom(const GetTechAnalysisRequest_Smoothing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTechAnalysisRequest_Smoothing::InternalSwap(GetTechAnalysisRequest_Smoothing* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Smoothing, _impl_.signal_smoothing_)
      + sizeof(GetTechAnalysisRequest_Smoothing::_impl_.signal_smoothing_)
      - PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Smoothing, _impl_.fast_length_)>(
          reinterpret_cast<char*>(&_impl_.fast_length_),
          reinterpret_cast<char*>(&other->_impl_.fast_length_));
}

::google::protobuf::Metadata GetTechAnalysisRequest_Smoothing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTechAnalysisRequest_Deviation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetTechAnalysisRequest_Deviation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Deviation, _impl_._has_bits_);
};

void GetTechAnalysisRequest_Deviation::clear_deviation_multiplier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deviation_multiplier_ != nullptr) _impl_.deviation_multiplier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetTechAnalysisRequest_Deviation::GetTechAnalysisRequest_Deviation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation)
}
inline PROTOBUF_NDEBUG_INLINE GetTechAnalysisRequest_Deviation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Deviation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetTechAnalysisRequest_Deviation::GetTechAnalysisRequest_Deviation(
    ::google::protobuf::Arena* arena,
    const GetTechAnalysisRequest_Deviation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTechAnalysisRequest_Deviation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.deviation_multiplier_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.deviation_multiplier_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation)
}
inline PROTOBUF_NDEBUG_INLINE GetTechAnalysisRequest_Deviation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetTechAnalysisRequest_Deviation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.deviation_multiplier_ = {};
}
GetTechAnalysisRequest_Deviation::~GetTechAnalysisRequest_Deviation() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation)
  SharedDtor(*this);
}
inline void GetTechAnalysisRequest_Deviation::SharedDtor(MessageLite& self) {
  GetTechAnalysisRequest_Deviation& this_ = static_cast<GetTechAnalysisRequest_Deviation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.deviation_multiplier_;
  this_._impl_.~Impl_();
}

inline void* GetTechAnalysisRequest_Deviation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTechAnalysisRequest_Deviation(arena);
}
constexpr auto GetTechAnalysisRequest_Deviation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetTechAnalysisRequest_Deviation),
                                            alignof(GetTechAnalysisRequest_Deviation));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTechAnalysisRequest_Deviation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTechAnalysisRequest_Deviation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTechAnalysisRequest_Deviation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTechAnalysisRequest_Deviation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTechAnalysisRequest_Deviation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTechAnalysisRequest_Deviation>(), &GetTechAnalysisRequest_Deviation::ByteSizeLong,
            &GetTechAnalysisRequest_Deviation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Deviation, _impl_._cached_size_),
        false,
    },
    &GetTechAnalysisRequest_Deviation::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTechAnalysisRequest_Deviation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetTechAnalysisRequest_Deviation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Deviation, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Deviation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tinkoff.public.invest.api.contract.v1.Quotation deviation_multiplier = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Deviation, _impl_.deviation_multiplier_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.Quotation deviation_multiplier = 1;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest_Deviation, _impl_.deviation_multiplier_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetTechAnalysisRequest_Deviation::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.deviation_multiplier_ != nullptr);
    _impl_.deviation_multiplier_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTechAnalysisRequest_Deviation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTechAnalysisRequest_Deviation& this_ = static_cast<const GetTechAnalysisRequest_Deviation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTechAnalysisRequest_Deviation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTechAnalysisRequest_Deviation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tinkoff.public.invest.api.contract.v1.Quotation deviation_multiplier = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.deviation_multiplier_, this_._impl_.deviation_multiplier_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTechAnalysisRequest_Deviation::ByteSizeLong(const MessageLite& base) {
          const GetTechAnalysisRequest_Deviation& this_ = static_cast<const GetTechAnalysisRequest_Deviation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTechAnalysisRequest_Deviation::ByteSizeLong() const {
          const GetTechAnalysisRequest_Deviation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .tinkoff.public.invest.api.contract.v1.Quotation deviation_multiplier = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.deviation_multiplier_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTechAnalysisRequest_Deviation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTechAnalysisRequest_Deviation*>(&to_msg);
  auto& from = static_cast<const GetTechAnalysisRequest_Deviation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.deviation_multiplier_ != nullptr);
    if (_this->_impl_.deviation_multiplier_ == nullptr) {
      _this->_impl_.deviation_multiplier_ =
          ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.deviation_multiplier_);
    } else {
      _this->_impl_.deviation_multiplier_->MergeFrom(*from._impl_.deviation_multiplier_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTechAnalysisRequest_Deviation::CopyFrom(const GetTechAnalysisRequest_Deviation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTechAnalysisRequest_Deviation::InternalSwap(GetTechAnalysisRequest_Deviation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.deviation_multiplier_, other->_impl_.deviation_multiplier_);
}

::google::protobuf::Metadata GetTechAnalysisRequest_Deviation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTechAnalysisRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetTechAnalysisRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_._has_bits_);
};

void GetTechAnalysisRequest::clear_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.from_ != nullptr) _impl_.from_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetTechAnalysisRequest::clear_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.to_ != nullptr) _impl_.to_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetTechAnalysisRequest::GetTechAnalysisRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTechAnalysisRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        instrument_uid_(arena, from.instrument_uid_) {}

GetTechAnalysisRequest::GetTechAnalysisRequest(
    ::google::protobuf::Arena* arena,
    const GetTechAnalysisRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTechAnalysisRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.from_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.from_)
                        : nullptr;
  _impl_.to_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.to_)
                        : nullptr;
  _impl_.deviation_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Deviation>(
                              arena, *from._impl_.deviation_)
                        : nullptr;
  _impl_.smoothing_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Smoothing>(
                              arena, *from._impl_.smoothing_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, indicator_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, indicator_type_),
           offsetof(Impl_, length_) -
               offsetof(Impl_, indicator_type_) +
               sizeof(Impl_::length_));

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetTechAnalysisRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        instrument_uid_(arena) {}

inline void GetTechAnalysisRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, from_),
           0,
           offsetof(Impl_, length_) -
               offsetof(Impl_, from_) +
               sizeof(Impl_::length_));
}
GetTechAnalysisRequest::~GetTechAnalysisRequest() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest)
  SharedDtor(*this);
}
inline void GetTechAnalysisRequest::SharedDtor(MessageLite& self) {
  GetTechAnalysisRequest& this_ = static_cast<GetTechAnalysisRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.instrument_uid_.Destroy();
  delete this_._impl_.from_;
  delete this_._impl_.to_;
  delete this_._impl_.deviation_;
  delete this_._impl_.smoothing_;
  this_._impl_.~Impl_();
}

inline void* GetTechAnalysisRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTechAnalysisRequest(arena);
}
constexpr auto GetTechAnalysisRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetTechAnalysisRequest),
                                            alignof(GetTechAnalysisRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTechAnalysisRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTechAnalysisRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTechAnalysisRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTechAnalysisRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTechAnalysisRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTechAnalysisRequest>(), &GetTechAnalysisRequest::ByteSizeLong,
            &GetTechAnalysisRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_._cached_size_),
        false,
    },
    &GetTechAnalysisRequest::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTechAnalysisRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 4, 91, 2> GetTechAnalysisRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorType indicator_type = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTechAnalysisRequest, _impl_.indicator_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.indicator_type_)}},
    // string instrument_uid = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.instrument_uid_)}},
    // .google.protobuf.Timestamp from = 3 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.from_)}},
    // .google.protobuf.Timestamp to = 4 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.to_)}},
    // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorInterval interval = 5 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTechAnalysisRequest, _impl_.interval_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.interval_)}},
    // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.TypeOfPrice type_of_price = 6 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTechAnalysisRequest, _impl_.type_of_price_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.type_of_price_)}},
    // int32 length = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetTechAnalysisRequest, _impl_.length_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.length_)}},
    // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation deviation = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 2, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.deviation_)}},
    // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing smoothing = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 3, 3, PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.smoothing_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorType indicator_type = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.indicator_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string instrument_uid = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.instrument_uid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp from = 3 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.from_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp to = 4 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.to_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorInterval interval = 5 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.interval_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.TypeOfPrice type_of_price = 6 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.type_of_price_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 length = 7;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation deviation = 8;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.deviation_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing smoothing = 9;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.smoothing_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Deviation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Smoothing>()},
  }}, {{
    "\74\0\16\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest"
    "instrument_uid"
  }},
};

PROTOBUF_NOINLINE void GetTechAnalysisRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instrument_uid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.from_ != nullptr);
      _impl_.from_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.to_ != nullptr);
      _impl_.to_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.deviation_ != nullptr);
      _impl_.deviation_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.smoothing_ != nullptr);
      _impl_.smoothing_->Clear();
    }
  }
  ::memset(&_impl_.indicator_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.length_) -
      reinterpret_cast<char*>(&_impl_.indicator_type_)) + sizeof(_impl_.length_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTechAnalysisRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTechAnalysisRequest& this_ = static_cast<const GetTechAnalysisRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTechAnalysisRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTechAnalysisRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorType indicator_type = 1 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_indicator_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_indicator_type(), target);
          }

          // string instrument_uid = 2 [(.google.api.field_behavior) = REQUIRED];
          if (!this_._internal_instrument_uid().empty()) {
            const std::string& _s = this_._internal_instrument_uid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.instrument_uid");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp from = 3 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.from_, this_._impl_.from_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp to = 4 [(.google.api.field_behavior) = REQUIRED];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.to_, this_._impl_.to_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorInterval interval = 5 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_interval() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_interval(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.TypeOfPrice type_of_price = 6 [(.google.api.field_behavior) = REQUIRED];
          if (this_._internal_type_of_price() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_type_of_price(), target);
          }

          // int32 length = 7;
          if (this_._internal_length() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_length(), target);
          }

          // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation deviation = 8;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.deviation_, this_._impl_.deviation_->GetCachedSize(), target,
                stream);
          }

          // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing smoothing = 9;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.smoothing_, this_._impl_.smoothing_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTechAnalysisRequest::ByteSizeLong(const MessageLite& base) {
          const GetTechAnalysisRequest& this_ = static_cast<const GetTechAnalysisRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTechAnalysisRequest::ByteSizeLong() const {
          const GetTechAnalysisRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string instrument_uid = 2 [(.google.api.field_behavior) = REQUIRED];
            if (!this_._internal_instrument_uid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_instrument_uid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .google.protobuf.Timestamp from = 3 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.from_);
            }
            // .google.protobuf.Timestamp to = 4 [(.google.api.field_behavior) = REQUIRED];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.to_);
            }
            // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Deviation deviation = 8;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.deviation_);
            }
            // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.Smoothing smoothing = 9;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.smoothing_);
            }
          }
           {
            // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorType indicator_type = 1 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_indicator_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_indicator_type());
            }
            // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.IndicatorInterval interval = 5 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_interval() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_interval());
            }
            // .tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest.TypeOfPrice type_of_price = 6 [(.google.api.field_behavior) = REQUIRED];
            if (this_._internal_type_of_price() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type_of_price());
            }
            // int32 length = 7;
            if (this_._internal_length() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_length());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTechAnalysisRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTechAnalysisRequest*>(&to_msg);
  auto& from = static_cast<const GetTechAnalysisRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_instrument_uid().empty()) {
    _this->_internal_set_instrument_uid(from._internal_instrument_uid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.from_ != nullptr);
      if (_this->_impl_.from_ == nullptr) {
        _this->_impl_.from_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.from_);
      } else {
        _this->_impl_.from_->MergeFrom(*from._impl_.from_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.to_ != nullptr);
      if (_this->_impl_.to_ == nullptr) {
        _this->_impl_.to_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.to_);
      } else {
        _this->_impl_.to_->MergeFrom(*from._impl_.to_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.deviation_ != nullptr);
      if (_this->_impl_.deviation_ == nullptr) {
        _this->_impl_.deviation_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Deviation>(arena, *from._impl_.deviation_);
      } else {
        _this->_impl_.deviation_->MergeFrom(*from._impl_.deviation_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.smoothing_ != nullptr);
      if (_this->_impl_.smoothing_ == nullptr) {
        _this->_impl_.smoothing_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisRequest_Smoothing>(arena, *from._impl_.smoothing_);
      } else {
        _this->_impl_.smoothing_->MergeFrom(*from._impl_.smoothing_);
      }
    }
  }
  if (from._internal_indicator_type() != 0) {
    _this->_impl_.indicator_type_ = from._impl_.indicator_type_;
  }
  if (from._internal_interval() != 0) {
    _this->_impl_.interval_ = from._impl_.interval_;
  }
  if (from._internal_type_of_price() != 0) {
    _this->_impl_.type_of_price_ = from._impl_.type_of_price_;
  }
  if (from._internal_length() != 0) {
    _this->_impl_.length_ = from._impl_.length_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTechAnalysisRequest::CopyFrom(const GetTechAnalysisRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTechAnalysisRequest::InternalSwap(GetTechAnalysisRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instrument_uid_, &other->_impl_.instrument_uid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.length_)
      + sizeof(GetTechAnalysisRequest::_impl_.length_)
      - PROTOBUF_FIELD_OFFSET(GetTechAnalysisRequest, _impl_.from_)>(
          reinterpret_cast<char*>(&_impl_.from_),
          reinterpret_cast<char*>(&other->_impl_.from_));
}

::google::protobuf::Metadata GetTechAnalysisRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTechAnalysisResponse_TechAnalysisItem::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GetTechAnalysisResponse_TechAnalysisItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_._has_bits_);
};

void GetTechAnalysisResponse_TechAnalysisItem::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetTechAnalysisResponse_TechAnalysisItem::clear_middle_band() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.middle_band_ != nullptr) _impl_.middle_band_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GetTechAnalysisResponse_TechAnalysisItem::clear_upper_band() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_band_ != nullptr) _impl_.upper_band_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GetTechAnalysisResponse_TechAnalysisItem::clear_lower_band() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lower_band_ != nullptr) _impl_.lower_band_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void GetTechAnalysisResponse_TechAnalysisItem::clear_signal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.signal_ != nullptr) _impl_.signal_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void GetTechAnalysisResponse_TechAnalysisItem::clear_macd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.macd_ != nullptr) _impl_.macd_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
GetTechAnalysisResponse_TechAnalysisItem::GetTechAnalysisResponse_TechAnalysisItem(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem)
}
inline PROTOBUF_NDEBUG_INLINE GetTechAnalysisResponse_TechAnalysisItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetTechAnalysisResponse_TechAnalysisItem::GetTechAnalysisResponse_TechAnalysisItem(
    ::google::protobuf::Arena* arena,
    const GetTechAnalysisResponse_TechAnalysisItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTechAnalysisResponse_TechAnalysisItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.timestamp_)
                        : nullptr;
  _impl_.middle_band_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.middle_band_)
                        : nullptr;
  _impl_.upper_band_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.upper_band_)
                        : nullptr;
  _impl_.lower_band_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.lower_band_)
                        : nullptr;
  _impl_.signal_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.signal_)
                        : nullptr;
  _impl_.macd_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(
                              arena, *from._impl_.macd_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem)
}
inline PROTOBUF_NDEBUG_INLINE GetTechAnalysisResponse_TechAnalysisItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GetTechAnalysisResponse_TechAnalysisItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, macd_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::macd_));
}
GetTechAnalysisResponse_TechAnalysisItem::~GetTechAnalysisResponse_TechAnalysisItem() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem)
  SharedDtor(*this);
}
inline void GetTechAnalysisResponse_TechAnalysisItem::SharedDtor(MessageLite& self) {
  GetTechAnalysisResponse_TechAnalysisItem& this_ = static_cast<GetTechAnalysisResponse_TechAnalysisItem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.timestamp_;
  delete this_._impl_.middle_band_;
  delete this_._impl_.upper_band_;
  delete this_._impl_.lower_band_;
  delete this_._impl_.signal_;
  delete this_._impl_.macd_;
  this_._impl_.~Impl_();
}

inline void* GetTechAnalysisResponse_TechAnalysisItem::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTechAnalysisResponse_TechAnalysisItem(arena);
}
constexpr auto GetTechAnalysisResponse_TechAnalysisItem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetTechAnalysisResponse_TechAnalysisItem),
                                            alignof(GetTechAnalysisResponse_TechAnalysisItem));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTechAnalysisResponse_TechAnalysisItem::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTechAnalysisResponse_TechAnalysisItem_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTechAnalysisResponse_TechAnalysisItem::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTechAnalysisResponse_TechAnalysisItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTechAnalysisResponse_TechAnalysisItem::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTechAnalysisResponse_TechAnalysisItem>(), &GetTechAnalysisResponse_TechAnalysisItem::ByteSizeLong,
            &GetTechAnalysisResponse_TechAnalysisItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_._cached_size_),
        false,
    },
    &GetTechAnalysisResponse_TechAnalysisItem::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTechAnalysisResponse_TechAnalysisItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 6, 0, 2> GetTechAnalysisResponse_TechAnalysisItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp timestamp = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.timestamp_)}},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation middle_band = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.middle_band_)}},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation upper_band = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.upper_band_)}},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation lower_band = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.lower_band_)}},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation signal = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.signal_)}},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation macd = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 5, PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.macd_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation middle_band = 2;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.middle_band_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation upper_band = 3;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.upper_band_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation lower_band = 4;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.lower_band_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation signal = 5;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.signal_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .tinkoff.public.invest.api.contract.v1.Quotation macd = 6;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.macd_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::Quotation>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetTechAnalysisResponse_TechAnalysisItem::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.middle_band_ != nullptr);
      _impl_.middle_band_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.upper_band_ != nullptr);
      _impl_.upper_band_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.lower_band_ != nullptr);
      _impl_.lower_band_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.signal_ != nullptr);
      _impl_.signal_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.macd_ != nullptr);
      _impl_.macd_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTechAnalysisResponse_TechAnalysisItem::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTechAnalysisResponse_TechAnalysisItem& this_ = static_cast<const GetTechAnalysisResponse_TechAnalysisItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTechAnalysisResponse_TechAnalysisItem::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTechAnalysisResponse_TechAnalysisItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp timestamp = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
                stream);
          }

          // optional .tinkoff.public.invest.api.contract.v1.Quotation middle_band = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.middle_band_, this_._impl_.middle_band_->GetCachedSize(), target,
                stream);
          }

          // optional .tinkoff.public.invest.api.contract.v1.Quotation upper_band = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.upper_band_, this_._impl_.upper_band_->GetCachedSize(), target,
                stream);
          }

          // optional .tinkoff.public.invest.api.contract.v1.Quotation lower_band = 4;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.lower_band_, this_._impl_.lower_band_->GetCachedSize(), target,
                stream);
          }

          // optional .tinkoff.public.invest.api.contract.v1.Quotation signal = 5;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.signal_, this_._impl_.signal_->GetCachedSize(), target,
                stream);
          }

          // optional .tinkoff.public.invest.api.contract.v1.Quotation macd = 6;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.macd_, this_._impl_.macd_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTechAnalysisResponse_TechAnalysisItem::ByteSizeLong(const MessageLite& base) {
          const GetTechAnalysisResponse_TechAnalysisItem& this_ = static_cast<const GetTechAnalysisResponse_TechAnalysisItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTechAnalysisResponse_TechAnalysisItem::ByteSizeLong() const {
          const GetTechAnalysisResponse_TechAnalysisItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // .google.protobuf.Timestamp timestamp = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
            }
            // optional .tinkoff.public.invest.api.contract.v1.Quotation middle_band = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.middle_band_);
            }
            // optional .tinkoff.public.invest.api.contract.v1.Quotation upper_band = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.upper_band_);
            }
            // optional .tinkoff.public.invest.api.contract.v1.Quotation lower_band = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.lower_band_);
            }
            // optional .tinkoff.public.invest.api.contract.v1.Quotation signal = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.signal_);
            }
            // optional .tinkoff.public.invest.api.contract.v1.Quotation macd = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.macd_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTechAnalysisResponse_TechAnalysisItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTechAnalysisResponse_TechAnalysisItem*>(&to_msg);
  auto& from = static_cast<const GetTechAnalysisResponse_TechAnalysisItem&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.middle_band_ != nullptr);
      if (_this->_impl_.middle_band_ == nullptr) {
        _this->_impl_.middle_band_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.middle_band_);
      } else {
        _this->_impl_.middle_band_->MergeFrom(*from._impl_.middle_band_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.upper_band_ != nullptr);
      if (_this->_impl_.upper_band_ == nullptr) {
        _this->_impl_.upper_band_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.upper_band_);
      } else {
        _this->_impl_.upper_band_->MergeFrom(*from._impl_.upper_band_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.lower_band_ != nullptr);
      if (_this->_impl_.lower_band_ == nullptr) {
        _this->_impl_.lower_band_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.lower_band_);
      } else {
        _this->_impl_.lower_band_->MergeFrom(*from._impl_.lower_band_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.signal_ != nullptr);
      if (_this->_impl_.signal_ == nullptr) {
        _this->_impl_.signal_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.signal_);
      } else {
        _this->_impl_.signal_->MergeFrom(*from._impl_.signal_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.macd_ != nullptr);
      if (_this->_impl_.macd_ == nullptr) {
        _this->_impl_.macd_ =
            ::google::protobuf::Message::CopyConstruct<::tinkoff::public_::invest::api::contract::v1::Quotation>(arena, *from._impl_.macd_);
      } else {
        _this->_impl_.macd_->MergeFrom(*from._impl_.macd_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTechAnalysisResponse_TechAnalysisItem::CopyFrom(const GetTechAnalysisResponse_TechAnalysisItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTechAnalysisResponse_TechAnalysisItem::InternalSwap(GetTechAnalysisResponse_TechAnalysisItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.macd_)
      + sizeof(GetTechAnalysisResponse_TechAnalysisItem::_impl_.macd_)
      - PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse_TechAnalysisItem, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata GetTechAnalysisResponse_TechAnalysisItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTechAnalysisResponse::_Internal {
 public:
};

GetTechAnalysisResponse::GetTechAnalysisResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTechAnalysisResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse& from_msg)
      : technical_indicators_{visibility, arena, from.technical_indicators_},
        _cached_size_{0} {}

GetTechAnalysisResponse::GetTechAnalysisResponse(
    ::google::protobuf::Arena* arena,
    const GetTechAnalysisResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTechAnalysisResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetTechAnalysisResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : technical_indicators_{visibility, arena},
        _cached_size_{0} {}

inline void GetTechAnalysisResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetTechAnalysisResponse::~GetTechAnalysisResponse() {
  // @@protoc_insertion_point(destructor:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse)
  SharedDtor(*this);
}
inline void GetTechAnalysisResponse::SharedDtor(MessageLite& self) {
  GetTechAnalysisResponse& this_ = static_cast<GetTechAnalysisResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetTechAnalysisResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetTechAnalysisResponse(arena);
}
constexpr auto GetTechAnalysisResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse, _impl_.technical_indicators_) +
          decltype(GetTechAnalysisResponse::_impl_.technical_indicators_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetTechAnalysisResponse), alignof(GetTechAnalysisResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetTechAnalysisResponse::PlacementNew_,
                                 sizeof(GetTechAnalysisResponse),
                                 alignof(GetTechAnalysisResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetTechAnalysisResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetTechAnalysisResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetTechAnalysisResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetTechAnalysisResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetTechAnalysisResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetTechAnalysisResponse>(), &GetTechAnalysisResponse::ByteSizeLong,
            &GetTechAnalysisResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse, _impl_._cached_size_),
        false,
    },
    &GetTechAnalysisResponse::kDescriptorMethods,
    &descriptor_table_marketdata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetTechAnalysisResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GetTechAnalysisResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem technical_indicators = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse, _impl_.technical_indicators_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem technical_indicators = 1;
    {PROTOBUF_FIELD_OFFSET(GetTechAnalysisResponse, _impl_.technical_indicators_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tinkoff::public_::invest::api::contract::v1::GetTechAnalysisResponse_TechAnalysisItem>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GetTechAnalysisResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.technical_indicators_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetTechAnalysisResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetTechAnalysisResponse& this_ = static_cast<const GetTechAnalysisResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetTechAnalysisResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetTechAnalysisResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem technical_indicators = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_technical_indicators_size());
               i < n; i++) {
            const auto& repfield = this_._internal_technical_indicators().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetTechAnalysisResponse::ByteSizeLong(const MessageLite& base) {
          const GetTechAnalysisResponse& this_ = static_cast<const GetTechAnalysisResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetTechAnalysisResponse::ByteSizeLong() const {
          const GetTechAnalysisResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse.TechAnalysisItem technical_indicators = 1;
            {
              total_size += 1UL * this_._internal_technical_indicators_size();
              for (const auto& msg : this_._internal_technical_indicators()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetTechAnalysisResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTechAnalysisResponse*>(&to_msg);
  auto& from = static_cast<const GetTechAnalysisResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_technical_indicators()->MergeFrom(
      from._internal_technical_indicators());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTechAnalysisResponse::CopyFrom(const GetTechAnalysisResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinkoff.public.invest.api.contract.v1.GetTechAnalysisResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTechAnalysisResponse::InternalSwap(GetTechAnalysisResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.technical_indicators_.InternalSwap(&other->_impl_.technical_indicators_);
}

::google::protobuf::Metadata GetTechAnalysisResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace contract
}  // namespace api
}  // namespace invest
}  // namespace public_
}  // namespace tinkoff
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_marketdata_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
