name: Nightly

on:
  schedule:
    - cron: "0 21 * * *"

# Setup environment variables
env:
  QT_MIRRORS:          "download.qt.io;mirrors.ocf.berkeley.edu/qt;ftp.fau.de/qtproject;mirror.bit.edu.cn/qtproject"
  QT_VERSION:          "6.9.0"
  QTC_VERSION:         "16.0.1"
  ZLIB_VERSION:        "v1.3.1"
  QUAZIP_VERSION:      "v1.5"
  VCPKG_VERSION:       "2025.04.09"
  CLANG_VERSION:       "20.1.7"
  GOOGLE_TEST_VERSION: "v1.16.0"
  GIST_ID:             "c6ca4b78912b06400bb99a569cc9fccd"

# List of jobs
jobs:
  # Setup environment and upload artifacts
  env-qt-zlib-quazip:
    name: Environment Qt/ZLib/Quazip [${{ matrix.config.name }}]
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local env-qt-zlib-quazip action
      - name: Use local env-qt-zlib-quazip action
        uses: ./.github/actions/env-qt-zlib-quazip

  # Setup environment and upload artifacts
  env-vcpkg:
    name: Environment vcpkg [${{ matrix.config.name }}]
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local env-vcpkg action
      - name: Use local env-vcpkg action
        uses: ./.github/actions/env-vcpkg

  # Build project in debug
  build-debug:
    needs: [env-qt-zlib-quazip, env-vcpkg]
    name: Build debug [${{ matrix.config.name }}]
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local build-debug action
      - name: Use local build-debug action
        uses: ./.github/actions/build-debug

  # Run clang-tidy
  clang-tidy:
    needs: [env-qt-zlib-quazip, env-vcpkg, build-debug]
    name: Clang-Tidy [${{ matrix.config.name }}] (${{ matrix.part }}/10)
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
        part: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local clang-tidy action
      - name: Use local clang-tidy action
        uses: ./.github/actions/clang-tidy

  # Run clazy
  clazy:
    needs: [env-qt-zlib-quazip, env-vcpkg, build-debug]
    name: Clazy [${{ matrix.config.name }}] (${{ matrix.part }}/10)
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
        part: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local clazy action
      - name: Use local clazy action
        uses: ./.github/actions/clazy
