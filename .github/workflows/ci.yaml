name: CI

on: [push]

# Setup environment variables
env:
  QT_MIRRORS:          "download.qt.io;mirrors.ocf.berkeley.edu/qt;ftp.fau.de/qtproject;mirror.bit.edu.cn/qtproject"
  QT_VERSION:          "6.9.0"
  QTC_VERSION:         "16.0.1"
  ZLIB_VERSION:        "v1.3.1"
  QUAZIP_VERSION:      "v1.5"
  VCPKG_VERSION:       "2025.04.09"
  CLANG_VERSION:       "20.1.3"
  GOOGLE_TEST_VERSION: "v1.16.0"
  GIST_ID:             "c6ca4b78912b06400bb99a569cc9fccd"

# List of jobs
jobs:
  # Setup environment and upload artifacts
  env-qt-zlib-quazip:
    name: Environment Qt/ZLib/Quazip [${{ matrix.config.name }}]
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local env-qt-zlib-quazip action
      - name: Use local env-qt-zlib-quazip action
        uses: ./.github/actions/env-qt-zlib-quazip

  # Setup environment and upload artifacts
  env-vcpkg:
    name: Environment vcpkg [${{ matrix.config.name }}]
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local env-vcpkg action
      - name: Use local env-vcpkg action
        uses: ./.github/actions/env-vcpkg

  # Check style
  check-style:
    name: Check style [${{ matrix.config.name }}]
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local check-style action
      - name: Use local check-style action
        uses: ./.github/actions/check-style

  # Build project in Debug
  build-debug:
    needs: [env-qt-zlib-quazip, env-vcpkg]
    name: Build Debug [${{ matrix.config.name }}]
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local build-debug action
      - name: Use local build-debug action
        uses: ./.github/actions/build-debug

  # Build project in Release
  build-release:
    needs: [env-qt-zlib-quazip, env-vcpkg]
    name: Build Release [${{ matrix.config.name }}]
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local build-release action
      - name: Use local build-release action
        uses: ./.github/actions/build-release

  # Test project
  test:
    needs: [build-debug, build-release]
    name: Test [${{ matrix.config.name }}]
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local test action
      - name: Use local test action
        uses: ./.github/actions/test
        with:
          gist-token: ${{ secrets.GIST_TOKEN }}

  # Generate documentation
  doc:
    name: Documentation [${{ matrix.config.name }}]
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local doc action
      - name: Use local doc action
        uses: ./.github/actions/doc

  # Release job.
  # Provides meta information for release.
  # This job is only used when github.ref contains /tags/
  # It should be first in order to upload release artifacts.
  create-release:
    needs: [check-style, test, doc]
    name: Create release
    if: contains(github.ref, '/tags/')
    runs-on: ubuntu-latest

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local create-release action
      - name: Use local create-release action
        uses: ./.github/actions/create-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  # Publish Release
  publish-release:
    needs: [build-release, doc, create-release]
    name: Publish Release [${{ matrix.config.name }}]
    if: contains(github.ref, '/tags/')
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "win64", os: windows-latest }
          - { name: "linux", os: ubuntu-latest }
      fail-fast: false

    steps:
      # Checkout actions from latest commit
      - name: Checkout actions from latest commit
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github

      # Use local publish-release action
      - name: Use local publish-release action
        uses: ./.github/actions/publish-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
